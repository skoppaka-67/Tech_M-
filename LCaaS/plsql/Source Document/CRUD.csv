component_name,component_type,Table,CRUD,SQL
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMK_INV_ERROR_LOG,CREATE,"  INSERT INTO RMK_INV_ERROR_LOG (ERR_ID,  Module_Name,  Error_Message,  CREATION_DATE)  VALUES (l_errid,  v_message,  SYSDATE);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_BTS_CYCLE_UPLOAD_DATA,CREATE,"  INSERT INTO RC_BTS_CYCLE_UPLOAD_DATA (REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  ADJ_NROHS_QTY,  UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  V_ATTR1)  VALUES (  rc_bts_inv_seq.NEXTVAL,  ltab_bts_data_tab (rec).REFRESH_PART_NUMBER,  ltab_bts_data_tab (rec).TAN_ID,  ltab_bts_data_tab (rec).SITE_ID,  ltab_bts_data_tab (rec).CYCLE_ROHS_CNT,  ltab_bts_data_tab (rec).CYCLE_NROHS_CNT,  ltab_bts_data_tab (rec).IFS_ROHS_CNT,  ltab_bts_data_tab (rec).IFS_NROHS_CNT,  ltab_bts_data_tab (rec).USER_COMMENTS,  ltab_bts_data_tab (rec).CYCLE_ROHS_CNT  ltab_bts_data_tab (rec).CYCLE_NROHS_CNT  SYSDATE,  i_login_user, --ltab_bts_data_tab (rec).UPLOADED_BY,  UPPER (  TRIM (ltab_bts_data_tab (rec).FILE_NAME)),  lv_upload_id);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,XXCPO_RMK_INV_MASTER_TEMP,CREATE,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Retail'  AND rohs_compliant = 'YES';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Retail'  AND rohs_compliant = 'YES';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,XXCPO_RMK_INV_MASTER_TEMP,CREATE,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Outlet'  AND rohs_compliant = 'YES';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Outlet'  AND rohs_compliant = 'YES';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,XXCPO_RMK_INV_MASTER_TEMP,CREATE,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Retail'  AND rohs_compliant = 'NO';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Retail'  AND rohs_compliant = 'NO';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,XXCPO_RMK_INV_MASTER_TEMP,CREATE,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Outlet'  AND rohs_compliant = 'NO';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,  INSERT INTO XXCPO_RMK_INV_MASTER_TEMP  SELECT *  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Outlet'  AND rohs_compliant = 'NO';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,rc_bts_cycle_upload_data rbc,UPDATE,"  UPDATE rc_bts_cycle_upload_data rbc  SET is_bts_processed =  ltab_bts_cycle_data (indx).is_bts_processed,  d_attr1 = SYSDATE, --BTS processed updated Date  v_attr3 = i_login_user --BTS processed updated By  WHERE rbc.request_id = ltab_bts_cycle_data (indx).request_id;"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,rc_bts_cycle_upload_data rbc,UPDATE,"  UPDATE rc_bts_cycle_upload_data rbc  SET adj_rohs_qty = ltab_bts_cycle_data (rec).adj_rohs_qty,  adj_nrohs_qty = ltab_bts_cycle_data (rec).adj_nrohs_qty,  approver_comments =  ltab_bts_cycle_data (rec).approver_comments,  action = ltab_bts_cycle_data (rec).action,  is_bts_processed =  ltab_bts_cycle_data (rec).is_bts_processed,  processed_date = SYSDATE,  processed_by = i_login_user  WHERE rbc.request_id = ltab_bts_cycle_data (rec).request_id;"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RMK_INV_ERROR_S.NEXTVAL INTO l_errid FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RMK_INV_ERROR_S.NEXTVAL INTO l_errid FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE (CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)),READ,"  SELECT *  FROM TABLE (CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB));
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,  SELECT COUNT (1)  INTO lv_invalid_data_cnt  FROM TABLE (CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE tab_data.SITE_ID != lv_site_code;
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,rc_bts_cycle_upload_data,READ,"  SELECT LISTAGG (v_attr1, ',')  WITHIN GROUP (ORDER BY v_attr1, ',')  INTO lv_bts_files  FROM rc_bts_cycle_upload_data  WHERE TRUNC (UPLOADED_DATE) = TRUNC (SYSDATE)  GROUP BY v_attr1  HAVING COUNT (*) = lv_upld_rec_cnt;"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL  CONNECT BY REGEXP_SUBSTR (lv_bts_files,READ,"  FOR rec IN ( SELECT DISTINCT REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  file_name  FROM DUAL  CONNECT BY REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  IS NOT NULL)  LOOP  BEGIN  SELECT DECODE (COUNT (1), 0, 'YES', 'NO')  INTO lv_dataExists_flag  FROM TABLE (  CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM rc_bts_cycle_upload_data rbc  WHERE 1 = 1 --rbc.v_attr1=rec.file_name  AND refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id  AND site_id = tab_data.site_id  AND cycle_rohs_cnt =  tab_data.cycle_rohs_cnt  AND cycle_nrohs_cnt =  tab_data.cycle_nrohs_cnt  AND ifs_rohs_cnt =  tab_data.ifs_rohs_cnt  AND ifs_nrohs_cnt =  tab_data.ifs_nrohs_cnt  AND TRUNC (uploaded_date) =  TRUNC (SYSDATE));
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,1,READ,"  FOR rec IN ( SELECT DISTINCT REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  file_name  FROM DUAL  CONNECT BY REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  IS NOT NULL)  LOOP  BEGIN  SELECT DECODE (COUNT (1), 0, 'YES', 'NO')  INTO lv_dataExists_flag  FROM TABLE (  CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM rc_bts_cycle_upload_data rbc  WHERE 1 = 1 --rbc.v_attr1=rec.file_name  AND refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id  AND site_id = tab_data.site_id  AND cycle_rohs_cnt =  tab_data.cycle_rohs_cnt  AND cycle_nrohs_cnt =  tab_data.cycle_nrohs_cnt  AND ifs_rohs_cnt =  tab_data.ifs_rohs_cnt  AND ifs_nrohs_cnt =  tab_data.ifs_nrohs_cnt  AND TRUNC (uploaded_date) =  TRUNC (SYSDATE));
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,LEVEL)  IS NOT NULL)  LOOP  BEGIN,READ,"  FOR rec IN ( SELECT DISTINCT REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  file_name  FROM DUAL  CONNECT BY REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  IS NOT NULL)  LOOP  BEGIN  SELECT DECODE (COUNT (1), 0, 'YES', 'NO')  INTO lv_dataExists_flag  FROM TABLE (  CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM rc_bts_cycle_upload_data rbc  WHERE 1 = 1 --rbc.v_attr1=rec.file_name  AND refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id  AND site_id = tab_data.site_id  AND cycle_rohs_cnt =  tab_data.cycle_rohs_cnt  AND cycle_nrohs_cnt =  tab_data.cycle_nrohs_cnt  AND ifs_rohs_cnt =  tab_data.ifs_rohs_cnt  AND ifs_nrohs_cnt =  tab_data.ifs_nrohs_cnt  AND TRUNC (uploaded_date) =  TRUNC (SYSDATE));
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,"  FOR rec IN ( SELECT DISTINCT REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  file_name  FROM DUAL  CONNECT BY REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  IS NOT NULL)  LOOP  BEGIN  SELECT DECODE (COUNT (1), 0, 'YES', 'NO')  INTO lv_dataExists_flag  FROM TABLE (  CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM rc_bts_cycle_upload_data rbc  WHERE 1 = 1 --rbc.v_attr1=rec.file_name  AND refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id  AND site_id = tab_data.site_id  AND cycle_rohs_cnt =  tab_data.cycle_rohs_cnt  AND cycle_nrohs_cnt =  tab_data.cycle_nrohs_cnt  AND ifs_rohs_cnt =  tab_data.ifs_rohs_cnt  AND ifs_nrohs_cnt =  tab_data.ifs_nrohs_cnt  AND TRUNC (uploaded_date) =  TRUNC (SYSDATE));"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,rc_bts_cycle_upload_data,READ,"  FOR rec IN ( SELECT DISTINCT REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  file_name  FROM DUAL  CONNECT BY REGEXP_SUBSTR (lv_bts_files,  1,  LEVEL)  IS NOT NULL)  LOOP  BEGIN  SELECT DECODE (COUNT (1), 0, 'YES', 'NO')  INTO lv_dataExists_flag  FROM TABLE (  CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM rc_bts_cycle_upload_data rbc  WHERE 1 = 1 --rbc.v_attr1=rec.file_name  AND refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id  AND site_id = tab_data.site_id  AND cycle_rohs_cnt =  tab_data.cycle_rohs_cnt  AND cycle_nrohs_cnt =  tab_data.cycle_nrohs_cnt  AND ifs_rohs_cnt =  tab_data.ifs_rohs_cnt  AND ifs_nrohs_cnt =  tab_data.ifs_nrohs_cnt  AND TRUNC (uploaded_date) =  TRUNC (SYSDATE));"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,  SELECT COUNT (1)  INTO lv_unmatched_cnt  FROM TABLE (CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM crpadm.rc_product_master rpm  WHERE refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id);
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,crpadm.rc_product_master,READ,  SELECT COUNT (1)  INTO lv_unmatched_cnt  FROM TABLE (CAST (ltab_bts_data_tab AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE NOT EXISTS  (SELECT 1  FROM crpadm.rc_product_master rpm  WHERE refresh_part_number =  tab_data.refresh_part_number  AND tan_id = tab_data.tan_id);
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,crpadm.rc_product_master,READ,  SELECT COUNT (1)  INTO lv_part_exists_cnt  FROM crpadm.rc_product_master rpm  WHERE refresh_part_number =  ltab_bts_data_tab (rec).refresh_part_number  AND tan_id = ltab_bts_data_tab (rec).tan_id;
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_BTS_CYCLE_UPLOAD_DATA,READ,"  || ' SELECT REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_RHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN NVL(SP.FVE_RHS_QUANTITY,0)  ELSE 0  END  STRATEGIC_MASKED_QTY_RHS,  ADJ_NROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_NRHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN 0  ELSE 0  END  STRATEGIC_MASKED_QTY_NONROHS,  TO_CHAR (UPLOADED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  APPROVER_COMMENTS,  ACTION,  IS_BTS_PROCESSED,  TO_CHAR (PROCESSED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') PROCESSED_DATE,  PROCESSED_BY,  V_ATTR1,  V_ATTR2,  V_ATTR3,  V_ATTR4,  N_ATTR1,  N_ATTR2,  N_ATTR3,  N_ATTR4,  D_ATTR1,  D_ATTR2,  D_ATTR3,  D_ATTR4  FROM RC_BTS_CYCLE_UPLOAD_DATA bts  LEFT OUTER JOIN (SELECT partnumber,  LRO_RHS_QUANTITY,  LRO_NRHS_QUANTITY,  FVE_RHS_QUANTITY,  TOTAL_QUANTITY,  CREATED_ON  FROM RC_INV_STR_INV_MASK_MV  WHERE TRUNC (CREATED_ON) =  (SELECT TRUNC (MAX (CREATED_ON)) FROM RC_INV_STR_INV_MASK_MV)  ) SP  ON (BTS.REFRESH_PART_NUMBER = SP.PARTNUMBER) ';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,,READ,"  || ' SELECT REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_RHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN NVL(SP.FVE_RHS_QUANTITY,0)  ELSE 0  END  STRATEGIC_MASKED_QTY_RHS,  ADJ_NROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_NRHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN 0  ELSE 0  END  STRATEGIC_MASKED_QTY_NONROHS,  TO_CHAR (UPLOADED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  APPROVER_COMMENTS,  ACTION,  IS_BTS_PROCESSED,  TO_CHAR (PROCESSED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') PROCESSED_DATE,  PROCESSED_BY,  V_ATTR1,  V_ATTR2,  V_ATTR3,  V_ATTR4,  N_ATTR1,  N_ATTR2,  N_ATTR3,  N_ATTR4,  D_ATTR1,  D_ATTR2,  D_ATTR3,  D_ATTR4  FROM RC_BTS_CYCLE_UPLOAD_DATA bts  LEFT OUTER JOIN (SELECT partnumber,  LRO_RHS_QUANTITY,  LRO_NRHS_QUANTITY,  FVE_RHS_QUANTITY,  TOTAL_QUANTITY,  CREATED_ON  FROM RC_INV_STR_INV_MASK_MV  WHERE TRUNC (CREATED_ON) =  (SELECT TRUNC (MAX (CREATED_ON)) FROM RC_INV_STR_INV_MASK_MV)  ) SP  ON (BTS.REFRESH_PART_NUMBER = SP.PARTNUMBER) ';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_INV_STR_INV_MASK_MV,READ,"  || ' SELECT REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_RHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN NVL(SP.FVE_RHS_QUANTITY,0)  ELSE 0  END  STRATEGIC_MASKED_QTY_RHS,  ADJ_NROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_NRHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN 0  ELSE 0  END  STRATEGIC_MASKED_QTY_NONROHS,  TO_CHAR (UPLOADED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  APPROVER_COMMENTS,  ACTION,  IS_BTS_PROCESSED,  TO_CHAR (PROCESSED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') PROCESSED_DATE,  PROCESSED_BY,  V_ATTR1,  V_ATTR2,  V_ATTR3,  V_ATTR4,  N_ATTR1,  N_ATTR2,  N_ATTR3,  N_ATTR4,  D_ATTR1,  D_ATTR2,  D_ATTR3,  D_ATTR4  FROM RC_BTS_CYCLE_UPLOAD_DATA bts  LEFT OUTER JOIN (SELECT partnumber,  LRO_RHS_QUANTITY,  LRO_NRHS_QUANTITY,  FVE_RHS_QUANTITY,  TOTAL_QUANTITY,  CREATED_ON  FROM RC_INV_STR_INV_MASK_MV  WHERE TRUNC (CREATED_ON) =  (SELECT TRUNC (MAX (CREATED_ON)) FROM RC_INV_STR_INV_MASK_MV)  ) SP  ON (BTS.REFRESH_PART_NUMBER = SP.PARTNUMBER) ';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_INV_STR_INV_MASK_MV)  ) SP  ON (BTSREFRESH_PART_NUMBER = SPPARTNUMBER) ',READ,"  || ' SELECT REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_RHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN NVL(SP.FVE_RHS_QUANTITY,0)  ELSE 0  END  STRATEGIC_MASKED_QTY_RHS,  ADJ_NROHS_QTY,  CASE  WHEN SITE_ID = ''LRO'' THEN NVL(SP.LRO_NRHS_QUANTITY,0)  WHEN SITE_ID = ''FVE'' THEN 0  ELSE 0  END  STRATEGIC_MASKED_QTY_NONROHS,  TO_CHAR (UPLOADED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  APPROVER_COMMENTS,  ACTION,  IS_BTS_PROCESSED,  TO_CHAR (PROCESSED_DATE, ''DD-Mon-YYYY HH:Mi:SS'') PROCESSED_DATE,  PROCESSED_BY,  V_ATTR1,  V_ATTR2,  V_ATTR3,  V_ATTR4,  N_ATTR1,  N_ATTR2,  N_ATTR3,  N_ATTR4,  D_ATTR1,  D_ATTR2,  D_ATTR3,  D_ATTR4  FROM RC_BTS_CYCLE_UPLOAD_DATA bts  LEFT OUTER JOIN (SELECT partnumber,  LRO_RHS_QUANTITY,  LRO_NRHS_QUANTITY,  FVE_RHS_QUANTITY,  TOTAL_QUANTITY,  CREATED_ON  FROM RC_INV_STR_INV_MASK_MV  WHERE TRUNC (CREATED_ON) =  (SELECT TRUNC (MAX (CREATED_ON)) FROM RC_INV_STR_INV_MASK_MV)  ) SP  ON (BTS.REFRESH_PART_NUMBER = SP.PARTNUMBER) ';
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_BTS_CYCLE_UPLOAD_DATA,READ,"  (SELECT LISTAGG (refresh_part_number, '','')  WITHIN GROUP (ORDER BY refresh_part_number, '','')  FROM ( SELECT refresh_part_number  FROM RC_BTS_CYCLE_UPLOAD_DATA rbc  WHERE EXISTS  (SELECT 1  FROM ( SELECT DISTINCT  UPPER (  TRIM (REGEXP_SUBSTR ( '''  || lv_part_number  || ''',  1,  LEVEL)))  AS part  FROM DUAL  CONNECT BY REGEXP_SUBSTR ( '''  || lv_part_number  || ''',  1,  LEVEL)  IS NOT NULL)  WHERE UPPER (rbc.refresh_part_number) LIKE  GROUP BY refresh_part_number))';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  (SELECT LISTAGG (refresh_part_number, '','')  WITHIN GROUP (ORDER BY refresh_part_number, '','')  FROM ( SELECT refresh_part_number  FROM RC_BTS_CYCLE_UPLOAD_DATA rbc  WHERE EXISTS  (SELECT 1  FROM ( SELECT DISTINCT  UPPER (  TRIM (REGEXP_SUBSTR ( '''  || lv_part_number  || ''',  1,  LEVEL)))  AS part  FROM DUAL  CONNECT BY REGEXP_SUBSTR ( '''  || lv_part_number  || ''',  1,  LEVEL)  IS NOT NULL)  WHERE UPPER (rbc.refresh_part_number) LIKE  GROUP BY refresh_part_number))';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,LEVEL),READ,"  (SELECT LISTAGG (refresh_part_number, '','')  WITHIN GROUP (ORDER BY refresh_part_number, '','')  FROM ( SELECT refresh_part_number  FROM RC_BTS_CYCLE_UPLOAD_DATA rbc  WHERE EXISTS  (SELECT 1  FROM ( SELECT DISTINCT  UPPER (  TRIM (REGEXP_SUBSTR ( '''  || lv_part_number  || ''',  1,  LEVEL)))  AS part  FROM DUAL  CONNECT BY REGEXP_SUBSTR ( '''  || lv_part_number  || ''',  1,  LEVEL)  IS NOT NULL)  WHERE UPPER (rbc.refresh_part_number) LIKE  GROUP BY refresh_part_number))';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_BTS_CYCLE_UPLOAD_DATA,READ,"  (SELECT LISTAGG (TAN_ID, '','')  WITHIN GROUP (ORDER BY TAN_ID, '','')  FROM ( SELECT TAN_ID  FROM RC_BTS_CYCLE_UPLOAD_DATA rbc  WHERE EXISTS  (SELECT 1  FROM ( SELECT DISTINCT  UPPER (  TRIM (REGEXP_SUBSTR ( '''  || lv_tan_id  || ''',  1,  LEVEL)))  AS tanid  FROM DUAL  CONNECT BY REGEXP_SUBSTR ( '''  || lv_tan_id  || ''',  1,  LEVEL)  IS NOT NULL)  WHERE UPPER (rbc.TAN_ID) LIKE  GROUP BY TAN_ID))';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  (SELECT LISTAGG (TAN_ID, '','')  WITHIN GROUP (ORDER BY TAN_ID, '','')  FROM ( SELECT TAN_ID  FROM RC_BTS_CYCLE_UPLOAD_DATA rbc  WHERE EXISTS  (SELECT 1  FROM ( SELECT DISTINCT  UPPER (  TRIM (REGEXP_SUBSTR ( '''  || lv_tan_id  || ''',  1,  LEVEL)))  AS tanid  FROM DUAL  CONNECT BY REGEXP_SUBSTR ( '''  || lv_tan_id  || ''',  1,  LEVEL)  IS NOT NULL)  WHERE UPPER (rbc.TAN_ID) LIKE  GROUP BY TAN_ID))';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,LEVEL),READ,"  (SELECT LISTAGG (TAN_ID, '','')  WITHIN GROUP (ORDER BY TAN_ID, '','')  FROM ( SELECT TAN_ID  FROM RC_BTS_CYCLE_UPLOAD_DATA rbc  WHERE EXISTS  (SELECT 1  FROM ( SELECT DISTINCT  UPPER (  TRIM (REGEXP_SUBSTR ( '''  || lv_tan_id  || ''',  1,  LEVEL)))  AS tanid  FROM DUAL  CONNECT BY REGEXP_SUBSTR ( '''  || lv_tan_id  || ''',  1,  LEVEL)  IS NOT NULL)  WHERE UPPER (rbc.TAN_ID) LIKE  GROUP BY TAN_ID))';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_BTS_CYCLE_UPLOAD_DATA,READ,  SELECT COUNT (1)  INTO lv_rec_exists_cnt  FROM RC_BTS_CYCLE_UPLOAD_DATA  WHERE refresh_part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND PROCESSED_DATE <= (SYSDATE - 1 / 24)  AND UPPER (ACTION) LIKE 'APPROVE%';
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,"  SELECT NVL (SUM (cycle_rohs_cnt), 0),  NVL (SUM (cycle_nrohs_cnt), 0),  NVL (SUM (adj_rohs_qty), 0),  NVL (SUM (adj_nrohs_qty), 0)  INTO lv_cycl_rohs_cnt,  lv_cycl_nrohs_cnt,  lv_tot_adj_rohs,  lv_tot_adj_nrohs  FROM TABLE (  CAST (ltab_bts_cycle_data1 AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE tab_data.refresh_part_number = lv_refresh_part_number  AND UPPER (tab_data.action) LIKE 'APPROV%';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT DECODE (COUNT (1), 0, 'N', 'Y')  INTO lv_excess_inv_flag  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND UPPER (Inventory_flow) = 'EXCESS';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT NVL (SUM (available_fgi), 0)  INTO lv_ccw_rohs_qty --ltab_bts_cycle_data(rec).n_attr1 --CCW Rohs Quantity  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code = ltab_bts_cycle_data (rec).site_id  AND rohs_compliant = 'YES';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT NVL (SUM (available_fgi), 0)  INTO lv_ccw_nrohs_qty --ltab_bts_cycle_data(rec).n_attr2 --CCW Non Rohs Quantity  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code = ltab_bts_cycle_data (rec).site_id  AND rohs_compliant = 'NO';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_SSOT_3A4_BACKLOG,READ,"  SELECT NVL (SUM (ORDERED_QUANTITY), 0)  INTO lv_cdc_rohs_qty  FROM RC_SSOT_3A4_BACKLOG R3R  WHERE 1 = 1  AND R3R.PRODUCTION_RESULT_CODE = 'AWAITING_SHIPPING'  AND ORDER_HOLDS IS NULL  AND OTM_SHIPPING_ROUTE_CODE LIKE 'CDC%'  AND R3R.ORGANIZATION_CODE =  ltab_bts_cycle_data (rec).site_id  AND PRODUCT_ID =  ltab_bts_cycle_data (rec).refresh_part_number  AND EXISTS  (SELECT 1  FROM RMK_SSOT_TRANSACTIONS RST  WHERE SALES_ORDER_NUMBER =  TO_CHAR (R3R.ORDER_NUMBER)  AND UPPER (ROHS_COMPLIANT) = 'YES'  AND PRODUCT_ID = R3R.PRODUCT_ID);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMK_SSOT_TRANSACTIONS,READ,"  SELECT NVL (SUM (ORDERED_QUANTITY), 0)  INTO lv_cdc_rohs_qty  FROM RC_SSOT_3A4_BACKLOG R3R  WHERE 1 = 1  AND R3R.PRODUCTION_RESULT_CODE = 'AWAITING_SHIPPING'  AND ORDER_HOLDS IS NULL  AND OTM_SHIPPING_ROUTE_CODE LIKE 'CDC%'  AND R3R.ORGANIZATION_CODE =  ltab_bts_cycle_data (rec).site_id  AND PRODUCT_ID =  ltab_bts_cycle_data (rec).refresh_part_number  AND EXISTS  (SELECT 1  FROM RMK_SSOT_TRANSACTIONS RST  WHERE SALES_ORDER_NUMBER =  TO_CHAR (R3R.ORDER_NUMBER)  AND UPPER (ROHS_COMPLIANT) = 'YES'  AND PRODUCT_ID = R3R.PRODUCT_ID);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RC_SSOT_3A4_BACKLOG,READ,"  SELECT NVL (SUM (ORDERED_QUANTITY), 0)  INTO lv_cdc_nrohs_qty  FROM RC_SSOT_3A4_BACKLOG R3R  WHERE 1 = 1  AND R3R.PRODUCTION_RESULT_CODE = 'AWAITING_SHIPPING'  AND ORDER_HOLDS IS NULL  AND OTM_SHIPPING_ROUTE_CODE LIKE 'CDC%'  AND R3R.ORGANIZATION_CODE =  ltab_bts_cycle_data (rec).site_id  AND PRODUCT_ID =  ltab_bts_cycle_data (rec).refresh_part_number  AND EXISTS  (SELECT 1  FROM RMK_SSOT_TRANSACTIONS RST  WHERE SALES_ORDER_NUMBER =  TO_CHAR (R3R.ORDER_NUMBER)  AND UPPER (ROHS_COMPLIANT) = 'NO'  AND PRODUCT_ID = R3R.PRODUCT_ID);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMK_SSOT_TRANSACTIONS,READ,"  SELECT NVL (SUM (ORDERED_QUANTITY), 0)  INTO lv_cdc_nrohs_qty  FROM RC_SSOT_3A4_BACKLOG R3R  WHERE 1 = 1  AND R3R.PRODUCTION_RESULT_CODE = 'AWAITING_SHIPPING'  AND ORDER_HOLDS IS NULL  AND OTM_SHIPPING_ROUTE_CODE LIKE 'CDC%'  AND R3R.ORGANIZATION_CODE =  ltab_bts_cycle_data (rec).site_id  AND PRODUCT_ID =  ltab_bts_cycle_data (rec).refresh_part_number  AND EXISTS  (SELECT 1  FROM RMK_SSOT_TRANSACTIONS RST  WHERE SALES_ORDER_NUMBER =  TO_CHAR (R3R.ORDER_NUMBER)  AND UPPER (ROHS_COMPLIANT) = 'NO'  AND PRODUCT_ID = R3R.PRODUCT_ID);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT COUNT (1)  INTO ln_part_cnt  FROM DUAL  WHERE ltab_bts_cycle_data (rec).refresh_part_number IN ( SELECT DISTINCT  REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  FROM DUAL  CONNECT BY REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  IS NOT NULL);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL  CONNECT BY REGEXP_SUBSTR (  lv_dup_part_number,READ,"  SELECT COUNT (1)  INTO ln_part_cnt  FROM DUAL  WHERE ltab_bts_cycle_data (rec).refresh_part_number IN ( SELECT DISTINCT  REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  FROM DUAL  CONNECT BY REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  IS NOT NULL);
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,1,READ,"  SELECT COUNT (1)  INTO ln_part_cnt  FROM DUAL  WHERE ltab_bts_cycle_data (rec).refresh_part_number IN ( SELECT DISTINCT  REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  FROM DUAL  CONNECT BY REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  IS NOT NULL);
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,LEVEL)  IS NOT NULL),READ,"  SELECT COUNT (1)  INTO ln_part_cnt  FROM DUAL  WHERE ltab_bts_cycle_data (rec).refresh_part_number IN ( SELECT DISTINCT  REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  FROM DUAL  CONNECT BY REGEXP_SUBSTR (  lv_dup_part_number,  1,  LEVEL)  IS NOT NULL);
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,"  SELECT RC_BTS_CYCLE_DATA_OBJ (REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  STRATEGIC_MASKED_QTY_RHS,  ADJ_NROHS_QTY,  STRATEGIC_MASKED_QTY_NONROHS,  UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  APPROVER_COMMENTS,  ACTION,  IS_BTS_PROCESSED,  PROCESSED_DATE,  PROCESSED_BY,  V_ATTR1,  V_ATTR2, --Set of Request IDs  V_ATTR3,  V_ATTR4,  N_ATTR1,  N_ATTR2,  N_ATTR3,  N_ATTR4,  D_ATTR1,  D_ATTR2,  D_ATTR3,  D_ATTR4)  BULK COLLECT INTO ltab_bts_mail_data  FROM TABLE (  CAST (ltab_bts_cycle_data AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE UPPER (tab_data.action) IS NOT NULL  AND tab_data.site_id = 'LRO';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,"  SELECT RC_BTS_CYCLE_DATA_OBJ (REQUEST_ID,  REFRESH_PART_NUMBER,  TAN_ID,  SITE_ID,  CYCLE_ROHS_CNT,  CYCLE_NROHS_CNT,  IFS_ROHS_CNT,  IFS_NROHS_CNT,  USER_COMMENTS,  ADJ_ROHS_QTY,  STRATEGIC_MASKED_QTY_RHS,  ADJ_NROHS_QTY,  STRATEGIC_MASKED_QTY_NONROHS,  UPLOADED_DATE,  UPLOADED_BY,  FILE_NAME,  APPROVER_COMMENTS,  ACTION,  IS_BTS_PROCESSED,  PROCESSED_DATE,  PROCESSED_BY,  V_ATTR1,  V_ATTR2, --Set of Request IDs  V_ATTR3,  V_ATTR4,  N_ATTR1,  N_ATTR2,  N_ATTR3,  N_ATTR4,  D_ATTR1,  D_ATTR2,  D_ATTR3,  D_ATTR4)  BULK COLLECT INTO ltab_bts_mail_data  FROM TABLE (  CAST (ltab_bts_cycle_data AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE UPPER (tab_data.action) IS NOT NULL  AND tab_data.site_id = 'FVE';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,TABLE,READ,"  SELECT RC_BTS_CYCLE_DATA_OBJ (NULL, --REQUEST_ID,  REFRESH_PART_NUMBER,  NULL, --TAN_ID,  SITE_ID,  NULL, --CYCLE_ROHS_CNT,  NULL, --CYCLE_NROHS_CNT,  NULL, --IFS_ROHS_CNT,  NULL, --IFS_NROHS_CNT,  NULL, --USER_COMMENTS,  ADJ_ROHS_QTY,  NULL, --STRATEGIC_MASKED_QTY_RHS  ADJ_NROHS_QTY,  NULL, --STRATEGIC_MASKED_QTY_NONROHS  NULL, --UPLOADED_DATE,  NULL, --UPLOADED_BY,  NULL, --FILE_NAME,  NULL, --APPROVER_COMMENTS,  NULL, --ACTION,  NULL, --IS_BTS_PROCESSED,  NULL, --PROCESSED_DATE,  NULL, --PROCESSED_BY,  NULL, --V_ATTR1,  V_ATTR2, --Set of Request IDs  NULL, --V_ATTR3,  NULL, --V_ATTR4,  NULL, --N_ATTR1,  NULL, --N_ATTR2,  NULL, --N_ATTR3,  NULL, --N_ATTR4,  NULL, --D_ATTR1,  NULL, --D_ATTR2,  NULL, --D_ATTR3,  NULL --D_ATTR4,  )  BULK COLLECT INTO ltab_bts_inv_data  FROM ( SELECT LISTAGG ('BTSUI_' || REQUEST_ID, ',')  WITHIN GROUP (ORDER BY REQUEST_ID, ',')  V_ATTR2,  REFRESH_PART_NUMBER,  SITE_ID,  NVL (SUM (ADJ_ROHS_QTY), 0) ADJ_ROHS_QTY,  NVL (SUM (ADJ_NROHS_QTY), 0) ADJ_NROHS_QTY  FROM TABLE (  CAST (  ltab_bts_cycle_data AS RC_BTS_CYCLE_DATA_TAB)) tab_data  WHERE UPPER (tab_data.action) LIKE 'APPROV%'  GROUP BY REFRESH_PART_NUMBER, SITE_ID);"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT DECODE (COUNT (1), 0, 'N', 'Y')  INTO lv_excess_inv_flag  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number = lv_refresh_part_number --ltab_bts_inv_data(rec).refresh_part_number  AND UPPER (Inventory_flow) = 'EXCESS';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RC_INV_LOG_PK_SEQ.NEXTVAL  INTO lv_inv_Log_seq  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RC_INV_LOG_PK_SEQ.NEXTVAL  INTO lv_inv_Log_seq  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT NVL (SUM (available_fgi), 0),  NVL (SUM (available_to_reserve_fgi), 0),  NVL (SUM (reserved_fgi), 0)  INTO lv_ccw_r_available_qty,  lv_ccw_r_avail_to_res_qty,  lv_ccw_r_reserve_qty  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Retail'  AND rohs_compliant = 'YES';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT NVL (SUM (available_fgi), 0),  NVL (SUM (available_to_reserve_fgi), 0),  NVL (SUM (reserved_fgi), 0)  INTO lv_ccw_o_available_qty,  lv_ccw_o_avail_to_res_qty,  lv_ccw_o_reserve_qty  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Outlet'  AND rohs_compliant = 'YES';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RC_INV_LOG_PK_SEQ.NEXTVAL  INTO lv_inv_Log_seq  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RC_INV_LOG_PK_SEQ.NEXTVAL  INTO lv_inv_Log_seq  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT NVL (SUM (available_fgi), 0),  NVL (SUM (available_to_reserve_fgi), 0),  NVL (SUM (reserved_fgi), 0)  INTO lv_ccw_r_available_qty,  lv_ccw_r_avail_to_res_qty,  lv_ccw_r_reserve_qty  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Retail'  AND rohs_compliant = 'NO';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,RMKTGADM.XXCPO_RMK_INVENTORY_MASTER,READ,"  SELECT NVL (SUM (available_fgi), 0),  NVL (SUM (available_to_reserve_fgi), 0),  NVL (SUM (reserved_fgi), 0)  INTO lv_ccw_o_available_qty,  lv_ccw_o_avail_to_res_qty,  lv_ccw_o_reserve_qty  FROM RMKTGADM.XXCPO_RMK_INVENTORY_MASTER  WHERE part_number =  ltab_bts_cycle_data (rec).refresh_part_number  AND site_code =  ltab_bts_inv_data (rec).site_id  AND inventory_flow = 'Outlet'  AND rohs_compliant = 'NO';"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RC_INV_LOG_PK_SEQ.NEXTVAL  INTO lv_inv_Log_seq  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT RC_INV_LOG_PK_SEQ.NEXTVAL  INTO lv_inv_Log_seq  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT ora_database_name INTO lv_database_name FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,DUAL,READ,"  SELECT TO_CHAR (SYSDATE, 'MM/DD/YYYY HH:MI:SS PM')  INTO lv_start_time  FROM DUAL;
"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,CRPADM.RC_CS_EMP_DATA,READ,  SELECT first_name || ' ' || last_name  INTO lv_username  FROM CRPADM.RC_CS_EMP_DATA  WHERE UPPER (CS_EMAIL_ADDR) = lv_login_user;
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,crpadm.rc_email_notifications,READ,"  SELECT email_sender, email_recipients  INTO lv_msg_from, lv_msg_to  FROM crpadm.rc_email_notifications  WHERE notification_name =  CASE  WHEN lv_database_name = 'FNTR2PRD.CISCO.COM'  THEN  WHEN lv_database_name = 'FNTR2STG.CISCO.COM'  THEN  ELSE  END;"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,crpadm.rc_email_notifications,READ,"  SELECT email_sender, email_recipients  INTO lv_msg_from, lv_msg_to  FROM crpadm.rc_email_notifications  WHERE notification_name =  CASE  WHEN lv_database_name = 'FNTR2PRD.CISCO.COM'  THEN  WHEN lv_database_name = 'FNTR2STG.CISCO.COM'  THEN  ELSE  END;"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,crpadm.rc_email_notifications,READ,"  SELECT email_sender, email_recipients  INTO lv_msg_from, lv_msg_to  FROM crpadm.rc_email_notifications  WHERE notification_name =  CASE  WHEN lv_database_name = 'FNTR2PRD.CISCO.COM'  THEN  WHEN lv_database_name = 'FNTR2STG.CISCO.COM'  THEN  ELSE  END;"
RC_BTS_CYCLE_ADJ_PKG,PACKAGE BODY,crpadm.rc_email_notifications,READ,"  SELECT email_sender, email_recipients  INTO lv_msg_from, lv_msg_to  FROM crpadm.rc_email_notifications  WHERE notification_name =  CASE  WHEN lv_database_name = 'FNTR2PRD.CISCO.COM'  THEN  WHEN lv_database_name = 'FNTR2STG.CISCO.COM'  THEN  ELSE  END;"
