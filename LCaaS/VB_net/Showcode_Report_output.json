[
    {
        "component_name": "BookDetails.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"BookDetails.aspx.vb\" Inherits=\"Team10BookShop.Book_Details\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>\n<br>    table class=\"nav-justified\"\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td colspan=\"2\" style=\"height: 22px\"\n<br>                &nbsp;/td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td rowspan=\"8\" style=\"width: 97px\"\n<br>                asp:Image ID=\"Image1\" runat=\"server\" /\n<br>            /td\n<br>            td colspan=\"2\" style=\"height: 22px\"\n<br>                asp:Label ID=\"lbTitle\" runat=\"server\" Font-Size=\"X-Large\" Text=\"Title\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 189px; height: 22px;\"Book ID:/td\n<br>            td style=\"height: 22px\"\n<br>                asp:Label ID=\"lbBookID\" runat=\"server\" Text=\"BookID\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 189px; height: 22px;\"ISBN:/td\n<br>            td style=\"height: 22px\"\n<br>                asp:Label ID=\"lbISBN\" runat=\"server\" Text=\"ISBN\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 189px; height: 21px;\"Category:/td\n<br>            td style=\"height: 21px\"\n<br>                asp:Label ID=\"lbCategory\" runat=\"server\" Text=\"Category\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 189px; height: 22px\"Author/td\n<br>            td style=\"height: 22px\"\n<br>                asp:Label ID=\"lbAuthor\" runat=\"server\" Text=\"Author\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 189px; height: 22px;\"Stock:/td\n<br>            td style=\"height: 22px\"\n<br>                asp:Label ID=\"lbStock\" runat=\"server\" Text=\"Stock\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                &nbsp;/td\n<br>            td style=\"width: 189px; height: 22px;\"Price/td\n<br>            td style=\"height: 22px\"\n<br>                asp:Label ID=\"lbPrice\" runat=\"server\" Text=\"Price\"/asp:Label\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            td style=\"width: 97px\"\n<br>                asp:Button ID=\"btnBack\" runat=\"server\" OnClick=\"btnBack_Click\" Text=\"&lt;&lt; Back\" Width=\"88px\" /\n<br>            /td\n<br>            td style=\"width: 189px\"\n<br>                asp:UpdatePanel ID=\"UpdatePanel1\" runat=\"server\"\n<br>                    ContentTemplate\n<br>                        span\n<br>                            asp:Button ID=\"btnMinus\" runat=\"server\" Text=\"-\" Width=\"28px\" OnClick=\"btnMinus_Click\" /\n<br>                        /span\n<br>                        span\n<br>                            asp:TextBox ID=\"txQty\" runat=\"server\" Width=\"101px\" AutoPostBack=\"True\" Font-Size=\"Medium\" OnTextChanged=\"txQty_TextChanged\" TextMode=\"Number\"/asp:TextBox\n<br>                        /span\n<br>                        span\n<br>                            asp:Button ID=\"btnPlus\" runat=\"server\" Text=\"+\" OnClick=\"btnPlus_Click\" Width=\"28px\" /\n<br>                        /span\n<br>                    /ContentTemplate\n<br>                /asp:UpdatePanel\n<br>                \n<br>            /td\n<br>            td\n<br>                asp:Button ID=\"btnAddToCart\" runat=\"server\" Text=\"Add To Cart\" OnClick=\"btnAddToCart_Click\" /\n<br>            /td\n<br>        /tr\n<br>    /table\n<br>    br /\n<br>\n<br>/asp:Content\n"
    },
    {
        "component_name": "Browsing2.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"Browsing2.aspx.vb\" Inherits=\"Team10BookShop.Anonymous.Browsing2\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>\n<br>    !-- Update Panel--\n<br>    asp:UpdatePanel ID=\"UpdatePanel1\" runat=\"server\"\n<br>        ContentTemplate\n<br>            !-- Wrapper --\n<br>             div class=\"wrapper\"\n<br>\n<br>                !-- Search bar --\n<br>                div id=\"booksearchbar\" class=\"jumbotron\"\n<br>                    div class=\"container-fluid\"\n<br>                        div class=\"row\"\n<br>                            div class=\"col-sm\"\n<br>\n<br>                                span id=\"search-title\"Looking for a book?/span\n<br>\n<br>                                /div\n<br>\n<br>\n<br>                    asp:DropDownList ID=\"ddDetails\" class=\"btn btn-primary dropdown-toggle\" runat=\"server\"\n<br>                        asp:ListItem Author/asp:ListItem\n<br>                        asp:ListItemTitle/asp:ListItem\n<br>                        asp:ListItemISBN/asp:ListItem\n<br>                    /asp:DropDownList\n<br>                      \n<br>\n<br>                    asp:DropDownList ID=\"ddCategory\" class=\"btn btn-primary dropdown-toggle\" runat=\"server\"  DataTextField=\"Name\" DataValueField=\"Name\" AutoPostBack=\"True\" OnSelectedIndexChanged=\"ddCategory_SelectedIndexChanged\"\n<br>                        asp:ListItem Value=\"0\"All/asp:ListItem\n<br>                        asp:ListItem Value=\"1\"Children/asp:ListItem\n<br>                        asp:ListItem Value=\"2\"Technical/asp:ListItem\n<br>                        asp:ListItem Value=\"3\"Non-Fiction/asp:ListItem\n<br>                        asp:ListItem Value=\"4\"Finance/asp:ListItem\n<br>                    /asp:DropDownList\n<br>                  /div\n<br>                    div class=\"input-group\"\n<br>                        asp:TextBox ID=\"txtSearch\" runat=\"server\" class=\"form-control\" placeholder=\"Search..\" /asp:TextBox\n<br>                        asp:Button ID=\"btnSearch\" runat=\"server\" class=\"btn btn-info\" Text=\"Let's Go!\" OnClick=\"btnSearch_Click\" /\n<br>                        asp:Label ID=\"SearchMessage\" runat=\"server\" ForeColor=\"White\"/asp:Label\n<br>                    /div\n<br>                /div\n<br>\n<br>                !-- Books display--\n<br>                div id=\"booksdisplay\" class=\"jumbotron\"\n<br>                    div class = \"container-fluid\"\n<br>                        \n<br>                    /div\n<br>                    asp:Panel ID=\"Panel1\" runat=\"server\"\n<br>                    \n<br>                        asp:DataList ID=\"DataList1\" runat=\"server\" DataKeyField=\"BookID\" HorizontalAlign=\"Center\" RepeatColumns=\"3\" RepeatDirection=\"Horizontal\" OnItemCommand=\"DataList1_ItemCommand\" CellPadding=\"50\" CellSpacing=\"50\"\n<br>                            ItemTemplate\n<br>                                div class=\"book-wrapper\" style=\"text-align:center;\"\n<br>                                    div\n<br>\n<br>                                        !-- Book top--\n<br>                                         div class=\"book-top\"\n<br>                                             image  src=\"../Images/%# Eval(\"ISBN\") %.jpg\" width=\"180\" height=\"210\" /\n<br>                                             br /\n<br>                                             asp:Label id=\"TitleLabel\" runat=\"server\" Text='%# Eval(\"Title\") %' style=\"font-size:18px; color:lightseagreen; font-weight:bolder;font-family:'Arial Rounded MT'\"/\n<br>                                         /div\n<br>\n<br>                                        !-- Book middle--\n<br>                                         div class=\"book-middle\" style=\"font-size:14px; color:dimgray\"\n<br>                                            br /\n<br>                                             BookID:\n<br>                                            asp:Label ID=\"BookIDLabel\" runat=\"server\" Text='%# Eval(\"BookID\") %' /\n<br>                                            br /\n<br>                                            ISBN:\n<br>                                            asp:Label ID=\"ISBNLabel\" runat=\"server\" Text='%# Eval(\"ISBN\") %' /\n<br>                                            br /\n<br>                                            Author:\n<br>                                            asp:Label ID=\"AuthorLabel\" runat=\"server\" Text='%# Eval(\"Author\") %' /\n<br>                                            br /\n<br>                                            CategoryID:\n<br>                                            asp:Label ID=\"CategoryIDLabel\" runat=\"server\" Text='%# Eval(\"CategoryID\") %' /\n<br>                                            br /\n<br>                                             /div\n<br>\n<br>                                        !-- Book bottom --\n<br>                                        div style=\"font-size:20px; font-weight:bolder;padding-bottom:50px\" \n<br>                                            div style=\"color:green\" Stock:\n<br>                                                asp:Label ID=\"StockLabel\" runat=\"server\" Text='%# Eval(\"Stock\") %' /\n<br>                                            /div\n<br>                                        \n<br>                                            div style=\"color:indianred\" $\n<br>                                                asp:Label ID=\"PriceLabel\" runat=\"server\" Text='%# Eval(\"Price\") %' /\n<br>                                            /div\n<br>                                            asp:Button ID=\"DetailButton\" class=\"btn btn-info\" runat=\"server\" Text=\"View Detail\" CommandName=\"Details\" /\n<br>                                            br /\n<br>                                            /div !-- Book bottom (close) --\n<br>                                    /div!-- Jumbotron (close)--\n<br>                                /div !-- Book wrapper (close)--\n<br>                                /div!--container--\n<br>                            /ItemTemplate\n<br>                            SelectedItemStyle Font-Bold=\"True\" Font-Italic=\"False\" Font-Overline=\"False\" Font-Strikeout=\"False\" Font-Underline=\"False\" /\n<br>                         /asp:DataList\n<br>                    /asp:Panel\n<br>                /div !-- Book display (close)--\n<br>            /div\n<br>        /ContentTemplate\n<br>    /asp:UpdatePanel\n<br>/asp:Content\n"
    },
    {
        "component_name": "CheckOut.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"Cart Page\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"CheckOut.aspx.vb\" Inherits=\"Team10BookShop.CheckOut\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>    h1Cart Item/h1\n<br>    div class=\"panel panel-default\"\n<br>            asp:GridView ID=\"CartGridView\" runat=\"server\" AutoGenerateColumns=\"False\" Width=\"676px\" OnRowDeleting=\"OnRowDeleting\"\n<br>                %--divClass--%\n<br>                \n<br>            Columns\n<br>                asp:TemplateField HeaderText=\"No.\"\n<br>                ItemTemplate\n<br>                %# Container.DataItemIndex+1 %\n<br>                /ItemTemplate\n<br>                /asp:TemplateField\n<br>                asp:BoundField DataField=\"Title\" HeaderText=\"Title\" /\n<br>                asp:BoundField DataField=\"Author\" HeaderText=\"Author\" /\n<br>                asp:BoundField DataField=\"ISBN\" HeaderText=\"ISBN\" /\n<br>                asp:BoundField DataField=\"Price\" HeaderText=\"Price\" /\n<br>                asp:TemplateField\n<br>                    ItemTemplate\n<br>                        image src=\"../Images/%# Eval(\"ISBN\") %.jpg\" width=\"90\" height=\"120\"/image\n<br>                    /ItemTemplate\n<br>                /asp:TemplateField\n<br>                \n<br>                asp:CommandField ShowDeleteButton=\"True\" HeaderText=\"Delete\"/                \n<br>            /Columns\n<br>            /asp:GridView\n<br>\n<br>               \n<br>        /div\n<br>        /\n<br>        br /\n<br>        div\n<br>            Total price is S$asp:Label ID=\"PriceLabel\" runat=\"server\" Text=\"Label\"/asp:Label.\n<br>        /div\n<br>        br /\n<br>        div\n<br>            %--Changes--%\n<br>            \n<br>            asp:Button ID=\"BackButton\" runat=\"server\" Text=\"Back\" cssClass=\"btn btn-primary\" OnClick=\"BackButton_Click\"/\n<br>            asp:Button ID=\"ConfirmButton\" runat=\"server\" Text=\"Confirm\" OnClick=\"ConfirmButton_Click\" cssClass=\"btn btn-primary\" /\n<br>        /div\n<br>        \n<br>/asp:Content"
    },
    {
        "component_name": "Receipt.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"Receipt\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"Receipt.aspx.vb\" Inherits=\"Team10BookShop.Receipt\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>        h1Order Summary/h1br /\n<br>    h4Thank you. Your order has been confirmed./h4br /\n<br>        div\n<br>            asp:GridView ID=\"PurchaseGridView\" runat=\"server\" AutoGenerateColumns=\"False\" Width=\"676px\"\n<br>            Columns                \n<br>                asp:TemplateField HeaderText=\"No.\"\n<br>                ItemTemplate\n<br>                %# Container.DataItemIndex+1 %\n<br>                /ItemTemplate\n<br>                /asp:TemplateField\n<br>                asp:BoundField DataField=\"Title\" HeaderText=\"Title\" /\n<br>                asp:BoundField DataField=\"Author\" HeaderText=\"Author\" /\n<br>                asp:BoundField DataField=\"ISBN\" HeaderText=\"ISBN\" /\n<br>                asp:BoundField DataField=\"Price\" HeaderText=\"Price\" /\n<br>                asp:TemplateField\n<br>                    ItemTemplate\n<br>                        image src=\"../Images/%# Eval(\"ISBN\") %.jpg\" width=\"90\" height=\"120\"/image\n<br>                    /ItemTemplate\n<br>                /asp:TemplateField\n<br>            /Columns\n<br>            /asp:GridView\n<br>        /div\n<br>        br /\n<br>        div\n<br>            Payment received is S$asp:Label ID=\"PriceLabel\" runat=\"server\" Text=\"Label\"/asp:Label.\n<br>        /div\n<br>/asp:Content\n"
    },
    {
        "component_name": "register.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"register.aspx.vb\" Inherits=\"Team10BookShop.WebForm1\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>  h2%: Title %/h2\n<br>    p\n<br>        asp:Literal runat=\"server\" ID=\"ErrorMessage\" /\n<br>    /p\n<br>    h4Creat a new account/h4\n<br>        div\n<br>                asp:Label runat=\"server\" AssociatedControlID=\"Username\" Username(Email)/asp:Label\n<br>            div\n<br>                asp:TextBox runat=\"server\" ID=\"Username\" TextMode=\"Email\"/\n<br>                asp:RequiredFieldValidator runat=\"server\" ControlToValidate=\"Username\"\n<br>                    Display=\"Dynamic\" ErrorMessage=\"\u201cUsername\u201dis necessary.\" /\n<br>        /div/div\n<br>        div\n<br>            asp:Label runat=\"server\" AssociatedControlID=\"Password\" Password/asp:Label\n<br>            div\n<br>                asp:TextBox runat=\"server\" ID=\"Password\" TextMode=\"Password\" /\n<br>                asp:RequiredFieldValidator runat=\"server\" ControlToValidate=\"Password\"\n<br>                     Display=\"Dynamic\" ErrorMessage=\"\u201cPassword\u201dis necessary.\" /\n<br>                asp:RegularExpressionValidator runat=\"server\" ID=\"revCode\" ErrorMessage=\"password must between 6 and 16 characters\" \n<br>                    Display=\"Dynamic\" ControlToValidate=\"PassWord\" ValidationExpression=\"\\w{6,16}\"/asp:RegularExpressionValidator\n<br>            /div/div\n<br>        div\n<br>            asp:Label runat=\"server\" AssociatedControlID=\"ConfirmPassword\" ConfirmPassword/asp:Label\n<br>            div\n<br>                asp:TextBox runat=\"server\" ID=\"ConfirmPassword\" TextMode=\"Password\"  /\n<br>                asp:RequiredFieldValidator runat=\"server\" ControlToValidate=\"ConfirmPassword\"\n<br>                     Display=\"Dynamic\" ErrorMessage=\"\u201cConfirmPassword\u201dis necessary.\" /\n<br>                asp:CompareValidator runat=\"server\" ControlToCompare=\"Password\" ControlToValidate=\"ConfirmPassword\"\n<br>                     Display=\"Dynamic\" ErrorMessage=\"Password and ConfirmPassword is not the same\u3002\" /\n<br>            /div/div\n<br>            div\n<br>                asp:Button runat=\"server\" OnClick=\"Register_Click\" Text=\"Register\"/\n<br>            /div\n<br>/asp:Content\n"
    },
    {
        "component_name": "Sorry.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"Sorry\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"Sorry.aspx.vb\" Inherits=\"Team10BookShop.Sorry\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>    h1Sorry. Our website is currently busy./h1\n<br>/asp:Content\n"
    },
    {
        "component_name": "OwnerAddBook.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"OwnerAddBook.aspx.vb\" Inherits=\"Team10BookShop.OwnerAddBook\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>\n<br>    !-- Title --\n<br>    h1Add New Book/h1\n<br>\n<br>    !-- Input fields --\n<br>    table\n<br>        tr\n<br>            td asp:Label ID=\"lblBookTitle\" runat=\"server\" Text=\"Book Title\"/asp:Label/td\n<br>            td asp:TextBox ID=\"txtBookTitle\" runat=\"server\" TabIndex=\"2\" Width=\"300px\"/asp:TextBox\n<br>                     asp:RequiredFieldValidator ID=\"RequiredFieldValidatorBookTitle\" runat=\"server\" ErrorMessage=\"Book Title is required\" ControlToValidate=\"txtBookTitle\" ForeColor=\"Red\"*/asp:RequiredFieldValidator\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            tdasp:Label ID=\"lblCategory\" runat=\"server\" Text=\"Category\"/asp:Label/td\n<br>            td asp:DropDownList ID=\"ddCategory\" runat=\"server\" TabIndex=\"3\" Height=\"21px\" Width=\"150px\" DataSourceID=\"SqlDataSource1\" DataTextField=\"Name\" DataValueField=\"CategoryID\"\n<br>                /asp:DropDownList\n<br>                asp:SqlDataSource ID=\"SqlDataSource1\" runat=\"server\" ConnectionString=\"%$ ConnectionStrings:MyBooks %\" SelectCommand=\"SELECT [CategoryID], [Name] FROM [Category]\"/asp:SqlDataSource\n<br>                asp:RequiredFieldValidator ID=\"RequiredFieldValidatorCategory\" runat=\"server\" ControlToValidate=\"ddCategory\" ErrorMessage=\"Category is required\" ForeColor=\"Red\"*/asp:RequiredFieldValidator\n<br>            /td\n<br>        /tr\n<br>       tr\n<br>           td style=\"height: 25px\"asp:Label ID=\"lblisbn\" runat=\"server\" Text=\"ISBN\"/asp:Label/td\n<br>           td style=\"height: 25px\" asp:TextBox ID=\"txtISBN\" runat=\"server\" TabIndex=\"4\" Width=\"150px\" TextMode=\"Number\"/asp:TextBox\n<br>                   asp:RequiredFieldValidator ID=\"RequiredFieldValidatorISBN\" runat=\"server\" ControlToValidate=\"txtISBN\" EnableTheming=\"False\" ErrorMessage=\"ISBN is required\" ForeColor=\"Red\"*/asp:RequiredFieldValidator\n<br>                   asp:RegularExpressionValidator ID=\"RegularExpressionValidatorISBN\" runat=\"server\" ControlToValidate=\"txtISBN\" Display=\"Dynamic\" ErrorMessage=\"Invalid ISBN\" ForeColor=\"Red\" ValidationExpression=\"\\d{13}\"*/asp:RegularExpressionValidator\n<br>           /td\n<br>       /tr\n<br>        tr\n<br>            tdasp:Label ID=\"lblAuthor\" runat=\"server\" Text=\"Author\"/asp:Label/td\n<br>            tdasp:TextBox ID=\"txtAuthor\" runat=\"server\" TabIndex=\"5\" Width=\"150px\"/asp:TextBox\n<br>                    asp:RequiredFieldValidator ID=\"RequiredFieldValidatorAuthor\" runat=\"server\" ControlToValidate=\"txtISBN\" ErrorMessage=\"Author is required\" ForeColor=\"Red\"*/asp:RequiredFieldValidator\n<br>            /td\n<br>        /tr\n<br>        tr\n<br>            tdasp:Label ID=\"lblStock\" runat=\"server\" Text=\"Stock\"/asp:Label/td\n<br>            td asp:TextBox ID=\"txtStock\" runat=\"server\" TabIndex=\"6\" TextMode=\"Number\" Width=\"40px\"/asp:TextBox\n<br>                    asp:RequiredFieldValidator ID=\"RequiredFieldValidatorStock\" runat=\"server\" ControlToValidate=\"txtStock\" ErrorMessage=\"Stock is required\" ForeColor=\"Red\"*/asp:RequiredFieldValidator\n<br>                    asp:RangeValidator ID=\"RangeValidatorStock\" runat=\"server\" ControlToValidate=\"txtStock\" ErrorMessage=\"Stock needs to be at least 0\" ForeColor=\"Red\" MaximumValue=\"10000\" MinimumValue=\"0\" Type=\"Integer\"*/asp:RangeValidator\n<br>            /td\n<br>        /tr\n<br>\n<br>        tr\n<br>            tdasp:Label ID=\"lblPrice\" runat=\"server\" Text=\"Price\"/asp:Label/td\n<br>            tdasp:TextBox ID=\"txtPrice\" runat=\"server\" TabIndex=\"7\" TextMode=\"Number\" Width=\"40px\"/asp:TextBox\n<br>                    asp:RequiredFieldValidator ID=\"RequiredFieldValidatorPrice\" runat=\"server\" ControlToValidate=\"txtPrice\" ErrorMessage=\"Price is required\" ForeColor=\"Red\"*/asp:RequiredFieldValidator\n<br>                     asp:RangeValidator ID=\"RangeValidatorPrice\" runat=\"server\" ControlToValidate=\"txtPrice\" ErrorMessage=\"Price needs to be at least 1\" ForeColor=\"Red\" MaximumValue=\"10000\" MinimumValue=\"1\" Type=\"Integer\"*/asp:RangeValidator/td\n<br>        /tr\n<br>\n<br>        tr\n<br>            tdasp:Label ID=\"lblCover\" runat=\"server\" Text=\"Book Cover\"/asp:Label/td\n<br>            tdasp:FileUpload ID=\"FileUploadImage\" runat=\"server\" TabIndex=\"8\" //td\n<br>        /tr\n<br>    /table\n<br>     \n<br>    !-- File Upload, Confirm button and Errors Display --\n<br>    asp:Button ID=\"btnConfirm\" runat=\"server\" Text=\"Confirm\" TabIndex=\"9\" OnClick=\"btnConfirm_Click\" /\n<br>    br /\n<br>    asp:Label ID=\"lblErrorFileUpload\" runat=\"server\" ForeColor=\"Red\"/asp:Label\n<br>    asp:ValidationSummary ID=\"ValidationSummaryAddBook\" runat=\"server\" ForeColor=\"Red\" /\n<br>/asp:Content\n"
    },
    {
        "component_name": "OwnerUpdateInventory.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"OwnerUpdateInventory.aspx.vb\" Inherits=\"Team10BookShop.OwnerUpdateInventory\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>    asp:GridView ID=\"GridView1\" runat=\"server\" AllowPaging=\"True\" AllowSorting=\"True\" AutoGenerateColumns=\"False\" DataKeyNames=\"BookID\" DataSourceID=\"SqlDataSource1\" Height=\"285px\" Width=\"1290px\"\n<br>        Columns\n<br>            asp:CommandField ShowDeleteButton=\"True\" ShowEditButton=\"True\" /\n<br>            asp:BoundField DataField=\"BookID\" HeaderText=\"BookID\" InsertVisible=\"False\" ReadOnly=\"True\" SortExpression=\"BookID\" /\n<br>            asp:BoundField DataField=\"Title\" HeaderText=\"Title\" SortExpression=\"Title\" /\n<br>            asp:BoundField DataField=\"CategoryID\" HeaderText=\"CategoryID\" SortExpression=\"CategoryID\" /\n<br>            asp:BoundField DataField=\"ISBN\" HeaderText=\"ISBN\" SortExpression=\"ISBN\" /\n<br>            asp:BoundField DataField=\"Author\" HeaderText=\"Author\" SortExpression=\"Author\" /\n<br>            asp:BoundField DataField=\"Stock\" HeaderText=\"Stock\" SortExpression=\"Stock\" /\n<br>            asp:BoundField DataField=\"Price\" HeaderText=\"Price\" SortExpression=\"Price\" /\n<br>        /Columns\n<br>    /asp:GridView\n<br>    asp:SqlDataSource ID=\"SqlDataSource1\" runat=\"server\" ConnectionString=\"Data Source=.;Initial Catalog=Team10BookShop;Integrated Security=True\" DeleteCommand=\"DELETE FROM [Book] WHERE [BookID] = @BookID\" InsertCommand=\"INSERT INTO [Book] ([Title], [CategoryID], [ISBN], [Author], [Stock], [Price]) VALUES (@Title, @CategoryID, @ISBN, @Author, @Stock, @Price)\" ProviderName=\"System.Data.SqlClient\" SelectCommand=\"SELECT * FROM [Book]\" UpdateCommand=\"UPDATE [Book] SET [Title] = @Title, [CategoryID] = @CategoryID, [ISBN] = @ISBN, [Author] = @Author, [Stock] = @Stock, [Price] = @Price WHERE [BookID] = @BookID\"\n<br>        DeleteParameters\n<br>            asp:Parameter Name=\"BookID\" Type=\"Int32\" /\n<br>        /DeleteParameters\n<br>        InsertParameters\n<br>            asp:Parameter Name=\"Title\" Type=\"String\" /\n<br>            asp:Parameter Name=\"CategoryID\" Type=\"Int32\" /\n<br>            asp:Parameter Name=\"ISBN\" Type=\"String\" /\n<br>            asp:Parameter Name=\"Author\" Type=\"String\" /\n<br>            asp:Parameter Name=\"Stock\" Type=\"Int32\" /\n<br>            asp:Parameter Name=\"Price\" Type=\"Decimal\" /\n<br>        /InsertParameters\n<br>        UpdateParameters\n<br>            asp:Parameter Name=\"Title\" Type=\"String\" /\n<br>            asp:Parameter Name=\"CategoryID\" Type=\"Int32\" /\n<br>            asp:Parameter Name=\"ISBN\" Type=\"String\" /\n<br>            asp:Parameter Name=\"Author\" Type=\"String\" /\n<br>            asp:Parameter Name=\"Stock\" Type=\"Int32\" /\n<br>            asp:Parameter Name=\"Price\" Type=\"Decimal\" /\n<br>            asp:Parameter Name=\"BookID\" Type=\"Int32\" /\n<br>        /UpdateParameters\n<br>    /asp:SqlDataSource\n<br>/asp:Content\n"
    },
    {
        "component_name": "OwnerUpdateInventoryNEW.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"OwnerUpdateInventoryNEW.aspx.vb\" Inherits=\"Team10BookShop.OwnerUpdateInventoryNEW\" %\n<br>asp:Content ID=\"Content1\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>    br /\n<br>    br /\n<br>    br /\n<br>    asp:GridView ID=\"GridView1\" runat=\"server\" AutoGenerateColumns=\"False\" OnRowCancelingEdit=\"OnRowCancelingEdit\" OnRowDeleting=\"OnRowDeleting\" OnRowEditing=\"OnRowEditing\" OnRowUpdating=\"OnRowUpdating\" OnSelectedIndexChanged=\"GridView1_SelectedIndexChanged\" Width=\"1234px\" DataKeyNames=\"BookID\"\n<br>        Columns\n<br>            asp:BoundField DataField=\"BookID\" HeaderText=\"Book ID\" /\n<br>            asp:BoundField DataField=\"Title\" HeaderText=\"Title\" /\n<br>            asp:BoundField DataField=\"CategoryID\" HeaderText=\"Category ID\" /\n<br>            asp:BoundField DataField=\"ISBN\" HeaderText=\"ISBN\" /\n<br>            asp:BoundField DataField=\"Author\" HeaderText=\"Author\" /\n<br>            asp:BoundField DataField=\"Stock\" HeaderText=\"Stock\" /\n<br>            asp:BoundField DataField=\"Price\" DataFormatString=\"{0:C}\" HeaderText=\"Price\" /\n<br>            asp:CommandField InsertText=\"\" NewText=\"\" ShowDeleteButton=\"True\" ShowEditButton=\"True\" ShowSelectButton=\"True\" /\n<br>        /Columns\n<br>    /asp:GridView\n<br>    br /\n<br>    br /\n<br>        asp:DetailsView ID=\"DetailsView1\" runat=\"server\" Height=\"50px\" Width=\"125px\"\n<br>        /asp:DetailsView\n<br>    /asp:Content\n"
    },
    {
        "component_name": "About.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"About\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"About.aspx.vb\" Inherits=\"Team10BookShop.About\" %\n<br>\n<br>asp:Content ID=\"BodyContent\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>    h2%: Title %./h2\n<br>    h3Your application description page./h3\n<br>    pUse this area to provide additional information./p\n<br>/asp:Content\n"
    },
    {
        "component_name": "Contact.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"Contact\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"Contact.aspx.vb\" Inherits=\"Team10BookShop.Contact\" %\n<br>\n<br>asp:Content ID=\"BodyContent\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>    h2%: Title %./h2\n<br>    h3Your contact page./h3\n<br>    address\n<br>        One Microsoft Waybr /\n<br>        Redmond, WA 98052-6399br /\n<br>        abbr title=\"Phone\"P:/abbr\n<br>        425.555.0100\n<br>    /address\n<br>\n<br>    address\n<br>        strongSupport:/strong   a href=\"mailto:Support@example.com\"Support@example.com/abr /\n<br>        strongMarketing:/strong a href=\"mailto:Marketing@example.com\"Marketing@example.com/a\n<br>    /address\n<br>/asp:Content\n"
    },
    {
        "component_name": "Default.aspx",
        "component_type": "CODEBEHIND",
        "codeString": "\ufeff%@ Page Title=\"Home Page\" Language=\"C#\" MasterPageFile=\"~/Site.Master\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.vb\" Inherits=\"Team10BookShop._Default\" %\n<br>\n<br>asp:Content ID=\"BodyContent\" ContentPlaceHolderID=\"MainContent\" runat=\"server\"\n<br>\n<br>    div class=\"jumbotron\"\n<br>        h1ASP.NET/h1\n<br>        p class=\"lead\"ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript./p\n<br>        pa href=\"http://www.asp.net\" class=\"btn btn-primary btn-lg\"Learn more &raquo;/a/p\n<br>    /div\n<br>\n<br>    div class=\"row\"\n<br>        div class=\"col-md-4\"\n<br>            h2Getting started/h2\n<br>            p\n<br>                ASP.NET Web Forms lets you build dynamic websites using a familiar drag-and-drop, event-driven model.\n<br>            A design surface and hundreds of controls and components let you rapidly build sophisticated, powerful UI-driven sites with data access.\n<br>            /p\n<br>            p\n<br>                a class=\"btn btn-default\" href=\"https://go.microsoft.com/fwlink/?LinkId=301948\"Learn more &raquo;/a\n<br>            /p\n<br>        /div\n<br>        div class=\"col-md-4\"\n<br>            h2Get more libraries/h2\n<br>            p\n<br>                NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.\n<br>            /p\n<br>            p\n<br>                a class=\"btn btn-default\" href=\"https://go.microsoft.com/fwlink/?LinkId=301949\"Learn more &raquo;/a\n<br>            /p\n<br>        /div\n<br>        div class=\"col-md-4\"\n<br>            h2Web Hosting/h2\n<br>            p\n<br>                You can easily find a web hosting company that offers the right mix of features and price for your applications.\n<br>            /p\n<br>            p\n<br>                a class=\"btn btn-default\" href=\"https://go.microsoft.com/fwlink/?LinkId=301950\"Learn more &raquo;/a\n<br>            /p\n<br>        /div\n<br>    /div\n<br>\n<br>/asp:Content\n"
    },
    {
        "component_name": "BookDetails.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Collections.Generic\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class Book_Details\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Private selectedBook As Book\n<br>        Private selectedID As Integer\n<br>        Private cat As Category\n<br>        Private qty As Integer\n<br>        Private bookList As List(Of Book)\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>            selectedID = CInt(Session(\"id\"))\n<br>\n<br>            If Not IsPostBack Then\n<br>                ViewState(\"qty\") = 1\n<br>            End If\n<br>\n<br>            'txQty.Controls[0].Dispose();\n<br>\n<br>            qty = CInt(ViewState(\"qty\"))\n<br>            selectedBook = BusinessLogic.getBookByID(selectedID)\n<br>            cat = New Category()\n<br>            cat = BusinessLogic.GetCategoryById(selectedBook.CategoryID)\n<br>            Me.display(selectedBook)\n<br>            bookList = CType(Session(\"cart\"), List(Of Book))\n<br>        End Sub\n<br>\n<br>        Protected Sub bookID(ByVal id As Integer)\n<br>            selectedID = id\n<br>        End Sub\n<br>\n<br>        Protected Sub display(ByVal a As Book)\n<br>            lbTitle.Text = a.Title\n<br>            lbAuthor.Text = a.Author\n<br>            lbBookID.Text = a.BookID.ToString()\n<br>            lbCategory.Text = cat.Name\n<br>            lbISBN.Text = a.ISBN\n<br>            lbPrice.Text = $\"{a.Price:c}\"\n<br>            lbStock.Text = a.Stock.ToString()\n<br>            Image1.ImageUrl = $\"../Images/{a.ISBN}.jpg\"\n<br>            txQty.Text = qty.ToString()\n<br>        End Sub\n<br>\n<br>        Protected Sub btnMinus_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            qty = CInt(ViewState(\"qty\"))\n<br>\n<br>            If qty > 1 Then\n<br>                qty -= 1\n<br>            Else\n<br>                qty = 1\n<br>                btnMinus.Enabled = False\n<br>            End If\n<br>\n<br>            txQty.Text = qty.ToString()\n<br>            ViewState(\"qty\") = qty\n<br>        End Sub\n<br>\n<br>        Protected Sub btnPlus_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            qty = CInt(ViewState(\"qty\"))\n<br>\n<br>            If qty >= selectedBook.Stock Then\n<br>                qty = selectedBook.Stock\n<br>                btnPlus.Enabled = False\n<br>            Else\n<br>                qty += 1\n<br>            End If\n<br>\n<br>            txQty.Text = qty.ToString()\n<br>            ViewState(\"qty\") = qty\n<br>        End Sub\n<br>\n<br>        Protected Sub txQty_TextChanged(ByVal sender As Object, ByVal e As EventArgs)\n<br>            If Convert.ToInt32(txQty.Text) <= selectedBook.Stock AndAlso Convert.ToInt32(txQty.Text) > 0 Then\n<br>                qty = Convert.ToInt32(txQty.Text)\n<br>                ViewState(\"qty\") = qty\n<br>            End If\n<br>\n<br>            txQty.Text = qty.ToString()\n<br>        End Sub\n<br>\n<br>        Protected Sub btnAddToCart_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            qty = CInt(ViewState(\"qty\"))\n<br>\n<br>            If qty <= selectedBook.Stock Then\n<br>\n<br>                For i As Integer = 0 To qty - 1\n<br>                    bookList.Add(selectedBook)\n<br>                    'Label1.Text += selectedBook.BookID;\n<br>                Next\n<br>\n<br>                Session(\"cart\") = bookList\n<br>                Response.Write(\"<script>confirm('Added to Cart!!')</script>\")\n<br>            Else\n<br>                btnAddToCart.Enabled = False\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Protected Sub btnBack_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            Response.Redirect(\"Browsing2.aspx\")\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Browsing2.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Collections.Generic\n<br>Imports System.Diagnostics\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop.Anonymous\n<br>    Public Partial Class Browsing2\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Private catid As Integer\n<br>        Private id As Integer\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>            If Not IsPostBack Then\n<br>                DataList1.DataSource = BusinessLogic.ListBooksBy()\n<br>                DataList1.DataBind()\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Protected Sub btnSearch_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            SearchMessage.Text = \"\"\n<br>            Dim books As List(Of Book)\n<br>\n<br>            If ddCategory.SelectedItem.Text Is \"All\" Then\n<br>\n<br>                If txtSearch.Text IsNot Nothing Then\n<br>\n<br>                    Select Case ddDetails.SelectedValue\n<br>                        Case \"Author\"\n<br>                            catid = Convert.ToInt32(ddCategory.SelectedValue)\n<br>                            books = SearchBusinessLogic.SearchBooksByAuthor(txtSearch.Text)\n<br>\n<br>                            If books.Count() <> 0 Then\n<br>                                DataList1.DataSource = books\n<br>                                DataList1.DataBind()\n<br>                            Else\n<br>                                SearchMessage.Text = \"Failed\"\n<br>                                Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                            End If\n<br>\n<br>                        Case \"Title\"\n<br>                            catid = Convert.ToInt32(ddCategory.SelectedValue)\n<br>                            books = SearchBusinessLogic.SearchBooksByTitle(txtSearch.Text)\n<br>\n<br>                            If books.Count() <> 0 Then\n<br>                                DataList1.DataSource = books\n<br>                                DataList1.DataBind()\n<br>                            Else\n<br>                                SearchMessage.Text = \"Failed\"\n<br>                                Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                            End If\n<br>\n<br>                        Case \"ISBN\"\n<br>                            catid = Convert.ToInt32(ddCategory.SelectedValue)\n<br>                            books = SearchBusinessLogic.SearchBooksByISBN(Integer.Parse(txtSearch.Text))\n<br>\n<br>                            If books.Count() <> 0 Then\n<br>                                DataList1.DataSource = books\n<br>                                DataList1.DataBind()\n<br>                            Else\n<br>                                SearchMessage.Text = \"Failed\"\n<br>                                Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                            End If\n<br>\n<br>                        Case Else\n<br>                            SearchMessage.Text = \"Failed\"\n<br>                            Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                    End Select\n<br>                Else\n<br>                    SearchMessage.Text = \"Failed\"\n<br>                    Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                End If\n<br>            Else\n<br>                catid = Convert.ToInt32(ddCategory.SelectedValue)\n<br>\n<br>                If txtSearch.Text IsNot Nothing Then\n<br>\n<br>                    Select Case ddDetails.SelectedValue\n<br>                        Case \"Author\"\n<br>\n<br>                            'catid = Convert.ToInt32(CategoryDL.SelectedValue);\n<br>                            books = SearchBusinessLogic.SearchBooksByAuthorCategory(txtSearch.Text, catid)\n<br>\n<br>                            If books.Count() <> 0 Then\n<br>                                DataList1.DataSource = books\n<br>                                DataList1.DataBind()\n<br>                            Else\n<br>                                SearchMessage.Text = \"Failed\"\n<br>                                Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                            End If\n<br>\n<br>                        Case \"Title\"\n<br>                            'catid = Convert.ToInt32(CategoryDL.SelectedValue);\n<br>                            books = SearchBusinessLogic.SearchBooksByTitleCategory(txtSearch.Text, catid)\n<br>                            Debug.Write(\"Records returned \" & books.Count)\n<br>\n<br>                            If books.Count() <> 0 Then\n<br>                                DataList1.DataSource = books\n<br>                                DataList1.DataBind()\n<br>                            Else\n<br>                                SearchMessage.Text = \"Failed\"\n<br>                                Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                            End If\n<br>\n<br>                        Case \"ISBN\"\n<br>                            'catid = Convert.ToInt32(CategoryDL.SelectedValue);\n<br>                            books = SearchBusinessLogic.SearchBooksByISBNCategory(Integer.Parse(txtSearch.Text), catid)\n<br>\n<br>                            If books.Count() <> 0 Then\n<br>                                DataList1.DataSource = books\n<br>                                DataList1.DataBind()\n<br>                            Else\n<br>                                SearchMessage.Text = \"Failed\"\n<br>                                Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                            End If\n<br>\n<br>                        Case Else\n<br>                            SearchMessage.Text = \"Failed\"\n<br>                            Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                    End Select\n<br>                Else\n<br>                    SearchMessage.Text = \"Failed\"\n<br>                    Response.Write(\"<script>confirm('Record Does Not Exist !!')</script>\")\n<br>                End If\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Protected Sub ddCategory_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n<br>            SearchMessage.Text = \"\"\n<br>            Dim books As List(Of Book)\n<br>            Dim s As Integer\n<br>\n<br>            If ddCategory.SelectedItem.Text Is \"All\" Then\n<br>                books = BusinessLogic.ListBooksBy()\n<br>\n<br>                If books.Count() <> 0 Then\n<br>                    DataList1.DataSource = books\n<br>                    DataList1.DataBind()\n<br>                End If\n<br>            Else\n<br>                s = Convert.ToInt32(ddCategory.SelectedValue)\n<br>                books = SearchBusinessLogic.SearchBooksByCategory(s)\n<br>\n<br>                If books.Count() <> 0 Then\n<br>                    DataList1.DataSource = books\n<br>                    DataList1.DataBind()\n<br>                End If\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Protected Sub DataList1_ItemCommand(ByVal source As Object, ByVal e As DataListCommandEventArgs)\n<br>            If e.CommandName Is \"Details\" Then\n<br>                Dim control As Control\n<br>                control = e.Item.FindControl(\"BookIDLabel\")\n<br>                Dim bookID As Integer = Convert.ToInt32(CType(control, Label).Text)\n<br>                Dim b As Book = BusinessLogic.getBookByID(bookID)\n<br>                Session(\"id\") = b.BookID\n<br>                Console.WriteLine(\"book id is:\" & Session(\"id\"))\n<br>                Response.Redirect(\"~/Anonymous/BookDetails.aspx\")\n<br>            End If\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "CheckOut.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Collections.Generic\n<br>Imports System.Diagnostics\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class CheckOut\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Private cartList As List(Of Book)\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>            If Not IsPostBack Then\n<br>                cartList = TryCast(Session(\"cart\"), List(Of Book))\n<br>\n<br>                If cartList IsNot Nothing Then\n<br>                    CartGridView.DataSource = cartList\n<br>                    CartGridView.DataBind()\n<br>                End If\n<br>\n<br>                PopulateTotalPrice()\n<br>                DisableConfirmButton()\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Private Sub PopulateTotalPrice()\n<br>            Dim sum As Decimal = 0\n<br>\n<br>            For Each c As Book In cartList\n<br>                sum += c.Price\n<br>            Next\n<br>\n<br>            PriceLabel.Text = sum.ToString()\n<br>        End Sub\n<br>\n<br>        Private Sub DisableConfirmButton()\n<br>            If cartList.Count() = 0 Then\n<br>                ConfirmButton.Visible = False\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Protected Sub OnRowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs)\n<br>            cartList = TryCast(Session(\"cart\"), List(Of Book))\n<br>            Dim Index As Integer = e.RowIndex\n<br>            cartList.RemoveAt(Index)\n<br>            Session(\"cart\") = cartList\n<br>            CartGridView.DataSource = cartList\n<br>            CartGridView.DataBind()\n<br>            PopulateTotalPrice()\n<br>            DisableConfirmButton()\n<br>        End Sub\n<br>\n<br>        Protected Sub ConfirmButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            cartList = TryCast(Session(\"cart\"), List(Of Book))\n<br>\n<br>            If User.Identity.IsAuthenticated Then\n<br>\n<br>                Try\n<br>                    Dim b As CheckOutBusinessLogic = New CheckOutBusinessLogic()\n<br>                    Dim order As Order = b.CreateOrderID(User.Identity.Name)\n<br>\n<br>                    For Each d As Book In cartList\n<br>                        b.CreateOrderDetails(order.OrderID, d.BookID, d.Price)\n<br>                        b.ChangeStock(d.BookID)\n<br>                    Next\n<br>\n<br>                Catch ex As Exception\n<br>                    Debug.Write(ex.Message)\n<br>                    Page.Response.Redirect(\"~/Anonymous/Sorry\")\n<br>                End Try\n<br>            Else\n<br>                Page.Response.Redirect(\"~/Account/Login?ReturnUrl=~/Anonymous/CheckOut\")\n<br>            End If\n<br>\n<br>            Page.Response.Redirect(\"~/Anonymous/Receipt\")\n<br>        End Sub\n<br>\n<br>        Protected Sub BackButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            Page.Response.Redirect(\"~/Anonymous/Browsing2\")\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Receipt.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Collections.Generic\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class Receipt\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Private cartList As List(Of Book)\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>            If Not IsPostBack Then\n<br>                cartList = TryCast(Session(\"cart\"), List(Of Book))\n<br>\n<br>                If cartList IsNot Nothing Then\n<br>                    PurchaseGridView.DataSource = cartList\n<br>                    PurchaseGridView.DataBind()\n<br>                End If\n<br>\n<br>                Dim sum As Decimal = 0\n<br>\n<br>                For Each c As Book In cartList\n<br>                    sum += c.Price\n<br>                Next\n<br>\n<br>                PriceLabel.Text = sum.ToString()\n<br>            End If\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "register.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>Imports System.Data.SqlClient\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class WebForm1\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>\n<br>        Protected Sub Register_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            Dim name As String = Username.Text\n<br>            Dim pwd As String = Password.Text\n<br>\n<br>            Try\n<br>\n<br>                If Not Equals(name, Nothing) OrElse Not Equals(pwd, Nothing) Then\n<br>                    Dim con As SqlConnection = New SqlConnection(\"data source=(local);integrated security=SSPI; initial catalog=Team10BookShop\")\n<br>                    Dim sp As SqlParameter() = New SqlParameter(1) {}\n<br>                    Dim sql As String = \"insert into UserDetails(Username,Password) values(@a,@b)\"\n<br>                    sp(0) = New SqlParameter(\"@a\", Username.Text)\n<br>                    sp(1) = New SqlParameter(\"@b\", Password.Text)\n<br>                    con.Open()\n<br>                    Dim com As SqlCommand = New SqlCommand(sql, con)\n<br>                    com.Parameters.AddRange(sp)\n<br>                    Dim i As Integer = com.ExecuteNonQuery()\n<br>                    con.Close()\n<br>\n<br>                    If i > 0 Then\n<br>                        Response.Write(\"Register succeed\")\n<br>                    Else\n<br>                        Response.Write(\"Register failed\")\n<br>                    End If\n<br>                Else\n<br>                    Response.Write(\"Please fill the blanks\")\n<br>                End If\n<br>\n<br>            Catch __unusedException1__ As Exception\n<br>                Response.Write(\"Username repeated\")\n<br>            End Try\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Sorry.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class Sorry\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "OwnerAddBook.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class OwnerAddBook\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Private b As Book\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>\n<br>        Protected Sub btnConfirm_Click(ByVal sender As Object, ByVal e As EventArgs)\n<br>            ' Only proceed to save in database if book cover image is valid\n<br>            If IsValidFile() Then\n<br>                b = New Book()\n<br>                b.Title = txtBookTitle.Text\n<br>                b.CategoryID = Convert.ToInt32(ddCategory.SelectedValue)\n<br>                b.ISBN = txtISBN.Text\n<br>                b.Author = txtAuthor.Text\n<br>                b.Stock = Convert.ToInt32(txtStock.Text)\n<br>                b.Price = Convert.ToInt32(txtPrice.Text)\n<br>                FileUploadImage.SaveAs(Server.MapPath(\"~/images/\" & b.ISBN + Path.GetExtension(FileUploadImage.FileName).ToLower()))\n<br>\n<br>                Try\n<br>                    BusinessLogic.AddBook(b)\n<br>                    Response.Write(\"<script>confirm('Success!'); window.location = 'OwnerAddBook.aspx';</script>\")\n<br>                Catch a As Exception\n<br>                    Response.Write(\"<script> if(confirm('Book add was unsuccessful...Would you like to add new book?'))\" & \"{window.location = 'OwnerAddBook.aspx';} else {window.location = 'BookSearch.aspx';} </script>\")\n<br>                End Try\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Private Function IsValidFile() As Boolean\n<br>            Dim IsValid As Boolean = False\n<br>\n<br>\n<br>            ' Validate whether file exists\n<br>            If FileUploadImage.HasFile Then\n<br>                ' Validate file type\n<br>                Dim fileExtension As String = Path.GetExtension(FileUploadImage.FileName).ToLower()\n<br>\n<br>                If Not Equals(fileExtension, \".jpg\") AndAlso Not Equals(fileExtension, \".png\") Then\n<br>                    lblErrorFileUpload.Text = \"Only files with .jpg and .png are allowed.\"\n<br>                Else\n<br>                    ' Validate file size\n<br>                    Dim fileSize As Integer = FileUploadImage.PostedFile.ContentLength\n<br>\n<br>                    If fileSize > 2097152 Then\n<br>                        lblErrorFileUpload.Text = \"Maximum file size of 2MB has been exceeded.\"\n<br>                    Else\n<br>                        IsValid = True\n<br>                    End If\n<br>                End If\n<br>            Else\n<br>                lblErrorFileUpload.Text = \"Please select an image to upload.\"\n<br>            End If\n<br>\n<br>            Return IsValid\n<br>        End Function\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "OwnerUpdateInventory.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class OwnerUpdateInventory\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "OwnerUpdateInventoryNEW.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class OwnerUpdateInventoryNEW\n<br>        Inherits Web.UI.Page\n<br>\n<br>        Private title As String\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>            title = Request.QueryString(\"title\")\n<br>\n<br>            If Not IsPostBack Then\n<br>                BindGrid()\n<br>            End If\n<br>        End Sub\n<br>\n<br>        Private Sub BindGrid()\n<br>            GridView1.DataSource = BusinessLogic.ListBooksBy()\n<br>            GridView1.DataBind()\n<br>        End Sub\n<br>\n<br>        Protected Sub GridView1_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n<br>            Dim bookID As Integer = CInt(GridView1.SelectedDataKey.Value)\n<br>            Dim book As Book = BusinessLogic.getBookByID(bookID)\n<br>            DetailsView1.DataSource = New Book() {book}\n<br>            DetailsView1.DataBind()\n<br>        End Sub\n<br>\n<br>        Protected Sub OnRowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n<br>            GridView1.EditIndex = e.NewEditIndex\n<br>            BindGrid()\n<br>        End Sub\n<br>\n<br>        Protected Sub OnRowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n<br>            Dim row As GridViewRow = GridView1.Rows(e.RowIndex)\n<br>            Dim bookID As Integer = Convert.ToInt32(GridView1.DataKeys(e.RowIndex).Values(0))\n<br>            Dim title As String = TryCast(row.FindControl(\"TextBox2\"), TextBox).Text\n<br>            Dim categoryID As Integer = Convert.ToInt32(TryCast(row.FindControl(\"TextBox3\"), TextBox))\n<br>            Dim isbn As String = TryCast(row.FindControl(\"TextBox4\"), TextBox).Text\n<br>            Dim author As String = TryCast(row.FindControl(\"TextBox5\"), TextBox).Text\n<br>            Dim stock As Integer = Convert.ToInt32(TryCast(row.FindControl(\"TextBox6\"), TextBox))\n<br>            Dim price As Decimal = Convert.ToDecimal(TryCast(row.FindControl(\"TextBox7\"), TextBox))\n<br>            Dim discount As Single = Convert.ToInt32(TryCast(row.FindControl(\"TextBox8\"), TextBox))\n<br>            Dim startDate As Date = Convert.ToDateTime(TryCast(row.FindControl(\"TextBox9\"), TextBox))\n<br>            Dim endDate As Date = Convert.ToDateTime(TryCast(row.FindControl(\"TextBox10\"), TextBox))\n<br>            BusinessLogic.EditInventory(bookID, title, categoryID, isbn, author, stock, price)\n<br>            GridView1.EditIndex = -1\n<br>            BindGrid()\n<br>        End Sub\n<br>\n<br>        Protected Sub OnRowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n<br>            GridView1.EditIndex = -1\n<br>            BindGrid()\n<br>        End Sub\n<br>\n<br>        Protected Sub OnRowDeleting(ByVal sender As Object, ByVal e As GridViewDeleteEventArgs)\n<br>            Dim bookID As Integer = Convert.ToInt32(GridView1.DataKeys(e.RowIndex).Values(0))\n<br>            BusinessLogic.DeleteBooks(Convert.ToString(bookID))\n<br>            BindGrid()\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "About.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class About\n<br>        Inherits Page\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Contact.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class Contact\n<br>        Inherits Page\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Default.aspx.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Web.UI\n<br>Imports System.Web.UI.WebControls\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class _Default\n<br>        Inherits Page\n<br>\n<br>        Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Book.vb",
        "component_type": "VB",
        "codeString": "namespace Team10BookShop\n<br>{\n<br>    public class Book\n<br>    {\n<br>        public Book()\n<br>        {\n<br>        }\n<br>\n<br>        public int BookID { get; set; }\n<br>\n<br>        public string Title { get; set; }\n<br>\n<br>        public int CategoryID { get; set; }\n<br>\n<br>        public string ISBN { get; set; }\n<br>\n<br>        public string Author { get; set; }\n<br>\n<br>        public int Stock { get; set; }\n<br>\n<br>        public decimal Price { get; set; }\n<br>\n<br>    }\n<br>}\n"
    },
    {
        "component_name": "BusinessLogic.vb",
        "component_type": "VB",
        "codeString": "\ufeffusing System;\n<br>using System.Collections.Generic;\n<br>using System.Linq;\n<br>using System.Web;\n<br>using System.Web.UI.WebControls;\n<br>using System.Data;\n<br>using System.Data.SqlClient;\n<br>\n<br>namespace Team10BookShop\n<br>{\n<br>    public class BusinessLogic\n<br>    {\n<br>        public static void AddBook(Book b)\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"insert into Book(title,categoryId,ISBN,Author,Stock,Price) values(@title,@categoryId,@isbn,@author,@stock,@price)\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@title\", SqlDbType.NVarChar, 40));\n<br>            command.Parameters[\"@title\"].Value = b.Title;\n<br>            command.Parameters.Add(new SqlParameter(\"@categoryId\", SqlDbType.Int));\n<br>            command.Parameters[\"@categoryId\"].Value = b.CategoryID;\n<br>            command.Parameters.Add(new SqlParameter(\"@ISBN\", SqlDbType.NVarChar, 40));\n<br>            command.Parameters[\"@isbn\"].Value = b.ISBN;\n<br>            command.Parameters.Add(new SqlParameter(\"@Author\", SqlDbType.NVarChar, 40));\n<br>            command.Parameters[\"@author\"].Value = b.Author;\n<br>            command.Parameters.Add(new SqlParameter(\"@Stock\", SqlDbType.NVarChar, 40));\n<br>            command.Parameters[\"@stock\"].Value = b.Stock;\n<br>            command.Parameters.Add(new SqlParameter(\"@Price\", SqlDbType.Decimal));\n<br>            command.Parameters[\"@price\"].Value = b.Price;\n<br>            connection.Open();\n<br>            command.ExecuteNonQuery();\n<br>            connection.Close();\n<br>\n<br>        }\n<br>\n<br>        public static void EditInventory(int bookID, string title, int categoryID, string isbn, string author, int stock, decimal price)\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"update Book set title=@title, categoryId=@categoryId, ISBN=@ISBN, Author=@Author, Stock=@Stock, Price=@Price where BookId=@BookId\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@title\", SqlDbType.NVarChar, 40));\n<br>\t\t    command.Parameters[\"@title\"].Value = title;\n<br>            command.Parameters.Add(new SqlParameter(\"@categoryId\", SqlDbType.Int));\n<br>\t\t    command.Parameters[\"@categoryId\"].Value = categoryID;\n<br>            command.Parameters.Add(new SqlParameter(\"@ISBN\", SqlDbType.NVarChar, 40));\n<br>\t\t    command.Parameters[\"@ISBN\"].Value = isbn;\n<br>            command.Parameters.Add(new SqlParameter(\"@Author\", SqlDbType.NVarChar, 40));\n<br>\t\t    command.Parameters[\"@Author\"].Value = author;\n<br>            command.Parameters.Add(new SqlParameter(\"@Stock\", SqlDbType.NVarChar, 40));\n<br>\t\t    command.Parameters[\"@Stock\"].Value = stock;\n<br>            command.Parameters.Add(new SqlParameter(\"@Price\", SqlDbType.Decimal));\n<br>\t\t    command.Parameters[\"@Price\"].Value = price;\n<br>            command.Parameters.Add(new SqlParameter(\"@BookId\", SqlDbType.Int));\n<br>\t\t    command.Parameters[\"@BookId\"].Value = bookID;\n<br>            connection.Open();\n<br>            command.ExecuteNonQuery();\n<br>            connection.Close();\n<br>        }\n<br>       \n<br>\n<br>        public static List<Book> ListBooksBy()\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            List<Book> books = new List<Book>();\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"select * from Book\", connection);\n<br>            connection.Open();\n<br>            SqlDataReader dr = command.ExecuteReader();\n<br>            books = PopulateDataObject.PopulateBookList(dr);\n<br>            connection.Close();\n<br>            return books;\n<br>        }\n<br>\n<br>        public static void DeleteBooks(string title)\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"delete from Book where title = @title\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@title\", SqlDbType.NVarChar, 40));\n<br>            command.Parameters[\"@title\"].Value = title;\n<br>            connection.Open();\n<br>            command.ExecuteNonQuery();\n<br>            connection.Close();\n<br>\n<br>        }\n<br>\n<br>        public static Book getBookByID(int bookID)\n<br>        {\n<br>            Book b = new Book();\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"select * from Book where BookId=@BookId\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@BookId\", SqlDbType.Int));\n<br>            command.Parameters[\"@BookId\"].Value = bookID;\n<br>            connection.Open();\n<br>            SqlDataReader dr = command.ExecuteReader();\n<br>            b = PopulateDataObject.PopulateBookObject(dr);\n<br>            connection.Close();\n<br>            return b;\n<br>        }\n<br>        public static Category GetCategoryById(int categoryId)\n<br>        {\n<br>            Category cat = new Category();\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"select * from Category where CategoryId=@categoryId\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@categoryId\", SqlDbType.Int));\n<br>            command.Parameters[\"@categoryId\"].Value = categoryId;\n<br>            connection.Open();\n<br>            SqlDataReader dr = command.ExecuteReader();\n<br>            if (dr.Read())\n<br>            {\n<br>                cat.CategoryID = categoryId;\n<br>                cat.Name = dr[\"name\"].ToString();\n<br>            }\n<br>            connection.Close();\n<br>            return cat;\n<br>        }\n<br>    }\n<br>}"
    },
    {
        "component_name": "Category.vb",
        "component_type": "VB",
        "codeString": "namespace Team10BookShop\n<br>{\n<br>    public partial class Category\n<br>    {\n<br>        public int CategoryID { get; set; }\n<br>\n<br>        public string Name { get; set; }\n<br>    }\n<br>}\n"
    },
    {
        "component_name": "CheckOutBusinessLogic.vb",
        "component_type": "VB",
        "codeString": "\ufeffusing System;\n<br>using System.Collections.Generic;\n<br>using System.Linq;\n<br>using System.Web;\n<br>using System.Data;\n<br>using System.Data.SqlClient;\n<br>\n<br>namespace Team10BookShop\n<br>{\n<br>    public class CheckOutBusinessLogic\n<br>    {\n<br>        public Order CreateOrderID(string userName)\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"insert into Orders(userName) values(@userName)\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@userName\", SqlDbType.NVarChar, 40));\n<br>            command.Parameters[\"@userName\"].Value = userName;\n<br>            connection.Open();\n<br>            command.ExecuteNonQuery();\n<br>            connection.Close();\n<br>            command = new SqlCommand(\"select * from Orders where OrderId=(select max(OrderId) from Orders)\", connection);\n<br>            connection.Open();\n<br>            SqlDataReader dr = command.ExecuteReader();\n<br>            Order order = new Order();\n<br>\n<br>            if (dr.Read())\n<br>            {\n<br>\n<br>                order.OrderID = int.Parse(dr[\"orderId\"].ToString());\n<br>                order.UserName = dr[\"userName\"].ToString(); ;\n<br>\n<br>            }\n<br>            connection.Close();\n<br>            return order;\n<br>        }\n<br>\n<br>        public void CreateOrderDetails(int orderID, int bookID, decimal price)\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"insert into OrderDetails(OrderId,BookId,Price) values(@orderId,@bookId,@price)\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@orderId\", SqlDbType.Int));\n<br>            command.Parameters[\"@orderId\"].Value = orderID;\n<br>            command.Parameters.Add(new SqlParameter(\"@bookId\", SqlDbType.Int));\n<br>            command.Parameters[\"@bookId\"].Value = bookID;\n<br>            command.Parameters.Add(new SqlParameter(\"@price\", SqlDbType.Decimal));\n<br>            command.Parameters[\"@price\"].Value = price;\n<br>            connection.Open();\n<br>            command.ExecuteNonQuery();\n<br>            connection.Close();\n<br>        }\n<br>\n<br>        public void ChangeStock(int bookID)\n<br>        {\n<br>            String conString = System.Configuration.ConfigurationManager.ConnectionStrings[\"MyBooks\"].ConnectionString;\n<br>            SqlConnection connection = new SqlConnection(conString);\n<br>            SqlCommand command = new SqlCommand(\"update Book set stock=stock-1 where bookId=@bookId\", connection);\n<br>            command.Parameters.Add(new SqlParameter(\"@bookId\", SqlDbType.Int));\n<br>            command.Parameters[\"@bookId\"].Value = bookID;\n<br>            connection.Open();\n<br>            command.ExecuteNonQuery();\n<br>            connection.Close();\n<br>        }\n<br>    }\n<br>}"
    },
    {
        "component_name": "Startup.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports Microsoft.Owin\n<br>Imports Owin\n<br>\n<br><Assembly: OwinStartupAttribute(GetType(Team10BookShop.Startup))>\n<br>Namespace Team10BookShop\n<br>    Public Partial Class Startup\n<br>        Public Sub Configuration(ByVal app As IAppBuilder)\n<br>            ConfigureAuth(app)\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "IdentityModels.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Security.Claims\n<br>Imports System.Threading.Tasks\n<br>Imports System.Web\n<br>Imports Microsoft.AspNet.Identity\n<br>Imports Microsoft.AspNet.Identity.EntityFramework\n<br>Imports Microsoft.AspNet.Identity.Owin\n<br>Imports Microsoft.Owin.Security\n<br>\n<br>Namespace Team10BookShop.Models\n<br>    ' You can add User data for the user by adding more properties to your User class, please visit https://go.microsoft.com/fwlink/?LinkID=317594 to learn more.\n<br>    Public Class ApplicationUser\n<br>        Inherits IdentityUser\n<br>\n<br>        Public Function GenerateUserIdentity(ByVal manager As ApplicationUserManager) As ClaimsIdentity\n<br>            ' Note the authenticationType must match the one defined in CookieAuthenticationOptions.AuthenticationType\n<br>            Dim userIdentity = manager.CreateIdentity(Me, DefaultAuthenticationTypes.ApplicationCookie)\n<br>            ' Add custom user claims here\n<br>            Return userIdentity\n<br>        End Function\n<br>\n<br>        Public Function GenerateUserIdentityAsync(ByVal manager As ApplicationUserManager) As Task(Of ClaimsIdentity)\n<br>            Return Task.FromResult(Me.GenerateUserIdentity(manager))\n<br>        End Function\n<br>    End Class\n<br>\n<br>    Public Class ApplicationDbContext\n<br>        Inherits IdentityDbContext(Of ApplicationUser)\n<br>\n<br>        Public Sub New()\n<br>            MyBase.New(\"MyBooks\", throwIfV1Schema:=False)\n<br>        End Sub\n<br>\n<br>        Public Shared Function Create() As ApplicationDbContext\n<br>            Return New ApplicationDbContext()\n<br>        End Function\n<br>    End Class\n<br>End Namespace\n<br>\n<br>\n<br>#Region \"Helpers\"\n<br>Namespace Team10BookShop\n<br>    Public Module IdentityHelper\n<br>        ' Used for XSRF when linking external logins\n<br>        Public Const XsrfKey As String = \"XsrfId\"\n<br>        Public Const ProviderNameKey As String = \"providerName\"\n<br>\n<br>        Public Function GetProviderNameFromRequest(ByVal request As HttpRequest) As String\n<br>            Return request.QueryString(ProviderNameKey)\n<br>        End Function\n<br>\n<br>        Public Const CodeKey As String = \"code\"\n<br>\n<br>        Public Function GetCodeFromRequest(ByVal request As HttpRequest) As String\n<br>            Return request.QueryString(CodeKey)\n<br>        End Function\n<br>\n<br>        Public Const UserIdKey As String = \"userId\"\n<br>\n<br>        Public Function GetUserIdFromRequest(ByVal request As HttpRequest) As String\n<br>            Return HttpUtility.UrlDecode(request.QueryString(UserIdKey))\n<br>        End Function\n<br>\n<br>        Public Function GetResetPasswordRedirectUrl(ByVal code As String, ByVal request As HttpRequest) As String\n<br>            Dim absoluteUri = \"/Account/ResetPassword?\" & CodeKey & \"=\" & HttpUtility.UrlEncode(code)\n<br>            Return New Uri(request.Url, absoluteUri).AbsoluteUri.ToString()\n<br>        End Function\n<br>\n<br>        Public Function GetUserConfirmationRedirectUrl(ByVal code As String, ByVal userId As String, ByVal request As HttpRequest) As String\n<br>            Dim absoluteUri = \"/Account/Confirm?\" & CodeKey & \"=\" & HttpUtility.UrlEncode(code) & \"&\" & UserIdKey & \"=\" & HttpUtility.UrlEncode(userId)\n<br>            Return New Uri(request.Url, absoluteUri).AbsoluteUri.ToString()\n<br>        End Function\n<br>\n<br>        Private Function IsLocalUrl(ByVal url As String) As Boolean\n<br>            Return Not String.IsNullOrEmpty(url) AndAlso (url(0) = \"/\"c AndAlso (url.Length = 1 OrElse url(1) <> \"/\"c AndAlso url(1) <> \"\\\"c) OrElse url.Length > 1 AndAlso url(0) = \"~\"c AndAlso url(1) = \"/\"c)\n<br>        End Function\n<br>\n<br>        Public Sub RedirectToReturnUrl(ByVal returnUrl As String, ByVal response As HttpResponse)\n<br>            If Not String.IsNullOrEmpty(returnUrl) AndAlso IsLocalUrl(returnUrl) Then\n<br>                response.Redirect(returnUrl)\n<br>            Else\n<br>                response.Redirect(\"~/\")\n<br>            End If\n<br>        End Sub\n<br>    End Module\n<br>End Namespace\n<br>#End Region\n"
    },
    {
        "component_name": "Book.vb",
        "component_type": "VB",
        "codeString": "Namespace Team10BookShop\n<br>    Public Class Book\n<br>        Public Sub New()\n<br>        End Sub\n<br>\n<br>        Public Property BookID As Integer\n<br>        Public Property Title As String\n<br>        Public Property CategoryID As Integer\n<br>        Public Property ISBN As String\n<br>        Public Property Author As String\n<br>        Public Property Stock As Integer\n<br>        Public Property Price As Decimal\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "BusinessLogic.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Collections.Generic\n<br>Imports System.Web.UI.WebControls\n<br>Imports System.Data\n<br>Imports System.Data.SqlClient\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Class BusinessLogic\n<br>        Public Shared Function CreateParameters(ByVal b As Book) As List(Of SqlParameter)\n<br>            Dim cmdParams As List(Of SqlParameter) = New List(Of SqlParameter)()\n<br>            cmdParams.Add(New SqlParameter(\"@title\", SqlDbType.NVarChar, 40))\n<br>            cmdParams(0).Value = b.Title\n<br>            cmdParams.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            cmdParams(1).Value = b.CategoryID\n<br>            cmdParams.Add(New SqlParameter(\"@ISBN\", SqlDbType.NVarChar, 40))\n<br>            cmdParams(2).Value = b.ISBN\n<br>            cmdParams.Add(New SqlParameter(\"@Author\", SqlDbType.NVarChar, 40))\n<br>            cmdParams(3).Value = b.Author\n<br>            cmdParams.Add(New SqlParameter(\"@Stock\", SqlDbType.NVarChar, 40))\n<br>            cmdParams(4).Value = b.Stock\n<br>            cmdParams.Add(New SqlParameter(\"@Price\", SqlDbType.Decimal))\n<br>            cmdParams(5).Value = b.Price\n<br>            Return cmdParams\n<br>        End Function\n<br>\n<br>        Public Shared Sub AddBook(ByVal b As Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"insert into Book(title,categoryId,ISBN,Author,Stock,Price) values(@title,@categoryId,@isbn,@author,@stock,@price)\", connection)\n<br>            command.Parameters.AddRange(BusinessLogic.CreateParameters(b).ToArray())\n<br>            connection.Open()\n<br>            command.ExecuteNonQuery()\n<br>            connection.Close()\n<br>        End Sub\n<br>\n<br>        Public Shared Sub EditInventory(ByVal bookID As Integer, ByVal title As String, ByVal categoryID As Integer, ByVal isbn As String, ByVal author As String, ByVal stock As Integer, ByVal price As Decimal)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"update Book set title=@title, categoryId=@categoryId, ISBN=@ISBN, Author=@Author, Stock=@Stock, Price=@Price where BookId=@BookId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@title\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@title\").Value = title\n<br>            command.Parameters.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            command.Parameters(\"@categoryId\").Value = categoryID\n<br>            command.Parameters.Add(New SqlParameter(\"@ISBN\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@ISBN\").Value = isbn\n<br>            command.Parameters.Add(New SqlParameter(\"@Author\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@Author\").Value = author\n<br>            command.Parameters.Add(New SqlParameter(\"@Stock\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@Stock\").Value = stock\n<br>            command.Parameters.Add(New SqlParameter(\"@Price\", SqlDbType.Decimal))\n<br>            command.Parameters(\"@Price\").Value = price\n<br>            command.Parameters.Add(New SqlParameter(\"@BookId\", SqlDbType.Int))\n<br>            command.Parameters(\"@BookId\").Value = bookID\n<br>            connection.Open()\n<br>            command.ExecuteNonQuery()\n<br>            connection.Close()\n<br>        End Sub\n<br>\n<br>        Public Shared Function ListBooksBy() As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book\", connection)\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Sub DeleteBooks(ByVal title As String)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"delete from Book where title = @title\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@title\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@title\").Value = title\n<br>            connection.Open()\n<br>            command.ExecuteNonQuery()\n<br>            connection.Close()\n<br>        End Sub\n<br>\n<br>        Public Shared Function getBookByID(ByVal bookID As Integer) As Book\n<br>            Dim b As Book = New Book()\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where BookId=@BookId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@BookId\", SqlDbType.Int))\n<br>            command.Parameters(\"@BookId\").Value = bookID\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            b = PopulateDataObject.PopulateBookObject(dr)\n<br>            connection.Close()\n<br>            Return b\n<br>        End Function\n<br>\n<br>        Public Shared Function GetCategoryById(ByVal categoryId As Integer) As Category\n<br>            Dim cat As Category = New Category()\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Category where CategoryId=@categoryId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            command.Parameters(\"@categoryId\").Value = categoryId\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>\n<br>            If dr.Read() Then\n<br>                cat.CategoryID = categoryId\n<br>                cat.Name = dr(\"name\").ToString()\n<br>            End If\n<br>\n<br>            connection.Close()\n<br>            Return cat\n<br>        End Function\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Category.vb",
        "component_type": "VB",
        "codeString": "Namespace Team10BookShop\n<br>    Public Partial Class Category\n<br>        Public Property CategoryID As Integer\n<br>        Public Property Name As String\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "CheckOutBusinessLogic.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Data\n<br>Imports System.Data.SqlClient\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Class CheckOutBusinessLogic\n<br>        Public Function CreateOrderID(ByVal userName As String) As Order\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"insert into Orders(userName) values(@userName)\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@userName\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@userName\").Value = userName\n<br>            connection.Open()\n<br>            command.ExecuteNonQuery()\n<br>            connection.Close()\n<br>            command = New SqlCommand(\"select * from Orders where OrderId=(select max(OrderId) from Orders)\", connection)\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            Dim order As Order = New Order()\n<br>\n<br>            If dr.Read() Then\n<br>                order.OrderID = Integer.Parse(dr(\"orderId\").ToString())\n<br>                order.UserName = dr(\"userName\").ToString()\n<br>            End If\n<br>\n<br>            connection.Close()\n<br>            Return order\n<br>        End Function\n<br>\n<br>        Public Sub CreateOrderDetails(ByVal orderID As Integer, ByVal bookID As Integer, ByVal price As Decimal)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"insert into OrderDetails(OrderId,BookId,Price) values(@orderId,@bookId,@price)\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@orderId\", SqlDbType.Int))\n<br>            command.Parameters(\"@orderId\").Value = orderID\n<br>            command.Parameters.Add(New SqlParameter(\"@bookId\", SqlDbType.Int))\n<br>            command.Parameters(\"@bookId\").Value = bookID\n<br>            command.Parameters.Add(New SqlParameter(\"@price\", SqlDbType.Decimal))\n<br>            command.Parameters(\"@price\").Value = price\n<br>            connection.Open()\n<br>            command.ExecuteNonQuery()\n<br>            connection.Close()\n<br>        End Sub\n<br>\n<br>        Public Sub ChangeStock(ByVal bookID As Integer)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"update Book set stock=stock-1 where bookId=@bookId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@bookId\", SqlDbType.Int))\n<br>            command.Parameters(\"@bookId\").Value = bookID\n<br>            connection.Open()\n<br>            command.ExecuteNonQuery()\n<br>            connection.Close()\n<br>        End Sub\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "Order.vb",
        "component_type": "VB",
        "codeString": "Namespace Team10BookShop\n<br>    Public Partial Class Order\n<br>        Public Sub New()\n<br>        End Sub\n<br>\n<br>        Public Property OrderID As Integer\n<br>        Public Property UserName As String\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "OrderDetail.vb",
        "component_type": "VB",
        "codeString": "Namespace Team10BookShop\n<br>    Public Partial Class OrderDetail\n<br>        Public Property OrderDetailID As Integer\n<br>        Public Property OrderID As Integer\n<br>        Public Property BookID As Integer\n<br>        Public Property Price As Decimal\n<br>        Public Overridable Property Book As Book\n<br>        Public Overridable Property Order As Order\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "PopulateDataObject.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System.Collections.Generic\n<br>Imports System.Data.SqlClient\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Class PopulateDataObject\n<br>        Public Shared Function PopulateBookList(ByVal dr As SqlDataReader) As List(Of Book)\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>\n<br>            While dr.Read()\n<br>                Dim b As Book = New Book()\n<br>                b.BookID = Integer.Parse(dr(\"bookid\").ToString())\n<br>                b.Title = dr(\"title\").ToString()\n<br>                b.CategoryID = Integer.Parse(dr(\"CategoryId\").ToString())\n<br>                b.ISBN = dr(\"ISBN\").ToString()\n<br>                b.Author = dr(\"Author\").ToString()\n<br>                b.Stock = Integer.Parse(dr(\"Stock\").ToString())\n<br>                b.Price = Decimal.Parse(dr(\"Price\").ToString())\n<br>                books.Add(b)\n<br>            End While\n<br>\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function PopulateBookObject(ByVal dr As SqlDataReader) As Book\n<br>            Dim b As Book = New Book()\n<br>\n<br>            If dr.Read() Then\n<br>                b.BookID = Integer.Parse(dr(\"bookid\").ToString())\n<br>                b.Title = dr(\"title\").ToString()\n<br>                b.CategoryID = Integer.Parse(dr(\"CategoryId\").ToString())\n<br>                b.ISBN = dr(\"ISBN\").ToString()\n<br>                b.Author = dr(\"Author\").ToString()\n<br>                b.Stock = Integer.Parse(dr(\"Stock\").ToString())\n<br>                b.Price = Decimal.Parse(dr(\"Price\").ToString())\n<br>            End If\n<br>\n<br>            Return b\n<br>        End Function\n<br>    End Class\n<br>End Namespace\n"
    },
    {
        "component_name": "SearchBusinessLogic.vb",
        "component_type": "VB",
        "codeString": "\ufeffImports System\n<br>Imports System.Collections.Generic\n<br>Imports System.Data\n<br>Imports System.Data.SqlClient\n<br>\n<br>Namespace Team10BookShop\n<br>    Public Class SearchBusinessLogic\n<br>        Public Shared Function SearchBooksByISBN(ByVal ISBN As Integer) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where isbn=@isbn\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@isbn\", SqlDbType.Int))\n<br>            command.Parameters(\"@isbn\").Value = ISBN\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function SearchBooksByISBNCategory(ByVal ISBN As Integer, ByVal categoryId As Integer) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where isbn=@isbn and categoryId=@categoryId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@isbn\", SqlDbType.Int))\n<br>            command.Parameters(\"@isbn\").Value = ISBN\n<br>            command.Parameters.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            command.Parameters(\"@categoryId\").Value = categoryId\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function SearchBooksByAuthor(ByVal author As String) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where author like @author\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@author\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@author\").Value = \"%\" & author & \"%\"\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function SearchBooksByAuthorCategory(ByVal author As String, ByVal categoryId As Integer) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where author like @author and categoryId=@categoryId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@author\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@author\").Value = \"%\" & author & \"%\"\n<br>            command.Parameters.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            command.Parameters(\"@categoryId\").Value = categoryId\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function SearchBooksByTitle(ByVal title As String) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where title like @title\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@title\", SqlDbType.NVarChar, 40))\n<br>            'command.Parameters.AddWithValue(\"@title\", \"%\" + title + \"%\");\n<br>            command.Parameters(\"@title\").Value = \"%\" & title & \"%\"\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function SearchBooksByTitleCategory(ByVal title As String, ByVal categoryId As Integer) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where title like @title and categoryId=@categoryId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@title\", SqlDbType.NVarChar, 40))\n<br>            command.Parameters(\"@title\").Value = \"%\" & title & \"%\"\n<br>            command.Parameters.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            command.Parameters(\"@categoryId\").Value = categoryId\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>\n<br>        Public Shared Function SearchBooksByCategory(ByVal categoryId As Integer) As List(Of Book)\n<br>            Dim conString As String = Configuration.ConfigurationManager.ConnectionStrings(\"MyBooks\").ConnectionString\n<br>            Dim books As List(Of Book) = New List(Of Book)()\n<br>            Dim connection As SqlConnection = New SqlConnection(conString)\n<br>            Dim command As SqlCommand = New SqlCommand(\"select * from Book where categoryId=@categoryId\", connection)\n<br>            command.Parameters.Add(New SqlParameter(\"@categoryId\", SqlDbType.Int))\n<br>            command.Parameters(\"@categoryId\").Value = categoryId\n<br>            connection.Open()\n<br>            Dim dr As SqlDataReader = command.ExecuteReader()\n<br>            books = PopulateDataObject.PopulateBookList(dr)\n<br>            connection.Close()\n<br>            Return books\n<br>        End Function\n<br>    End Class\n<br>End Namespace\n"
    }
]