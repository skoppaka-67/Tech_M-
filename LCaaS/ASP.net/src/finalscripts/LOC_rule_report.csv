rule_id,file_name,function_name,ScreenField,SectionName,CLASLabel,rule_statement,Rule_Relation,rule_description,rule_type,lob,dependent_control,parent_rule_id,External_rule_id
rule-1,PFPolicyInput.aspx,setcboPfPPHSBBincLmt,cboPfPPHSBBincLmt, HSB Rated Details,1.)Business Income,"setcboPfPPHSBBincLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBBincLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-1,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBBincLmt, HSB Rated Details,1.)Business Income,setcboPfPPHSBBincLmt(),rule-1,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBBincLmt, HSB Rated Details,1.)Business Income,SetupPagePresentationHSBRated(),rule-1,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBBincLmt, HSB Rated Details,1.)Business Income,SetupPropertyPolicyInputControl(),rule-1,,,,,,
rule-2,PFPolicyInput.aspx,setcboPfPPHSBEqpBdLmt,cboPfPPHSBEqpBdLmt, HSB Rated Details,1.)Equipment Breakdown ,"setcboPfPPHSBEqpBdLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBEqpBdLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-2,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBEqpBdLmt, HSB Rated Details,1.)Equipment Breakdown ,setcboPfPPHSBEqpBdLmt(),rule-2,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBEqpBdLmt, HSB Rated Details,1.)Equipment Breakdown ,SetupPagePresentationHSBRated(),rule-2,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBEqpBdLmt, HSB Rated Details,1.)Equipment Breakdown ,SetupPropertyPolicyInputControl(),rule-2,,,,,,
rule-3,PFPolicyInput.aspx,setcboPfPPHSBExpdExpLmt,cboPfPPHSBExpdExpLmt, HSB Rated Details,1.)Expediting Expense,"setcboPfPPHSBExpdExpLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBExpdExpLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-3,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBExpdExpLmt, HSB Rated Details,1.)Expediting Expense,setcboPfPPHSBExpdExpLmt(),rule-3,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBExpdExpLmt, HSB Rated Details,1.)Expediting Expense,SetupPagePresentationHSBRated(),rule-3,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBExpdExpLmt, HSB Rated Details,1.)Expediting Expense,SetupPropertyPolicyInputControl(),rule-3,,,,,,
rule-4,PFPolicyInput.aspx,setcboPfPPHSBExxpLmt,cboPfPPHSBExxpLmt, HSB Rated Details,1.)Extra Expense,"setcboPfPPHSBExxpLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBExxpLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-4,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBExxpLmt, HSB Rated Details,1.)Extra Expense,setcboPfPPHSBExxpLmt(),rule-4,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBExxpLmt, HSB Rated Details,1.)Extra Expense,SetupPagePresentationHSBRated(),rule-4,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBExxpLmt, HSB Rated Details,1.)Extra Expense,SetupPropertyPolicyInputControl(),rule-4,,,,,,
rule-5,PFPolicyInput.aspx,setcboPfPPHSBHzSbstLmt,cboPfPPHSBHzSbstLmt, HSB Rated Details,1.)Hazardous Substance,"setcboPfPPHSBHzSbstLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBHzSbstLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-5,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBHzSbstLmt, HSB Rated Details,1.)Hazardous Substance,setcboPfPPHSBHzSbstLmt(),rule-5,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBHzSbstLmt, HSB Rated Details,1.)Hazardous Substance,SetupPagePresentationHSBRated(),rule-5,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBHzSbstLmt, HSB Rated Details,1.)Hazardous Substance,SetupPropertyPolicyInputControl(),rule-5,,,,,,
rule-6,PFPolicyInput.aspx,setcboPfPPHSBSplgLmt,cboPfPPHSBSplgLmt, HSB Rated Details,1.)Spoilage,"setcboPfPPHSBSplgLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBSplgLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-6,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBSplgLmt, HSB Rated Details,1.)Spoilage,setcboPfPPHSBSplgLmt(),rule-6,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBSplgLmt, HSB Rated Details,1.)Spoilage,SetupPagePresentationHSBRated(),rule-6,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBSplgLmt, HSB Rated Details,1.)Spoilage,SetupPropertyPolicyInputControl(),rule-6,,,,,,
rule-7,PFPolicyInput.aspx,setcboPfPPHSBSrvIntLmt,cboPfPPHSBSrvIntLmt, HSB Rated Details,1.)Service Interruption,"setcboPfPPHSBSrvIntLmt():            Dim sSelectedValue As String = _oLobData.Policy.Input(""PfPPHSBSrvIntLmt"").Value.Trim
                 If sSelectedValue <> """" Then
                     oAttributes.Add(""Selected"", sSelectedValue)
                 Else
                     oAttributes.Add(""Selected"", """")
                 End If
",rule-7,,direct_rule,,,,
,PFPolicyInput.aspx,,cboPfPPHSBSrvIntLmt, HSB Rated Details,1.)Service Interruption,setcboPfPPHSBSrvIntLmt(),rule-7,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBSrvIntLmt, HSB Rated Details,1.)Service Interruption,SetupPagePresentationHSBRated(),rule-7,,,,,,
,PFPolicyInput.aspx,,cboPfPPHSBSrvIntLmt, HSB Rated Details,1.)Service Interruption,SetupPropertyPolicyInputControl(),rule-7,,,,,,
rule-8,PFPolicyInput.aspx,setchkCLASRated,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"Class_Variable:        Private _businessIncomeApply As Boolean = False
 SetupPagePresentation():            _businessIncomeApply = _isElitePac2015Applicable = False AndAlso newCopCov AndAlso                                     (_oCOData.Attributes.Common.PolicyProgramType.Equals(PROGRAM_CODE_SENIOR_LIVING) OrElse                                      _oCOData.Attributes.Common.PolicySIC.Equals(SIC_CODE_ASSISTED_LIVING_FACILITIES)) SetupPagePresentation():            Dim newCopCov As Boolean = applicationShared.SupportIsInEffect(COP_EFFECTIVE, Date.ParseExact(_sEffDate, DATE_FORMAT_MMDDYY, Nothing))
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                 If _businessIncomeApply Then
                     .Checked = True
                     pnlClasRated.InitialClientVisibility = True
                 Else
",rule-8,,variable_type_rule,,,,
,PFPolicyInput.aspx,,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,setchkCLASRated(),rule-8,,,,,,
,PFPolicyInput.aspx,,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,SetControlsSystemsPowerPacOptions(),rule-8,,,,,,
rule-9,PFPolicyInput.aspx,setchkCLASRated,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    If _oLobData.Attributes(""sPowPacClsRtdChk"") = ""visible"" Then
                         .Checked = True
                         pnlClasRated.InitialClientVisibility = True
                     Else
                         pnlClasRated.InitialClientVisibility = False
                     End If
","rule-8,rule-9",,direct_rule,,,,
,PFPolicyInput.aspx,setchkCLASRated,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                End If
",rule-8,,,,,,
rule-10,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"            If GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate) >= 106182 Then
                 _oLobData.Policy.Input(""PfPPOptOut"").Value = ddlPfPPOptOut.SelectedValue
",rule-10,,direct_rule,,,,
,PFPolicyInput.aspx,,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,SaveFormSystemsPowerPacOptionsData(),rule-10,,,,,,
,PFPolicyInput.aspx,,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,SaveFormData(),rule-10,,,,,,
rule-10.1,PFPolicyInput.aspx,SaveData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-10,,Function_Invocation_Rule,,,,
rule-10.2,PFPolicyInput.aspx,SaveData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-10,,Function_Invocation_Rule,,,,
rule-11,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                If _oLobShared.HSBRatedByAltPower(_oLobData) = True Then
                     chkHSBOptOut.Checked = False
                     chkCLASRated.Checked = False
                     chkHSBRated.Checked = True
                 End If
","rule-10,rule-11",,direct_rule,,,,PFShared-1403
rule-12,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                If chkCLASRated.Checked = True Then
","rule-10,rule-12",,direct_rule,,,,
rule-13,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value <> ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-10,rule-12,rule-13",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y""
                 Else
","rule-10,rule-12",,,,,,
rule-14,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-10,rule-12,rule-14",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                 End If
","rule-10,rule-12",,,,,,
rule-15,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                If chkHSBRated.Checked = True Then
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = ""F""
                 Else
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-10,rule-15",,direct_rule,,,,
rule-16,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                If chkHSBOptOut.Checked = True Then
","rule-10,rule-16",,direct_rule,,,,
rule-17,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    If Val(_oLobData.Policy.Input(""PfPPOptOut"").Value) = 0 Then
                         _oLobData.Policy.Input(""PfPPOptOut"").Value = ""9""
                     End If
","rule-10,rule-16,rule-17",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                    With _oLobData.Policy.Input
                         .Fields(""PfPPHSBRated"").Value = """"
                         .Fields(""PfPPHSBPrem"").Value = """"
                         .Fields(""PfPPHSBEqpBdLmt"").Value = """"
                         .Fields(""PfPPHSBBincLmt"").Value = """"
                         .Fields(""PfPPHSBExxpLmt"").Value = """"
                         .Fields(""PfPPHSBExpdExpLmt"").Value = """"
                         .Fields(""PfPPHSBHzSbstLmt"").Value = """"
                         .Fields(""PfPPHSBSplgLmt"").Value = """"
                         .Fields(""PfPPHSBSrvIntLmt"").Value = """"
                         .Fields(""PfPPHSBOthCndInd"").Value = """"
                         .Fields(""PfPolPPOverride"").Value = """"
                         .Fields(""PfPolPPCmbDedCd"").Value = """"
                         .Fields(""PfPolPPDDedCd"").Value = """"
                         .Fields(""PfPolPPDACDedCd"").Value = """"
                         .Fields(""PfPolPPDBlrDedCd"").Value = """"
                         .Fields(""PfPolPPDDigDedCd"").Value = """"
                         .Fields(""PfPolPPDElcDedCd"").Value = """"
                         .Fields(""PfPolPPDPrsDedCd"").Value = """"
                         .Fields(""PfPolPPDRfgDedCd"").Value = """"
                         .Fields(""PfPolPPDTrnDedCd"").Value = """"
                         .Fields(""PfPolPPDTrbDedCd"").Value = """"
                         .Fields(""PfPolPPDSpeDedCd"").Value = """"
                         .Fields(""PfPolPPIDedCd"").Value = """"
                         .Fields(""PfPolPPIACDedCd"").Value = """"
                         .Fields(""PfPolPPIBlrDedCd"").Value = """"
                         .Fields(""PfPolPPIDigDedCd"").Value = """"
                         .Fields(""PfPolPPIElcDedCd"").Value = """"
                         .Fields(""PfPolPPIPrsDedCd"").Value = """"
                         .Fields(""PfPolPPIRfgDedCd"").Value = """"
                         .Fields(""PfPolPPITrnDedCd"").Value = """"
                         .Fields(""PfPolPPITrbDedCd"").Value = """"
                         .Fields(""PfPolPSplDedCd"").Value = """"
                         .Fields(""PfPolPPISpeDedCd"").Value = """"
                         .Fields(""PfPPClasRated"").Value = """"
                         .Fields(""PfPPSpl"").Value = """"
                         .Fields(""PfPPSplLim"").Value = """"
                         .Fields(""PfPPSplRate"").Value = """"
                         .Fields(""PfPPClsRtCmbnInd"").Value = """"
                         .Fields(""PfPPClsRtDrctInd"").Value = """"
                         .Fields(""PfPPClsRtIndrctInd"").Value = """"
                         .Fields(""PfPPClsRtSplgInd"").Value = """"
                         .Fields(""PfPPClsRtDedDocInd"").Value = """"
                     End With
                 End If
","rule-10,rule-16",,,,,,
rule-18,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"                If chkCLASRated.Checked = False AndAlso
                          chkHSBRated.Checked = False AndAlso
                           chkHSBOptOut.Checked = False Then
                     _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                     _oLobData.Policy.Input(""PfPPOptOut"").Value = """"
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-10,rule-18",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkCLASRated, SYSTEMS POWER PAC COVERAGE,1.)CLAS Rated,"            End If
",rule-10,,,,,,
rule-19,PFPolicyInput.aspx,setchkComb,chkComb, Specific Equipment Exceptions,1.)Combined All Coverages,"                If Trim(_oLobData.Policy.Input(""PfPolPPCmbDedCd"").Value) > """" Then
                     .Checked = True
                     pnlHSBDirectDeduct.InitialClientVisibility = False
                     pnlHSBIndirectDeduct.InitialClientVisibility = False
                 Else
                     .Checked = False
                 End If
",rule-19,,direct_rule,,,,
,PFPolicyInput.aspx,,chkComb, Specific Equipment Exceptions,1.)Combined All Coverages,setchkComb(),rule-19,,,,,,
,PFPolicyInput.aspx,,chkComb, Specific Equipment Exceptions,1.)Combined All Coverages,SetPnlAllCovs(),rule-19,,,,,,
,PFPolicyInput.aspx,,chkComb, Specific Equipment Exceptions,1.)Combined All Coverages,SetupPagePresentationHSBRated(),rule-19,,,,,,
,PFPolicyInput.aspx,,chkComb, Specific Equipment Exceptions,1.)Combined All Coverages,SetupPropertyPolicyInputControl(),rule-19,,,,,,
rule-20,PFPolicyInput.aspx,SetchkDAir,chkDAir, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDACDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-20,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDAir, Direct Coverages,,SetchkDAir(),rule-20,,,,,,
,PFPolicyInput.aspx,,chkDAir, Direct Coverages,,SetPnlDirectCoverages(),rule-20,,,,,,
,PFPolicyInput.aspx,,chkDAir, Direct Coverages,,SetupPagePresentationHSBRated(),rule-20,,,,,,
,PFPolicyInput.aspx,,chkDAir, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-20,,,,,,
rule-21,PFPolicyInput.aspx,SetchkDBoil,chkDBoil, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDBlrDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-21,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDBoil, Direct Coverages,,SetchkDBoil(),rule-21,,,,,,
,PFPolicyInput.aspx,,chkDBoil, Direct Coverages,,SetPnlDirectCoverages(),rule-21,,,,,,
,PFPolicyInput.aspx,,chkDBoil, Direct Coverages,,SetupPagePresentationHSBRated(),rule-21,,,,,,
,PFPolicyInput.aspx,,chkDBoil, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-21,,,,,,
rule-22,PFPolicyInput.aspx,SetchkDDiagEq,chkDDiagEq, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDDigDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-22,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDDiagEq, Direct Coverages,,SetchkDDiagEq(),rule-22,,,,,,
,PFPolicyInput.aspx,,chkDDiagEq, Direct Coverages,,SetPnlDirectCoverages(),rule-22,,,,,,
,PFPolicyInput.aspx,,chkDDiagEq, Direct Coverages,,SetupPagePresentationHSBRated(),rule-22,,,,,,
,PFPolicyInput.aspx,,chkDDiagEq, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-22,,,,,,
rule-23,PFPolicyInput.aspx,SetchkDEgen,chkDEgen, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolEbHSBDEGEDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-23,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetchkDEgen(),rule-23,,,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetPnlDirectCoverages(),rule-23,,,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetupPagePresentationHSBRated(),rule-23,,,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-23,,,,,,
rule-24,PFPolicyInput.aspx,SetchkDEgen,chkDEgen, Direct Coverages,,"Class_Variable:        Private _ShowAltPower As Boolean = False
 SetupPagePresentationHSBRated():                _ShowAltPower = True
                 If _ShowAltPower = False Then
                     .Visible = False
                 Else
                     .Visible = True
                 End If
",rule-24,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetchkDEgen(),rule-24,,,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetPnlDirectCoverages(),rule-24,,,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetupPagePresentationHSBRated(),rule-24,,,,,,
,PFPolicyInput.aspx,,chkDEgen, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-24,,,,,,
rule-25,PFPolicyInput.aspx,SetchkDElecGen,chkDElecGen, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDElcDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-25,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDElecGen, Direct Coverages,,SetchkDElecGen(),rule-25,,,,,,
,PFPolicyInput.aspx,,chkDElecGen, Direct Coverages,,SetPnlDirectCoverages(),rule-25,,,,,,
,PFPolicyInput.aspx,,chkDElecGen, Direct Coverages,,SetupPagePresentationHSBRated(),rule-25,,,,,,
,PFPolicyInput.aspx,,chkDElecGen, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-25,,,,,,
rule-26,PFPolicyInput.aspx,SetchkDMach,chkDMach, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDMacDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-26,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDMach, Direct Coverages,,SetchkDMach(),rule-26,,,,,,
,PFPolicyInput.aspx,,chkDMach, Direct Coverages,,SetPnlDirectCoverages(),rule-26,,,,,,
,PFPolicyInput.aspx,,chkDMach, Direct Coverages,,SetupPagePresentationHSBRated(),rule-26,,,,,,
,PFPolicyInput.aspx,,chkDMach, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-26,,,,,,
rule-27,PFPolicyInput.aspx,SetchkDPress,chkDPress, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDPrsDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-27,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDPress, Direct Coverages,,SetchkDPress(),rule-27,,,,,,
,PFPolicyInput.aspx,,chkDPress, Direct Coverages,,SetPnlDirectCoverages(),rule-27,,,,,,
,PFPolicyInput.aspx,,chkDPress, Direct Coverages,,SetupPagePresentationHSBRated(),rule-27,,,,,,
,PFPolicyInput.aspx,,chkDPress, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-27,,,,,,
rule-28,PFPolicyInput.aspx,SetchkDRefrig,chkDRefrig, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDRfgDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-28,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDRefrig, Direct Coverages,,SetchkDRefrig(),rule-28,,,,,,
,PFPolicyInput.aspx,,chkDRefrig, Direct Coverages,,SetPnlDirectCoverages(),rule-28,,,,,,
,PFPolicyInput.aspx,,chkDRefrig, Direct Coverages,,SetupPagePresentationHSBRated(),rule-28,,,,,,
,PFPolicyInput.aspx,,chkDRefrig, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-28,,,,,,
rule-29,PFPolicyInput.aspx,SetchkDSpec,chkDSpec, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDSpeDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-29,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDSpec, Direct Coverages,,SetchkDSpec(),rule-29,,,,,,
,PFPolicyInput.aspx,,chkDSpec, Direct Coverages,,SetPnlDirectCoverages(),rule-29,,,,,,
,PFPolicyInput.aspx,,chkDSpec, Direct Coverages,,SetupPagePresentationHSBRated(),rule-29,,,,,,
,PFPolicyInput.aspx,,chkDSpec, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-29,,,,,,
rule-30,PFPolicyInput.aspx,SetchkDTrans,chkDTrans, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDTrnDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-30,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDTrans, Direct Coverages,,SetchkDTrans(),rule-30,,,,,,
,PFPolicyInput.aspx,,chkDTrans, Direct Coverages,,SetPnlDirectCoverages(),rule-30,,,,,,
,PFPolicyInput.aspx,,chkDTrans, Direct Coverages,,SetupPagePresentationHSBRated(),rule-30,,,,,,
,PFPolicyInput.aspx,,chkDTrans, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-30,,,,,,
rule-31,PFPolicyInput.aspx,SetchkDTurb,chkDTurb, Direct Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPDTrbDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-31,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDTurb, Direct Coverages,,SetchkDTurb(),rule-31,,,,,,
,PFPolicyInput.aspx,,chkDTurb, Direct Coverages,,SetPnlDirectCoverages(),rule-31,,,,,,
,PFPolicyInput.aspx,,chkDTurb, Direct Coverages,,SetupPagePresentationHSBRated(),rule-31,,,,,,
,PFPolicyInput.aspx,,chkDTurb, Direct Coverages,,SetupPropertyPolicyInputControl(),rule-31,,,,,,
rule-32,PFPolicyInput.aspx,SetchkDir,chkDir, Specific Equipment Exceptions,1.)Direct Coverages,"                If Trim(_oLobData.Policy.Input(""PfPolPPDDedCd"").Value) > """" Then
                     .Checked = True
                     pnlHSBDirectDeduct.InitialClientVisibility = True
                 Else
                     .Checked = False
                     pnlHSBDirectDeduct.InitialClientVisibility = False
                 End If
",rule-32,,direct_rule,,,,
,PFPolicyInput.aspx,,chkDir, Specific Equipment Exceptions,1.)Direct Coverages,SetchkDir(),rule-32,,,,,,
,PFPolicyInput.aspx,,chkDir, Specific Equipment Exceptions,1.)Direct Coverages,SetPnlDirectCoverages(),rule-32,,,,,,
,PFPolicyInput.aspx,,chkDir, Specific Equipment Exceptions,1.)Direct Coverages,SetupPagePresentationHSBRated(),rule-32,,,,,,
,PFPolicyInput.aspx,,chkDir, Specific Equipment Exceptions,1.)Direct Coverages,SetupPropertyPolicyInputControl(),rule-32,,,,,,
rule-33,PFPolicyInput.aspx,setchkHSBOptout,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                If _oLobData.Attributes(""sPowPacOptOutChk"") = ""visible"" Then
                     chkHSBOptOut.Checked = True
                 End If
",rule-33,,direct_rule,,,,
,PFPolicyInput.aspx,,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,setchkHSBOptout(),rule-33,,,,,,
,PFPolicyInput.aspx,,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,SetControlsSystemsPowerPacOptions(),rule-33,,,,,,
rule-34,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"            If GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate) >= 106182 Then
                 _oLobData.Policy.Input(""PfPPOptOut"").Value = ddlPfPPOptOut.SelectedValue
",rule-34,,direct_rule,,,,
,PFPolicyInput.aspx,,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,SaveFormSystemsPowerPacOptionsData(),rule-34,,,,,,
,PFPolicyInput.aspx,,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,SaveFormData(),rule-34,,,,,,
rule-34.1,PFPolicyInput.aspx,SaveData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-34,,Function_Invocation_Rule,,,,
rule-34.2,PFPolicyInput.aspx,SaveData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-34,,Function_Invocation_Rule,,,,
rule-35,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                If _oLobShared.HSBRatedByAltPower(_oLobData) = True Then
                     chkHSBOptOut.Checked = False
                     chkCLASRated.Checked = False
                     chkHSBRated.Checked = True
                 End If
","rule-34,rule-35",,direct_rule,,,,PFShared-1403
rule-36,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                If chkCLASRated.Checked = True Then
","rule-34,rule-36",,direct_rule,,,,
rule-37,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value <> ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-34,rule-36,rule-37",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y""
                 Else
","rule-34,rule-36",,,,,,
rule-38,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-34,rule-36,rule-38",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                 End If
","rule-34,rule-36",,,,,,
rule-39,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                If chkHSBRated.Checked = True Then
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = ""F""
                 Else
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-34,rule-39",,direct_rule,,,,
rule-40,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                If chkHSBOptOut.Checked = True Then
","rule-34,rule-40",,direct_rule,,,,
rule-41,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                    If Val(_oLobData.Policy.Input(""PfPPOptOut"").Value) = 0 Then
                         _oLobData.Policy.Input(""PfPPOptOut"").Value = ""9""
                     End If
","rule-34,rule-40,rule-41",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                    With _oLobData.Policy.Input
                         .Fields(""PfPPHSBRated"").Value = """"
                         .Fields(""PfPPHSBPrem"").Value = """"
                         .Fields(""PfPPHSBEqpBdLmt"").Value = """"
                         .Fields(""PfPPHSBBincLmt"").Value = """"
                         .Fields(""PfPPHSBExxpLmt"").Value = """"
                         .Fields(""PfPPHSBExpdExpLmt"").Value = """"
                         .Fields(""PfPPHSBHzSbstLmt"").Value = """"
                         .Fields(""PfPPHSBSplgLmt"").Value = """"
                         .Fields(""PfPPHSBSrvIntLmt"").Value = """"
                         .Fields(""PfPPHSBOthCndInd"").Value = """"
                         .Fields(""PfPolPPOverride"").Value = """"
                         .Fields(""PfPolPPCmbDedCd"").Value = """"
                         .Fields(""PfPolPPDDedCd"").Value = """"
                         .Fields(""PfPolPPDACDedCd"").Value = """"
                         .Fields(""PfPolPPDBlrDedCd"").Value = """"
                         .Fields(""PfPolPPDDigDedCd"").Value = """"
                         .Fields(""PfPolPPDElcDedCd"").Value = """"
                         .Fields(""PfPolPPDPrsDedCd"").Value = """"
                         .Fields(""PfPolPPDRfgDedCd"").Value = """"
                         .Fields(""PfPolPPDTrnDedCd"").Value = """"
                         .Fields(""PfPolPPDTrbDedCd"").Value = """"
                         .Fields(""PfPolPPDSpeDedCd"").Value = """"
                         .Fields(""PfPolPPIDedCd"").Value = """"
                         .Fields(""PfPolPPIACDedCd"").Value = """"
                         .Fields(""PfPolPPIBlrDedCd"").Value = """"
                         .Fields(""PfPolPPIDigDedCd"").Value = """"
                         .Fields(""PfPolPPIElcDedCd"").Value = """"
                         .Fields(""PfPolPPIPrsDedCd"").Value = """"
                         .Fields(""PfPolPPIRfgDedCd"").Value = """"
                         .Fields(""PfPolPPITrnDedCd"").Value = """"
                         .Fields(""PfPolPPITrbDedCd"").Value = """"
                         .Fields(""PfPolPSplDedCd"").Value = """"
                         .Fields(""PfPolPPISpeDedCd"").Value = """"
                         .Fields(""PfPPClasRated"").Value = """"
                         .Fields(""PfPPSpl"").Value = """"
                         .Fields(""PfPPSplLim"").Value = """"
                         .Fields(""PfPPSplRate"").Value = """"
                         .Fields(""PfPPClsRtCmbnInd"").Value = """"
                         .Fields(""PfPPClsRtDrctInd"").Value = """"
                         .Fields(""PfPPClsRtIndrctInd"").Value = """"
                         .Fields(""PfPPClsRtSplgInd"").Value = """"
                         .Fields(""PfPPClsRtDedDocInd"").Value = """"
                     End With
                 End If
","rule-34,rule-40",,,,,,
rule-42,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"                If chkCLASRated.Checked = False AndAlso
                          chkHSBRated.Checked = False AndAlso
                           chkHSBOptOut.Checked = False Then
                     _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                     _oLobData.Policy.Input(""PfPPOptOut"").Value = """"
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-34,rule-42",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBOptOut, SYSTEMS POWER PAC COVERAGE,1.)Opt Out,"            End If
",rule-34,,,,,,
rule-43,PFPolicyInput.aspx,setchkHSBRated,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                If Trim(_oLobData.Attributes(""sPowPacHSBRtdChk"")) = ""visible"" Then
                     .Checked = True
                     pnlHSBRated.InitialClientVisibility = True
                 Else
                     pnlHSBRated.InitialClientVisibility = False
                 End If
",rule-43,,direct_rule,,,,
,PFPolicyInput.aspx,,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,setchkHSBRated(),rule-43,,,,,,
,PFPolicyInput.aspx,,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,SetControlsSystemsPowerPacOptions(),rule-43,,,,,,
rule-44,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"            If GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate) >= 106182 Then
                 _oLobData.Policy.Input(""PfPPOptOut"").Value = ddlPfPPOptOut.SelectedValue
",rule-44,,direct_rule,,,,
,PFPolicyInput.aspx,,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,SaveFormSystemsPowerPacOptionsData(),rule-44,,,,,,
,PFPolicyInput.aspx,,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,SaveFormData(),rule-44,,,,,,
rule-44.1,PFPolicyInput.aspx,SaveData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-44,,Function_Invocation_Rule,,,,
rule-44.2,PFPolicyInput.aspx,SaveData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-44,,Function_Invocation_Rule,,,,
rule-45,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                If _oLobShared.HSBRatedByAltPower(_oLobData) = True Then
                     chkHSBOptOut.Checked = False
                     chkCLASRated.Checked = False
                     chkHSBRated.Checked = True
                 End If
","rule-44,rule-45",,direct_rule,,,,PFShared-1403
rule-46,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                If chkCLASRated.Checked = True Then
","rule-44,rule-46",,direct_rule,,,,
rule-47,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value <> ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-44,rule-46,rule-47",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y""
                 Else
","rule-44,rule-46",,,,,,
rule-48,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-44,rule-46,rule-48",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                 End If
","rule-44,rule-46",,,,,,
rule-49,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                If chkHSBRated.Checked = True Then
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = ""F""
                 Else
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-44,rule-49",,direct_rule,,,,
rule-50,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                If chkHSBOptOut.Checked = True Then
","rule-44,rule-50",,direct_rule,,,,
rule-51,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                    If Val(_oLobData.Policy.Input(""PfPPOptOut"").Value) = 0 Then
                         _oLobData.Policy.Input(""PfPPOptOut"").Value = ""9""
                     End If
","rule-44,rule-50,rule-51",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                    With _oLobData.Policy.Input
                         .Fields(""PfPPHSBRated"").Value = """"
                         .Fields(""PfPPHSBPrem"").Value = """"
                         .Fields(""PfPPHSBEqpBdLmt"").Value = """"
                         .Fields(""PfPPHSBBincLmt"").Value = """"
                         .Fields(""PfPPHSBExxpLmt"").Value = """"
                         .Fields(""PfPPHSBExpdExpLmt"").Value = """"
                         .Fields(""PfPPHSBHzSbstLmt"").Value = """"
                         .Fields(""PfPPHSBSplgLmt"").Value = """"
                         .Fields(""PfPPHSBSrvIntLmt"").Value = """"
                         .Fields(""PfPPHSBOthCndInd"").Value = """"
                         .Fields(""PfPolPPOverride"").Value = """"
                         .Fields(""PfPolPPCmbDedCd"").Value = """"
                         .Fields(""PfPolPPDDedCd"").Value = """"
                         .Fields(""PfPolPPDACDedCd"").Value = """"
                         .Fields(""PfPolPPDBlrDedCd"").Value = """"
                         .Fields(""PfPolPPDDigDedCd"").Value = """"
                         .Fields(""PfPolPPDElcDedCd"").Value = """"
                         .Fields(""PfPolPPDPrsDedCd"").Value = """"
                         .Fields(""PfPolPPDRfgDedCd"").Value = """"
                         .Fields(""PfPolPPDTrnDedCd"").Value = """"
                         .Fields(""PfPolPPDTrbDedCd"").Value = """"
                         .Fields(""PfPolPPDSpeDedCd"").Value = """"
                         .Fields(""PfPolPPIDedCd"").Value = """"
                         .Fields(""PfPolPPIACDedCd"").Value = """"
                         .Fields(""PfPolPPIBlrDedCd"").Value = """"
                         .Fields(""PfPolPPIDigDedCd"").Value = """"
                         .Fields(""PfPolPPIElcDedCd"").Value = """"
                         .Fields(""PfPolPPIPrsDedCd"").Value = """"
                         .Fields(""PfPolPPIRfgDedCd"").Value = """"
                         .Fields(""PfPolPPITrnDedCd"").Value = """"
                         .Fields(""PfPolPPITrbDedCd"").Value = """"
                         .Fields(""PfPolPSplDedCd"").Value = """"
                         .Fields(""PfPolPPISpeDedCd"").Value = """"
                         .Fields(""PfPPClasRated"").Value = """"
                         .Fields(""PfPPSpl"").Value = """"
                         .Fields(""PfPPSplLim"").Value = """"
                         .Fields(""PfPPSplRate"").Value = """"
                         .Fields(""PfPPClsRtCmbnInd"").Value = """"
                         .Fields(""PfPPClsRtDrctInd"").Value = """"
                         .Fields(""PfPPClsRtIndrctInd"").Value = """"
                         .Fields(""PfPPClsRtSplgInd"").Value = """"
                         .Fields(""PfPPClsRtDedDocInd"").Value = """"
                     End With
                 End If
","rule-44,rule-50",,,,,,
rule-52,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"                If chkCLASRated.Checked = False AndAlso
                          chkHSBRated.Checked = False AndAlso
                           chkHSBOptOut.Checked = False Then
                     _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                     _oLobData.Policy.Input(""PfPPOptOut"").Value = """"
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-44,rule-52",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,chkHSBRated, SYSTEMS POWER PAC COVERAGE,1.)HSB Rated,"            End If
",rule-44,,,,,,
rule-53,PFPolicyInput.aspx,SetchkIAir,chkIAir, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPIACDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-53,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIAir, Indirect Coverages,,SetchkIAir(),rule-53,,,,,,
,PFPolicyInput.aspx,,chkIAir, Indirect Coverages,,SetPnlInDirectCoverages(),rule-53,,,,,,
,PFPolicyInput.aspx,,chkIAir, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-53,,,,,,
,PFPolicyInput.aspx,,chkIAir, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-53,,,,,,
rule-54,PFPolicyInput.aspx,SetchkIBoil,chkIBoil, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPIBlrDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-54,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIBoil, Indirect Coverages,,SetchkIBoil(),rule-54,,,,,,
,PFPolicyInput.aspx,,chkIBoil, Indirect Coverages,,SetPnlInDirectCoverages(),rule-54,,,,,,
,PFPolicyInput.aspx,,chkIBoil, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-54,,,,,,
,PFPolicyInput.aspx,,chkIBoil, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-54,,,,,,
rule-55,PFPolicyInput.aspx,SetchkIEgen,chkIEgen, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolHSBIEGEDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-55,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetchkIEgen(),rule-55,,,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetPnlInDirectCoverages(),rule-55,,,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-55,,,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-55,,,,,,
rule-56,PFPolicyInput.aspx,SetchkIEgen,chkIEgen, Indirect Coverages,,"Class_Variable:        Private _ShowAltPower As Boolean = False
 SetupPagePresentationHSBRated():                _ShowAltPower = True
                 If _ShowAltPower = False Then
                     .Visible = False
                 Else
                     .Visible = True
                 End If
",rule-56,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetchkIEgen(),rule-56,,,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetPnlInDirectCoverages(),rule-56,,,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-56,,,,,,
,PFPolicyInput.aspx,,chkIEgen, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-56,,,,,,
rule-57,PFPolicyInput.aspx,SetchkIElecGen,chkIElecGen, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPIElcDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-57,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIElecGen, Indirect Coverages,,SetchkIElecGen(),rule-57,,,,,,
,PFPolicyInput.aspx,,chkIElecGen, Indirect Coverages,,SetPnlInDirectCoverages(),rule-57,,,,,,
,PFPolicyInput.aspx,,chkIElecGen, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-57,,,,,,
,PFPolicyInput.aspx,,chkIElecGen, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-57,,,,,,
rule-58,PFPolicyInput.aspx,SetchkIMach,chkIMach, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPIMacDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-58,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIMach, Indirect Coverages,,SetchkIMach(),rule-58,,,,,,
,PFPolicyInput.aspx,,chkIMach, Indirect Coverages,,SetPnlInDirectCoverages(),rule-58,,,,,,
,PFPolicyInput.aspx,,chkIMach, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-58,,,,,,
,PFPolicyInput.aspx,,chkIMach, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-58,,,,,,
rule-59,PFPolicyInput.aspx,SetchkIPress,chkIPress, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPIPrsDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-59,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIPress, Indirect Coverages,,SetchkIPress(),rule-59,,,,,,
,PFPolicyInput.aspx,,chkIPress, Indirect Coverages,,SetPnlInDirectCoverages(),rule-59,,,,,,
,PFPolicyInput.aspx,,chkIPress, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-59,,,,,,
,PFPolicyInput.aspx,,chkIPress, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-59,,,,,,
rule-60,PFPolicyInput.aspx,SetchkIRefrig,chkIRefrig, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPIRfgDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-60,,direct_rule,,,,
,PFPolicyInput.aspx,,chkIRefrig, Indirect Coverages,,SetchkIRefrig(),rule-60,,,,,,
,PFPolicyInput.aspx,,chkIRefrig, Indirect Coverages,,SetPnlInDirectCoverages(),rule-60,,,,,,
,PFPolicyInput.aspx,,chkIRefrig, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-60,,,,,,
,PFPolicyInput.aspx,,chkIRefrig, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-60,,,,,,
rule-61,PFPolicyInput.aspx,SetchkISpec,chkISpec, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPISpeDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-61,,direct_rule,,,,
,PFPolicyInput.aspx,,chkISpec, Indirect Coverages,,SetchkISpec(),rule-61,,,,,,
,PFPolicyInput.aspx,,chkISpec, Indirect Coverages,,SetPnlInDirectCoverages(),rule-61,,,,,,
,PFPolicyInput.aspx,,chkISpec, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-61,,,,,,
,PFPolicyInput.aspx,,chkISpec, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-61,,,,,,
rule-62,PFPolicyInput.aspx,SetchkITrans,chkITrans, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPITrnDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-62,,direct_rule,,,,
,PFPolicyInput.aspx,,chkITrans, Indirect Coverages,,SetchkITrans(),rule-62,,,,,,
,PFPolicyInput.aspx,,chkITrans, Indirect Coverages,,SetPnlInDirectCoverages(),rule-62,,,,,,
,PFPolicyInput.aspx,,chkITrans, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-62,,,,,,
,PFPolicyInput.aspx,,chkITrans, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-62,,,,,,
rule-63,PFPolicyInput.aspx,SetchkITurb,chkITurb, Indirect Coverages,,"                If Trim(_oLobData.Policy.Input(""PfPolPPITrbDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-63,,direct_rule,,,,
,PFPolicyInput.aspx,,chkITurb, Indirect Coverages,,SetchkITurb(),rule-63,,,,,,
,PFPolicyInput.aspx,,chkITurb, Indirect Coverages,,SetPnlInDirectCoverages(),rule-63,,,,,,
,PFPolicyInput.aspx,,chkITurb, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-63,,,,,,
,PFPolicyInput.aspx,,chkITurb, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-63,,,,,,
rule-64,PFPolicyInput.aspx,SetchkInd,chkInd, Specific Equipment Exceptions,1.)Indirect Coverages,"                If Trim(_oLobData.Policy.Input(""PfPolPPIDedCd"").Value) > """" Then
                     .Checked = True
                     pnlHSBIndirectDeduct.InitialClientVisibility = True
                 Else
                     .Checked = False
                     pnlHSBIndirectDeduct.InitialClientVisibility = False
                 End If
",rule-64,,direct_rule,,,,
,PFPolicyInput.aspx,,chkInd, Specific Equipment Exceptions,1.)Indirect Coverages,SetchkInd(),rule-64,,,,,,
,PFPolicyInput.aspx,,chkInd, Specific Equipment Exceptions,1.)Indirect Coverages,SetPnlInDirectCoverages(),rule-64,,,,,,
,PFPolicyInput.aspx,,chkInd, Specific Equipment Exceptions,1.)Indirect Coverages,SetupPagePresentationHSBRated(),rule-64,,,,,,
,PFPolicyInput.aspx,,chkInd, Specific Equipment Exceptions,1.)Indirect Coverages,SetupPropertyPolicyInputControl(),rule-64,,,,,,
rule-65,PFPolicyInput.aspx,setchkInstitutionalRisk,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"                If isInstituteRiskEligible(_oLobData.Policy.Input) Then
",rule-65,,variable_type_rule,,,,
,PFPolicyInput.aspx,,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,setchkInstitutionalRisk(),rule-65,,,,,,
,PFPolicyInput.aspx,,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,SetControlsPolicyInformation(),rule-65,,,,,,
rule-66,PFPolicyInput.aspx,setchkInstitutionalRisk,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"                    If (_oLobData.Attributes.Common.UserType.Equals(USER_TYPE_AGENT) = False) Then
                         pnlPolInfo.AddHelpItem(""Special Institutional Risk Rating Plan"", 1095, ""chkInstitutionalRisk"")
                     End If
","rule-65,rule-66",,direct_rule,,,,
,PFPolicyInput.aspx,setchkInstitutionalRisk,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"                    .Visible = True
                     .Checked = _oLobData.Policy.Input(""PfMisc2"").Value.CL_EqualsYesAbbreviation()
",rule-65,,,,,,
rule-67,PFPolicyInput.aspx,setchkInstitutionalRisk,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"Class_Variable:        Private _sPredState As String = String.Empty
 SetupPagePresentation():                _sPredState = .PredominantState
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                     If _isElitePac2015Applicable = False AndAlso _sPredState.Equals(STATE_CODE_PENNSYLVANNIA) Then
                         .ToolTip = ""Check box if Public & Institutional Property Rate Plan applies.""
                     End If
","rule-65,rule-67",,variable_type_rule,,,,
,PFPolicyInput.aspx,setchkInstitutionalRisk,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"                Else
                     .Visible = False
                 End If
",rule-65,,,,,,
rule-68,PFPolicyInput.aspx,SaveFormSpecialRatingPlansData,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"            If chkInstitutionalRisk.Checked = True Then
                 _oLobData.Policy.Input(""PfMisc2"").Value = ""Y""
             Else
                 _oLobData.Policy.Input(""PfMisc2"").Value = ""N""
             End If
",rule-68,,direct_rule,,,,
,PFPolicyInput.aspx,,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,SaveFormSpecialRatingPlansData(),rule-68,,,,,,
,PFPolicyInput.aspx,,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,SaveFormData(),rule-68,,,,,,
rule-68.1,PFPolicyInput.aspx,SaveData,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-68,,Function_Invocation_Rule,,,,
rule-68.2,PFPolicyInput.aspx,SaveData,chkInstitutionalRisk, PROPERTY POLICY INFORMATION,1.)Institutional Risk/Public Rating,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-68,,Function_Invocation_Rule,,,,
rule-69,PFPolicyInput.aspx,SetchkLim1001,chkLim1001, BLANKET GROUP #1,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal1"").Value, 1, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-69,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim1001, BLANKET GROUP #1,,SetchkLim1001(),rule-69,,,,,,
,PFPolicyInput.aspx,,chkLim1001, BLANKET GROUP #1,,SetupPagePresentationBlanlet(),rule-69,,,,,,
,PFPolicyInput.aspx,,chkLim1001, BLANKET GROUP #1,,SetupPropertyPolicyInputControl(),rule-69,,,,,,
rule-70,PFPolicyInput.aspx,SetchkLim1002,chkLim1002, BLANKET GROUP #2,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal2"").Value, 1, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-70,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim1002, BLANKET GROUP #2,,SetchkLim1002(),rule-70,,,,,,
,PFPolicyInput.aspx,,chkLim1002, BLANKET GROUP #2,,SetupPagePresentationBlanlet(),rule-70,,,,,,
,PFPolicyInput.aspx,,chkLim1002, BLANKET GROUP #2,,SetupPropertyPolicyInputControl(),rule-70,,,,,,
rule-71,PFPolicyInput.aspx,SetchkLim1003,chkLim1003, BLANKET GROUP #3,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal3"").Value, 1, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-71,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim1003, BLANKET GROUP #3,,SetchkLim1003(),rule-71,,,,,,
,PFPolicyInput.aspx,,chkLim1003, BLANKET GROUP #3,,SetupPagePresentationBlanlet(),rule-71,,,,,,
,PFPolicyInput.aspx,,chkLim1003, BLANKET GROUP #3,,SetupPropertyPolicyInputControl(),rule-71,,,,,,
rule-72,PFPolicyInput.aspx,SetchkLim1004,chkLim1004, BLANKET GROUP #4,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal4"").Value, 1, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-72,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim1004, BLANKET GROUP #4,,SetchkLim1004(),rule-72,,,,,,
,PFPolicyInput.aspx,,chkLim1004, BLANKET GROUP #4,,SetupPagePresentationBlanlet(),rule-72,,,,,,
,PFPolicyInput.aspx,,chkLim1004, BLANKET GROUP #4,,SetupPropertyPolicyInputControl(),rule-72,,,,,,
rule-73,PFPolicyInput.aspx,SetchkLim901,chkLim901, BLANKET GROUP #1,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal1"").Value, 2, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-73,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim901, BLANKET GROUP #1,,SetchkLim901(),rule-73,,,,,,
,PFPolicyInput.aspx,,chkLim901, BLANKET GROUP #1,,SetupPagePresentationBlanlet(),rule-73,,,,,,
,PFPolicyInput.aspx,,chkLim901, BLANKET GROUP #1,,SetupPropertyPolicyInputControl(),rule-73,,,,,,
rule-74,PFPolicyInput.aspx,SetchkLim902,chkLim902, BLANKET GROUP #2,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal2"").Value, 2, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-74,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim902, BLANKET GROUP #2,,SetchkLim902(),rule-74,,,,,,
,PFPolicyInput.aspx,,chkLim902, BLANKET GROUP #2,,SetupPagePresentationBlanlet(),rule-74,,,,,,
,PFPolicyInput.aspx,,chkLim902, BLANKET GROUP #2,,SetupPropertyPolicyInputControl(),rule-74,,,,,,
rule-75,PFPolicyInput.aspx,SetchkLim903,chkLim903, BLANKET GROUP #3,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal3"").Value, 2, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-75,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim903, BLANKET GROUP #3,,SetchkLim903(),rule-75,,,,,,
,PFPolicyInput.aspx,,chkLim903, BLANKET GROUP #3,,SetupPagePresentationBlanlet(),rule-75,,,,,,
,PFPolicyInput.aspx,,chkLim903, BLANKET GROUP #3,,SetupPropertyPolicyInputControl(),rule-75,,,,,,
rule-76,PFPolicyInput.aspx,SetchkLim904,chkLim904, BLANKET GROUP #4,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal4"").Value, 2, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-76,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLim904, BLANKET GROUP #4,,SetchkLim904(),rule-76,,,,,,
,PFPolicyInput.aspx,,chkLim904, BLANKET GROUP #4,,SetupPagePresentationBlanlet(),rule-76,,,,,,
,PFPolicyInput.aspx,,chkLim904, BLANKET GROUP #4,,SetupPropertyPolicyInputControl(),rule-76,,,,,,
rule-77,PFPolicyInput.aspx,SetchkLimInput1,chkLimInput1, BLANKET GROUP #1,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal1"").Value, 3, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-77,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLimInput1, BLANKET GROUP #1,,SetchkLimInput1(),rule-77,,,,,,
,PFPolicyInput.aspx,,chkLimInput1, BLANKET GROUP #1,,SetupPagePresentationBlanlet(),rule-77,,,,,,
,PFPolicyInput.aspx,,chkLimInput1, BLANKET GROUP #1,,SetupPropertyPolicyInputControl(),rule-77,,,,,,
rule-78,PFPolicyInput.aspx,SetchkLimInput2,chkLimInput2, BLANKET GROUP #2,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal2"").Value, 3, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-78,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLimInput2, BLANKET GROUP #2,,SetchkLimInput2(),rule-78,,,,,,
,PFPolicyInput.aspx,,chkLimInput2, BLANKET GROUP #2,,SetupPagePresentationBlanlet(),rule-78,,,,,,
,PFPolicyInput.aspx,,chkLimInput2, BLANKET GROUP #2,,SetupPropertyPolicyInputControl(),rule-78,,,,,,
rule-79,PFPolicyInput.aspx,SetchkLimInput3,chkLimInput3, BLANKET GROUP #3,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal3"").Value, 3, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-79,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLimInput3, BLANKET GROUP #3,,SetchkLimInput3(),rule-79,,,,,,
,PFPolicyInput.aspx,,chkLimInput3, BLANKET GROUP #3,,SetupPagePresentationBlanlet(),rule-79,,,,,,
,PFPolicyInput.aspx,,chkLimInput3, BLANKET GROUP #3,,SetupPropertyPolicyInputControl(),rule-79,,,,,,
rule-80,PFPolicyInput.aspx,SetchkLimInput4,chkLimInput4, BLANKET GROUP #4,,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal4"").Value, 3, 1) = ""1"" Then
                     .Checked = True
                 End If
",rule-80,,direct_rule,,,,
,PFPolicyInput.aspx,,chkLimInput4, BLANKET GROUP #4,,SetchkLimInput4(),rule-80,,,,,,
,PFPolicyInput.aspx,,chkLimInput4, BLANKET GROUP #4,,SetupPagePresentationBlanlet(),rule-80,,,,,,
,PFPolicyInput.aspx,,chkLimInput4, BLANKET GROUP #4,,SetupPropertyPolicyInputControl(),rule-80,,,,,,
rule-81,PFPolicyInput.aspx,SetChkPfBlktAgrdVal1,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,"                If _oLobData.Policy.Input(""PfBlktAgrdVal1"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-81,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,SetChkPfBlktAgrdVal1(),rule-81,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-81,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-81,,,,,,
rule-82,PFPolicyInput.aspx,SetChkPfBlktAgrdVal1,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,"                If _oLobData.Attributes.Common.UserType = ""AGENT"" Then
                     pnlPolBlanket1.AddHelpItem(""Agreed Value"", ""When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""chkPfBlktAgrdVal1"")
                 End If
",rule-82,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,SetChkPfBlktAgrdVal1(),rule-82,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-82,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal1, BLANKET GROUP #1,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-82,,,,,,
rule-83,PFPolicyInput.aspx,SetChkPfBlktAgrdVal2,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,"                If _oLobData.Policy.Input(""PfBlktAgrdVal2"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-83,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,SetChkPfBlktAgrdVal2(),rule-83,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-83,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-83,,,,,,
rule-84,PFPolicyInput.aspx,SetChkPfBlktAgrdVal2,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,"                If _oLobData.Attributes.Common.UserType = ""AGENT"" Then
                     pnlPolBlanket2.AddHelpItem(""Agreed Value"", ""When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""chkPfBlktAgrdVal2"")
                 End If
",rule-84,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,SetChkPfBlktAgrdVal2(),rule-84,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-84,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal2, BLANKET GROUP #2,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-84,,,,,,
rule-85,PFPolicyInput.aspx,SetChkPfBlktAgrdVal3,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,"                If _oLobData.Policy.Input(""PfBlktAgrdVal3"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-85,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,SetChkPfBlktAgrdVal3(),rule-85,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-85,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-85,,,,,,
rule-86,PFPolicyInput.aspx,SetChkPfBlktAgrdVal3,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,"                If _oLobData.Attributes.Common.UserType = ""AGENT"" Then
                     pnlPolBlanket2.AddHelpItem(""Agreed Value"", ""When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""chkPfBlktAgrdVal3"")
                 End If
",rule-86,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,SetChkPfBlktAgrdVal3(),rule-86,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-86,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal3, BLANKET GROUP #3,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-86,,,,,,
rule-87,PFPolicyInput.aspx,SetChkPfBlktAgrdVal4,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,"                If _oLobData.Policy.Input(""PfBlktAgrdVal4"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-87,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,SetChkPfBlktAgrdVal4(),rule-87,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-87,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-87,,,,,,
rule-88,PFPolicyInput.aspx,SetChkPfBlktAgrdVal4,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,"                If _oLobData.Attributes.Common.UserType = ""AGENT"" Then
                     pnlPolBlanket2.AddHelpItem(""Agreed Value"", ""When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""chkPfBlktAgrdVal4"")
                 End If
",rule-88,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,SetChkPfBlktAgrdVal4(),rule-88,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,SetupPagePresentationBlanlet(),rule-88,,,,,,
,PFPolicyInput.aspx,,chkPfBlktAgrdVal4, BLANKET GROUP #4,1.)Agreed Value,SetupPropertyPolicyInputControl(),rule-88,,,,,,
rule-89,PFPolicyInput.aspx,SetPShowNewEq1,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket1.Visible = True
                 chkPfBlktFullEq1.Visible = True
                 ddlPfBlktSubLimEq1.Visible = True
             Else
                 lEQBlanket1.Visible = False
                 chkPfBlktFullEq1.Visible = False
                 ddlPfBlktSubLimEq1.Visible = False
             End If
",rule-89,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,SetPShowNewEq1(),rule-89,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-89,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-89,,,,,,
rule-90,PFPolicyInput.aspx,SetchkPfBlktFullEq1,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,"                If _oLobData.Policy.Input(""PfBlktFullEq1"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-90,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,SetchkPfBlktFullEq1(),rule-90,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-90,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq1, BLANKET GROUP #1,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-90,,,,,,
rule-91,PFPolicyInput.aspx,SetPShowNewEq2,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket2.Visible = True
                 chkPfBlktFullEq2.Visible = True
                 ddlPfBlktSubLimEq2.Visible = True
             Else
                 lEQBlanket2.Visible = False
                 chkPfBlktFullEq2.Visible = False
                 ddlPfBlktSubLimEq2.Visible = False
             End If
",rule-91,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,SetPShowNewEq2(),rule-91,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-91,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-91,,,,,,
rule-92,PFPolicyInput.aspx,SetchkPfBlktFullEq2,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,"                If _oLobData.Policy.Input(""PfBlktFullEq2"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-92,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,SetchkPfBlktFullEq2(),rule-92,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-92,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq2, BLANKET GROUP #2,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-92,,,,,,
rule-93,PFPolicyInput.aspx,SetPShowNewEq3,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket3.Visible = True
                 chkPfBlktFullEq3.Visible = True
                 ddlPfBlktSubLimEq3.Visible = True
             Else
                 lEQBlanket3.Visible = False
                 chkPfBlktFullEq3.Visible = False
                 ddlPfBlktSubLimEq3.Visible = False
             End If
",rule-93,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,SetPShowNewEq3(),rule-93,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-93,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-93,,,,,,
rule-94,PFPolicyInput.aspx,SetchkPfBlktFullEq3,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,"                If _oLobData.Policy.Input(""PfBlktFullEq3"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-94,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,SetchkPfBlktFullEq3(),rule-94,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-94,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq3, BLANKET GROUP #3,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-94,,,,,,
rule-95,PFPolicyInput.aspx,SetPShowNewEq4,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket4.Visible = True
                 chkPfBlktFullEq4.Visible = True
                 ddlPfBlktSubLimEq4.Visible = True
             Else
                 lEQBlanket4.Visible = False
                 chkPfBlktFullEq4.Visible = False
                 ddlPfBlktSubLimEq4.Visible = False
             End If
",rule-95,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,SetPShowNewEq4(),rule-95,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-95,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-95,,,,,,
rule-96,PFPolicyInput.aspx,SetchkPfBlktFullEq4,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,"                If _oLobData.Policy.Input(""PfBlktFullEq4"").Value = ""Y"" Then
                     .Checked = True
                 End If
",rule-96,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,SetchkPfBlktFullEq4(),rule-96,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,SetupPagePresentationBlanlet(),rule-96,,,,,,
,PFPolicyInput.aspx,,chkPfBlktFullEq4, BLANKET GROUP #4,1.)Full Coverage,SetupPropertyPolicyInputControl(),rule-96,,,,,,
rule-97,PFPolicyInput.aspx,setchkPfPPHSBOthCndInd,chkPfPPHSBOthCndInd, HSB Rated Details,1.)Other Conditions,"                If _oLobData.Policy.Input(""PfPPHSBOthCndInd"").Value = ""Y"" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-97,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfPPHSBOthCndInd, HSB Rated Details,1.)Other Conditions,setchkPfPPHSBOthCndInd(),rule-97,,,,,,
,PFPolicyInput.aspx,,chkPfPPHSBOthCndInd, HSB Rated Details,1.)Other Conditions,SetupPagePresentationHSBRated(),rule-97,,,,,,
,PFPolicyInput.aspx,,chkPfPPHSBOthCndInd, HSB Rated Details,1.)Other Conditions,SetupPropertyPolicyInputControl(),rule-97,,,,,,
rule-98,PFPolicyInput.aspx,setchkPfPolTypeL,chkPfPolTypeL, Deductible Overrides,1.)Large Deductible,"                If _oLobData.Policy.Input(""PfPolType"").Value = ""L"" Then
                     .Checked = True
                 ElseIf (_oLobData.Policy.Input(""PfPolType"").Value = ""S"") _
                 Or (_oLobData.Policy.Input(""PfPolType"").Value = ""X"") Then
                     .Enabled = False
                 End If
",rule-98,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfPolTypeL, Deductible Overrides,1.)Large Deductible,setchkPfPolTypeL(),rule-98,,,,,,
,PFPolicyInput.aspx,,chkPfPolTypeL, Deductible Overrides,1.)Large Deductible,SetupPropertyPolicyInputControl(),rule-98,,,,,,
rule-99,PFPolicyInput.aspx,setchkPfPolTypeS,chkPfPolTypeS, Deductible Overrides,1.)SIR,"                If _oLobData.Policy.Input(""PfPolType"").Value = ""S"" Then
                     .Checked = True
                 ElseIf (_oLobData.Policy.Input(""PfPolType"").Value = ""L"") _
                 Or (_oLobData.Policy.Input(""PfPolType"").Value = ""X"") Then
                     .Enabled = False
                 End If
",rule-99,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfPolTypeS, Deductible Overrides,1.)SIR,setchkPfPolTypeS(),rule-99,,,,,,
,PFPolicyInput.aspx,,chkPfPolTypeS, Deductible Overrides,1.)SIR,SetupPropertyPolicyInputControl(),rule-99,,,,,,
rule-100,PFPolicyInput.aspx,setchkPfPolTypeX,chkPfPolTypeX, Deductible Overrides,1.)Location Large Deductible,"                If _oLobData.Policy.Input(""PfPolType"").Value = ""X"" Then
                     .Checked = True
                 ElseIf (_oLobData.Policy.Input(""PfPolType"").Value = ""S"") _
                     Or (_oLobData.Policy.Input(""PfPolType"").Value = ""L"") Then
                     .Enabled = False
                 End If
",rule-100,,direct_rule,,,,
,PFPolicyInput.aspx,,chkPfPolTypeX, Deductible Overrides,1.)Location Large Deductible,setchkPfPolTypeX(),rule-100,,,,,,
,PFPolicyInput.aspx,,chkPfPolTypeX, Deductible Overrides,1.)Location Large Deductible,SetupPropertyPolicyInputControl(),rule-100,,,,,,
rule-101,PFPolicyInput.aspx,setchkSplg,chkSplg, Specific Equipment Exceptions,1.)Spoilage Deductible,"                If Trim(_oLobData.Policy.Input(""PfPolPSplDedCd"").Value) > """" Then
                     .Checked = True
                 Else
                     .Checked = False
                 End If
",rule-101,,direct_rule,,,,
,PFPolicyInput.aspx,,chkSplg, Specific Equipment Exceptions,1.)Spoilage Deductible,setchkSplg(),rule-101,,,,,,
,PFPolicyInput.aspx,,chkSplg, Specific Equipment Exceptions,1.)Spoilage Deductible,SetPnlSpoilage(),rule-101,,,,,,
,PFPolicyInput.aspx,,chkSplg, Specific Equipment Exceptions,1.)Spoilage Deductible,SetupPagePresentationHSBRated(),rule-101,,,,,,
,PFPolicyInput.aspx,,chkSplg, Specific Equipment Exceptions,1.)Spoilage Deductible,SetupPropertyPolicyInputControl(),rule-101,,,,,,
rule-102,PFPolicyInput.aspx,SetDeductibleDropDownList,ddl, Indirect Coverages,,"                If sSelectedValue.Trim().Length() > 0 Then
                     For Each oItem As ListItem In .Items
",rule-102,,direct_rule,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,setddlCombDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlAllCovs(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,setddlSplgDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlSpoilage(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDirDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDAirDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDBoilDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDDiagEqDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDElecGenDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDPressDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDRefrigDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDTransDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDTurbDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDSpecDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDPrdMach(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlDEGenEquip(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIndDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIAirDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIBoilDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIDiagEqDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIElecGenDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIPressDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIRefrigDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlITransDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlITurbDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlISpecDed(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIPrdMach(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetDeductibleDropDownList(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetddlIEGenEquip(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetPnlInDirectCoverages(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPagePresentationHSBRated(),rule-102,,,,,,
,PFPolicyInput.aspx,,ddl, Indirect Coverages,,SetupPropertyPolicyInputControl(),rule-102,,,,,,
rule-103,PFPolicyInput.aspx,SetDeductibleDropDownList,ddl, Indirect Coverages,,"                        If oItem.Value.Trim = sSelectedValue.Trim() Then
                             oItem.Selected = True
                             Exit For
                         End If
","rule-102,rule-103",,variable_type_rule,,,,
rule-103.1,PFPolicyInput.aspx,SetDeductibleDropDownList,ddl, Indirect Coverages,,"                If sSelectedValue.Trim().Length() > 0 Then
                     For Each oItem As ListItem In .Items
                         If oItem.Value.Trim = sSelectedValue.Trim() Then
                             oItem.Selected = True
                             Exit For
                         End If
                     Next
                 End If
",rule-103,,,,,,
,PFPolicyInput.aspx,SetDeductibleDropDownList,ddl, Indirect Coverages,,"                    Next
                 End If
",rule-102,,,,,,
rule-104,PFPolicyInput.aspx,SetddlDEGenEquip,ddlDEGenEquip, Direct Coverages,1.)Electrical Generating Equipment,"Class_Variable:        Private _ShowAltPower As Boolean = False
 SetupPagePresentationHSBRated():                _ShowAltPower = True
                 If _ShowAltPower = False Then
                     .Visible = False
                 Else
                     .Visible = True
                 End If
",rule-104,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlDEGenEquip, Direct Coverages,1.)Electrical Generating Equipment,SetddlDEGenEquip(),rule-104,,,,,,
,PFPolicyInput.aspx,,ddlDEGenEquip, Direct Coverages,1.)Electrical Generating Equipment,SetPnlDirectCoverages(),rule-104,,,,,,
,PFPolicyInput.aspx,,ddlDEGenEquip, Direct Coverages,1.)Electrical Generating Equipment,SetupPagePresentationHSBRated(),rule-104,,,,,,
,PFPolicyInput.aspx,,ddlDEGenEquip, Direct Coverages,1.)Electrical Generating Equipment,SetupPropertyPolicyInputControl(),rule-104,,,,,,
rule-105,PFPolicyInput.aspx,SetddlDElecGenDed,ddlDElecGenDed, Direct Coverages,1.)Electrical Generators,"Class_Variable:        Private _nGrgJulEffDate As Integer = 0
 SetupPagePresentation():                _nGrgJulEffDate = BusinessServices.Utility.GrgJul(.PolicyEffectiveDate)
                 If _nGrgJulEffDate > 111243 Then
                     oDataTable = _oLobBusPolHSBRated.GetListDirectElectricGens2011()
                 Else
                     oDataTable = _oLobBusPolHSBRated.GetListDirectElectricGens()
                 End If
",rule-105,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlDElecGenDed, Direct Coverages,1.)Electrical Generators,SetddlDElecGenDed(),rule-105,,,,,,
,PFPolicyInput.aspx,,ddlDElecGenDed, Direct Coverages,1.)Electrical Generators,SetPnlDirectCoverages(),rule-105,,,,,,
,PFPolicyInput.aspx,,ddlDElecGenDed, Direct Coverages,1.)Electrical Generators,SetupPagePresentationHSBRated(),rule-105,,,,,,
,PFPolicyInput.aspx,,ddlDElecGenDed, Direct Coverages,1.)Electrical Generators,SetupPropertyPolicyInputControl(),rule-105,,,,,,
rule-106,PFPolicyInput.aspx,SetddlDTurbDed,ddlDTurbDed, Direct Coverages,1.)Turbines,"Class_Variable:        Private _nGrgJulEffDate As Integer = 0
 SetupPagePresentation():                _nGrgJulEffDate = BusinessServices.Utility.GrgJul(.PolicyEffectiveDate)
                 If _nGrgJulEffDate > 111243 Then
                     oDataTable = _oLobBusPolHSBRated.GetListDirectTurbines2011()
                 Else
                     oDataTable = _oLobBusPolHSBRated.GetListDirectTurbines()
                 End If
",rule-106,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlDTurbDed, Direct Coverages,1.)Turbines,SetddlDTurbDed(),rule-106,,,,,,
,PFPolicyInput.aspx,,ddlDTurbDed, Direct Coverages,1.)Turbines,SetPnlDirectCoverages(),rule-106,,,,,,
,PFPolicyInput.aspx,,ddlDTurbDed, Direct Coverages,1.)Turbines,SetupPagePresentationHSBRated(),rule-106,,,,,,
,PFPolicyInput.aspx,,ddlDTurbDed, Direct Coverages,1.)Turbines,SetupPropertyPolicyInputControl(),rule-106,,,,,,
rule-107,PFPolicyInput.aspx,SetddlIEGenEquip,ddlIEGenEquip, Indirect Coverages,1.)Electrical Generating Equipment,"Class_Variable:        Private _ShowAltPower As Boolean = False
 SetupPagePresentationHSBRated():                _ShowAltPower = True
                 If _ShowAltPower = False Then
                     .Visible = False
                 Else
                     .Visible = True
                 End If
",rule-107,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlIEGenEquip, Indirect Coverages,1.)Electrical Generating Equipment,SetddlIEGenEquip(),rule-107,,,,,,
,PFPolicyInput.aspx,,ddlIEGenEquip, Indirect Coverages,1.)Electrical Generating Equipment,SetPnlInDirectCoverages(),rule-107,,,,,,
,PFPolicyInput.aspx,,ddlIEGenEquip, Indirect Coverages,1.)Electrical Generating Equipment,SetupPagePresentationHSBRated(),rule-107,,,,,,
,PFPolicyInput.aspx,,ddlIEGenEquip, Indirect Coverages,1.)Electrical Generating Equipment,SetupPropertyPolicyInputControl(),rule-107,,,,,,
rule-108,PFPolicyInput.aspx,SetddlIElecGenDed,ddlIElecGenDed, Indirect Coverages,1.)Electrical Generators,"Class_Variable:        Private _nGrgJulEffDate As Integer = 0
 SetupPagePresentation():                _nGrgJulEffDate = BusinessServices.Utility.GrgJul(.PolicyEffectiveDate)
                 If _nGrgJulEffDate > 111243 Then
                     oDataTable = _oLobBusPolHSBRated.GetListIndirectElectricGens2011()
                 Else
                     oDataTable = _oLobBusPolHSBRated.GetListIndirectElectricGens()
                 End If
",rule-108,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlIElecGenDed, Indirect Coverages,1.)Electrical Generators,SetddlIElecGenDed(),rule-108,,,,,,
,PFPolicyInput.aspx,,ddlIElecGenDed, Indirect Coverages,1.)Electrical Generators,SetPnlInDirectCoverages(),rule-108,,,,,,
,PFPolicyInput.aspx,,ddlIElecGenDed, Indirect Coverages,1.)Electrical Generators,SetupPagePresentationHSBRated(),rule-108,,,,,,
,PFPolicyInput.aspx,,ddlIElecGenDed, Indirect Coverages,1.)Electrical Generators,SetupPropertyPolicyInputControl(),rule-108,,,,,,
rule-109,PFPolicyInput.aspx,SetddlITurbDed,ddlITurbDed, Indirect Coverages,1.)Turbines,"Class_Variable:        Private _nGrgJulEffDate As Integer = 0
 SetupPagePresentation():                _nGrgJulEffDate = BusinessServices.Utility.GrgJul(.PolicyEffectiveDate)
                 If _nGrgJulEffDate > 111243 Then
                     oDataTable = _oLobBusPolHSBRated.GetListIndirectTurbines2011()
                 Else
                     oDataTable = _oLobBusPolHSBRated.GetListIndirectTurbines()
                 End If
",rule-109,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlITurbDed, Indirect Coverages,1.)Turbines,SetddlITurbDed(),rule-109,,,,,,
,PFPolicyInput.aspx,,ddlITurbDed, Indirect Coverages,1.)Turbines,SetPnlInDirectCoverages(),rule-109,,,,,,
,PFPolicyInput.aspx,,ddlITurbDed, Indirect Coverages,1.)Turbines,SetupPagePresentationHSBRated(),rule-109,,,,,,
,PFPolicyInput.aspx,,ddlITurbDed, Indirect Coverages,1.)Turbines,SetupPropertyPolicyInputControl(),rule-109,,,,,,
rule-110,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                 If _isElitePac2015Applicable Then
                     .Visible = True
                     pnlPolInfo.AddHelpItem(""Loss Free"", 874, ""ddlLossFreeYr"")
                 Else
",rule-110,,variable_type_rule,,,,
rule-110.1,PFPolicyInput.aspx,SetControlsPolicyInformation,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_sEffDate) Then
                 setddlLossFreeYr()
             Else
                 settxtLossFreeYears()
             End If
",rule-110,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SetControlsPolicyInformation(),rule-110,,,,,,
rule-111,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","Class_Variable:        Private _bDisableMod2 As Boolean = False
                     If _bDisableMod2 Then
                         .Visible = False
                     Else
                         .Visible = True
                         pnlPolInfo.AddHelpItem(""Loss Free"", 874, ""ddlLossFreeYr"")
                     End If
","rule-110,rule-111",,variable_type_rule,,,,
,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","                End If
",rule-110,,,,,,
rule-112,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","                If oCODataOld IsNot Nothing AndAlso oCODataOld.StatusRecords.Contains(""STATUSPF"") Then 
_boldPF = True
 
 End If
",rule-112,,variable_type_rule,,,,
rule-112.1,PFPolicyInput.aspx,SetControlsPolicyInformation,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_sEffDate) Then
                 setddlLossFreeYr()
             Else
                 settxtLossFreeYears()
             End If
",rule-112,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SetControlsPolicyInformation(),rule-112,,,,,,
rule-113,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","setddlLossFreeYr():            Dim lossFreeYears As String = _oLobData.Policy.Input(""PfMiscMod2"").Value.Trim
 setddlLossFreeYr():                Dim policyTransactionType As String = _oCOData.Attributes.Common.PolicyTransactionType
                 If (_boldPF AndAlso policyTransactionType.Equals(Common.getTransactionType(Transaction.TransactionType.ChangeEndorsement))) OrElse
                     (New HashSet(Of String)() From {{Common.getTransactionType(Transaction.TransactionType.RenewalIssue)},
                                                    {Common.getTransactionType(Transaction.TransactionType.RenewalQuote)}}.Contains(policyTransactionType) AndAlso
                     oldLines.Contains(Common.getLineOfBusiness(LOB.LineOfBusiness.Property))) AndAlso String.IsNullOrWhiteSpace(lossFreeYears).Equals(False) Then
                     .Enabled = False
                 End If
",rule-113,,variable_type_rule,,,,
rule-113.1,PFPolicyInput.aspx,SetControlsPolicyInformation,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_sEffDate) Then
                 setddlLossFreeYr()
             Else
                 settxtLossFreeYears()
             End If
",rule-113,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SetControlsPolicyInformation(),rule-113,,,,,,
rule-114,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","                If SIGI.Web.Context.Current.User.IsInRole(""Auth_ERRC"") AndAlso .Enabled.Equals(False) Then
                     .Enabled = isLFCCorrectionEligible(_oCOData)
                 End If
",rule-114,,variable_type_rule,,,,
rule-114.1,PFPolicyInput.aspx,SetControlsPolicyInformation,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_sEffDate) Then
                 setddlLossFreeYr()
             Else
                 settxtLossFreeYears()
             End If
",rule-114,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SetControlsPolicyInformation(),rule-114,,,,,,
rule-114.2,PFPolicyInput.aspx,setddlLossFreeYr,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOData.RenewalLOB.Exists Then 
oldLines = _oCOData.RenewalLOB.Buffer.Trim
 
 End If
",rule-114,,,,,,
rule-115,PFPolicyInput.aspx,SaveFormPolicyInformationData,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_oLobData.Attributes.Common.PolicyEffectiveDate) Then
                 _oLobData.Policy.Input(""PfMiscMod2"").Value = ddlLossFreeYr.SelectedValue.Trim()
             Else
                 _oLobData.Policy.Input(""PfMiscMod2"").Value = txtLossFreeYears.Text.Trim()
             End If
",rule-115,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SaveFormPolicyInformationData(),rule-115,,,,,,
,PFPolicyInput.aspx,,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SaveFormData(),rule-115,,,,,,
rule-115.1,PFPolicyInput.aspx,SaveData,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-115,,Function_Invocation_Rule,,,,
rule-115.2,PFPolicyInput.aspx,SaveData,ddlLossFreeYr, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-115,,Function_Invocation_Rule,,,,
rule-116,PFPolicyInput.aspx,SetddlOptMarginClause1,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,"SetddlOptMarginClause1():            Dim PfBlktTyp1 As String = String.Empty
 SetddlOptMarginClause1():            Dim PfBlktTyp1 As String = String.Empty
                 If PfBlktTyp1.Equals(""4"") OrElse PfBlktTyp1.Equals(""5"") Then
                     .Style.Add(""Display"", ""None"")
                 End If
",rule-116,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,SetddlOptMarginClause1(),rule-116,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-116,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-116,,,,,,
rule-117,PFPolicyInput.aspx,SetddlOptMarginClause1,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,"                If String.IsNullOrWhiteSpace(PFIsoMcBlkt1) = False Then
                     SetddlItem(PFIsoMcBlkt1, ddlOptMarginClause1)
                 End If
",rule-117,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,SetddlOptMarginClause1(),rule-117,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-117,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause1, BLANKET GROUP #1,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-117,,,,,,
rule-118,PFPolicyInput.aspx,SetddlOptMarginClause2,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,"SetddlOptMarginClause2():            Dim PfBlktTyp2 As String = String.Empty
 SetddlOptMarginClause2():            Dim PfBlktTyp2 As String = String.Empty
                 If PfBlktTyp2.Equals(""4"") OrElse PfBlktTyp2.Equals(""5"") Then
                     .Style.Add(""Display"", ""None"")
                 End If
",rule-118,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,SetddlOptMarginClause2(),rule-118,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-118,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-118,,,,,,
rule-119,PFPolicyInput.aspx,SetddlOptMarginClause2,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,"                If String.IsNullOrWhiteSpace(PFIsoMcBlkt2) = False Then
                     SetddlItem(PFIsoMcBlkt2, ddlOptMarginClause2)
                 End If
",rule-119,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,SetddlOptMarginClause2(),rule-119,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-119,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause2, BLANKET GROUP #2,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-119,,,,,,
rule-120,PFPolicyInput.aspx,SetddlOptMarginClause3,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,"SetddlOptMarginClause3():            Dim PfBlktTyp3 As String = String.Empty
 SetddlOptMarginClause3():            Dim PfBlktTyp3 As String = String.Empty
                 If PfBlktTyp3.Equals(""4"") OrElse PfBlktTyp3.Equals(""5"") Then
                     .Style.Add(""Display"", ""None"")
                 End If
",rule-120,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,SetddlOptMarginClause3(),rule-120,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-120,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-120,,,,,,
rule-121,PFPolicyInput.aspx,SetddlOptMarginClause3,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,"                If String.IsNullOrWhiteSpace(PFIsoMcBlkt3) = False Then
                     SetddlItem(PFIsoMcBlkt3, ddlOptMarginClause3)
                 End If
",rule-121,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,SetddlOptMarginClause3(),rule-121,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-121,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause3, BLANKET GROUP #3,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-121,,,,,,
rule-122,PFPolicyInput.aspx,SetddlOptMarginClause4,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,"SetddlOptMarginClause4():            Dim PfBlktTyp4 As String = String.Empty
 SetddlOptMarginClause4():            Dim PfBlktTyp4 As String = String.Empty
                 If PfBlktTyp4.Equals(""4"") OrElse PfBlktTyp4.Equals(""5"") Then
                     .Style.Add(""Display"", ""None"")
                 End If
",rule-122,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,SetddlOptMarginClause4(),rule-122,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-122,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-122,,,,,,
rule-123,PFPolicyInput.aspx,SetddlOptMarginClause4,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,"                If String.IsNullOrWhiteSpace(PFIsoMcBlkt4) = False Then
                     SetddlItem(PFIsoMcBlkt4, ddlOptMarginClause4)
                 End If
",rule-123,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,SetddlOptMarginClause4(),rule-123,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,SetupPagePresentationBlanlet(),rule-123,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClause4, BLANKET GROUP #4,1.)Optional Margin Clause,SetupPropertyPolicyInputControl(),rule-123,,,,,,
rule-124,PFPolicyInput.aspx,SetddlOptMarginClausePercent1,ddlOptMarginClausePercent1, BLANKET GROUP #1,1.)Optional Margin Clause Percent,"SetddlOptMarginClausePercent1():            Dim PFIsoMcBlkt1 As String = _oLobData.Policy.Input(""PFIsoMcBlkt1"").Value.Trim
 SetddlOptMarginClausePercent1():            Dim PfBlktTyp1 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp1"").Value.Trim
 SetddlOptMarginClausePercent1():            Dim PfBlktTyp1 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp1"").Value.Trim
                 If String.IsNullOrWhiteSpace(PFIsoMcPctBlkt1) OrElse PfBlktTyp1.Equals(""4"") OrElse PfBlktTyp1.Equals(""5"") OrElse PFIsoMcBlkt1.Equals(""2"") Then
                     .Style.Add(""Display"", ""None"")
                 Else
                     .Visible = True
                     SetddlItem(PFIsoMcPctBlkt1, ddlOptMarginClausePercent1)
                 End If
",rule-124,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent1, BLANKET GROUP #1,1.)Optional Margin Clause Percent,SetddlOptMarginClausePercent1(),rule-124,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent1, BLANKET GROUP #1,1.)Optional Margin Clause Percent,SetupPagePresentationBlanlet(),rule-124,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent1, BLANKET GROUP #1,1.)Optional Margin Clause Percent,SetupPropertyPolicyInputControl(),rule-124,,,,,,
rule-125,PFPolicyInput.aspx,SetddlOptMarginClausePercent2,ddlOptMarginClausePercent2, BLANKET GROUP #2,1.)Optional Margin Clause Percent,"SetddlOptMarginClausePercent2():            Dim PFIsoMcBlkt2 As String = _oLobData.Policy.Input(""PFIsoMcBlkt2"").Value.Trim
 SetddlOptMarginClausePercent2():            Dim PfBlktTyp2 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp2"").Value.Trim
 SetddlOptMarginClausePercent2():            Dim PfBlktTyp2 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp2"").Value.Trim
                 If String.IsNullOrWhiteSpace(PFIsoMcPctBlkt2) OrElse PfBlktTyp2.Equals(""4"") OrElse PfBlktTyp2.Equals(""5"") OrElse PFIsoMcBlkt2.Equals(""2"") Then
                     .Style.Add(""Display"", ""None"")
                 Else
                     .Visible = True
                     SetddlItem(PFIsoMcPctBlkt2, ddlOptMarginClausePercent2)
                 End If
",rule-125,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent2, BLANKET GROUP #2,1.)Optional Margin Clause Percent,SetddlOptMarginClausePercent2(),rule-125,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent2, BLANKET GROUP #2,1.)Optional Margin Clause Percent,SetupPagePresentationBlanlet(),rule-125,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent2, BLANKET GROUP #2,1.)Optional Margin Clause Percent,SetupPropertyPolicyInputControl(),rule-125,,,,,,
rule-126,PFPolicyInput.aspx,SetddlOptMarginClausePercent3,ddlOptMarginClausePercent3, BLANKET GROUP #3,1.)Optional Margin Clause Percent,"SetddlOptMarginClausePercent3():            Dim PFIsoMcBlkt3 As String = _oLobData.Policy.Input(""PFIsoMcBlkt3"").Value.Trim
 SetddlOptMarginClausePercent3():            Dim PfBlktTyp3 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp3"").Value.Trim
 SetddlOptMarginClausePercent3():            Dim PfBlktTyp3 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp3"").Value.Trim
                 If String.IsNullOrWhiteSpace(PFIsoMcPctBlkt3) OrElse PfBlktTyp3.Equals(""4"") OrElse PfBlktTyp3.Equals(""5"") OrElse PFIsoMcBlkt3.Equals(""2"") Then
                     .Style.Add(""Display"", ""None"")
                 Else
                     .Visible = True
                     SetddlItem(PFIsoMcPctBlkt3, ddlOptMarginClausePercent3)
                 End If
",rule-126,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent3, BLANKET GROUP #3,1.)Optional Margin Clause Percent,SetddlOptMarginClausePercent3(),rule-126,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent3, BLANKET GROUP #3,1.)Optional Margin Clause Percent,SetupPagePresentationBlanlet(),rule-126,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent3, BLANKET GROUP #3,1.)Optional Margin Clause Percent,SetupPropertyPolicyInputControl(),rule-126,,,,,,
rule-127,PFPolicyInput.aspx,SetddlOptMarginClausePercent4,ddlOptMarginClausePercent4, BLANKET GROUP #4,1.)Optional Margin Clause Percent,"SetddlOptMarginClausePercent4():            Dim PFIsoMcBlkt4 As String = _oLobData.Policy.Input(""PFIsoMcBlkt4"").Value.Trim
 SetddlOptMarginClausePercent4():            Dim PfBlktTyp4 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp4"").Value.Trim
 SetddlOptMarginClausePercent4():            Dim PfBlktTyp4 As String = _oLobData.Policy.Input.Fields(""PfBlktTyp4"").Value.Trim
                 If String.IsNullOrWhiteSpace(PFIsoMcPctBlkt4) OrElse PfBlktTyp4.Equals(""4"") OrElse PfBlktTyp4.Equals(""5"") OrElse PFIsoMcBlkt4.Equals(""2"") Then
                     .Style.Add(""Display"", ""None"")
                 Else
                     .Visible = True
                     SetddlItem(PFIsoMcPctBlkt4, ddlOptMarginClausePercent4)
                 End If
",rule-127,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent4, BLANKET GROUP #4,1.)Optional Margin Clause Percent,SetddlOptMarginClausePercent4(),rule-127,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent4, BLANKET GROUP #4,1.)Optional Margin Clause Percent,SetupPagePresentationBlanlet(),rule-127,,,,,,
,PFPolicyInput.aspx,,ddlOptMarginClausePercent4, BLANKET GROUP #4,1.)Optional Margin Clause Percent,SetupPropertyPolicyInputControl(),rule-127,,,,,,
rule-128,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"setddlPFElite():            ElseIf _isElitePacAllowed = False Then
             If _isElitePacAllowed Then
",rule-128,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,setddlPFElite(),rule-128,,,,,,
rule-128.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-128,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,SetControlsOptionalCoverageExtensions(),rule-128,,,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,SetupPropertyPolicyInputControl(),rule-128,,,,,,
rule-129,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                If ((_oLobData.Attributes.Common.PredominantState = ""DC"" And (InStr(""03*05*07*08*11*42*"", PgmCode) > 0)) Or (InStr(notsummit, PgmCode) = 0)) Then
","rule-128,rule-129",,direct_rule,,,,
rule-130,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                    Select Case PgmCode
","rule-128,rule-129,rule-130",,,,,,
rule-131,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""03"", ""06"", ""07"", ""11"", ""12"", ""14"", ""42""
                             FillElitePacDDL(""ELITEPAC17"", ""02"", False)
","rule-128,rule-129,rule-130,rule-131",,,,,,
rule-132,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""19""
                             FillElitePacDDL(""ELITEPAC17"", ""02"", False)
","rule-128,rule-129,rule-130,rule-132",,,,,,
rule-133,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""08""
                             FillElitePacDDL(""ELITEPAC19"", ""20"", False)
","rule-128,rule-129,rule-130,rule-133",,,,,,
rule-134,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""09""
                             FillElitePacDDL(""ELITEPAC20"", sRiskType, True)
","rule-128,rule-129,rule-130,rule-134",,,,,,
rule-135,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""13""
                             FillElitePacDDL(""ELITEPAC21"", ""22"", False)
","rule-128,rule-129,rule-130,rule-135",,,,,,
rule-136,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""21"", ""22""
                             FillElitePacDDL(""ELITEPAC22"", ""09"", False)
","rule-128,rule-129,rule-130,rule-136",,,,,,
rule-137,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""23"", ""25""
                             FillElitePacDDL(""ELITEPAC23"", ""06"", False)
","rule-128,rule-129,rule-130,rule-137",,,,,,
rule-138,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""05""
","rule-128,rule-129,rule-130,rule-138",,,,,,
rule-139,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                            If (_oLobData.Attributes.Common.PredominantState = ""VA"") Then
                                 FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                             Else
","rule-128,rule-129,rule-130,rule-138,rule-139",,direct_rule,,,,
rule-140,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"setddlPFElite():            Dim Poldate As Integer = GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate)
                                 If (Poldate >= 108001) Then
                                     FillElitePacDDL(""ELITEPAC14"", ""02"", False)
                                 Else
                                     FillElitePacDDL(""ELITEPAC14"", sRiskType, True)
                                 End If
","rule-128,rule-129,rule-130,rule-138,rule-139,rule-140",,direct_rule,,,,
,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                            End If
","rule-128,rule-129,rule-130,rule-138,rule-139",,,,,,
rule-141,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""10""
                             FillElitePacDDL(""ELITEPAC16"", sRiskType, True)
","rule-128,rule-129,rule-130,rule-141",,,,,,
rule-142,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                        Case ""35""
","rule-128,rule-129,rule-130,rule-142",,,,,,
rule-143,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                            If InStr(""MD*IA*IN*WI*MI*RI*OH*NJ*VA"", _oLobData.Attributes.Common.PredominantState) > 0 Then
                                 FillElitePacDDL(""ELITEPAC15"", sRiskType, True)
                             Else
                                 FillElitePacDDL(""ELITEPAC23"", """", False)
                             End If
","rule-128,rule-129,rule-130,rule-142,rule-143",,direct_rule,,,,
,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                    End Select
","rule-128,rule-129,rule-130,rule-142",,,,,,
,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                Else
","rule-128,rule-129",,,,,,
rule-144,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"setddlPFElite():            Dim PgmCode As String = _oLobData.Policy.Input.Fields(""PfPgmCode"").Value
 setddlPFElite():            Dim PgmCode As String = _oLobData.Policy.Input.Fields(""PfPgmCode"").Value
                     If PgmCode = ""17"" Or PgmCode = ""45"" Then
                         FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                     Else
                         FillElitePacDDL(""ELITEPAC23"", String.Empty, False)
                     End If
","rule-128,rule-129,rule-144",,direct_rule,,,,
,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                End If
","rule-128,rule-129",,,,,,
rule-145,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"setddlPFElite():            Dim Poldate As Integer = GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate)
                 If ((InStr(""32*38*35*37*39*34*31*33*10*40*36*25*26"", PgmCode) > 0) And (Poldate >= 105032)) Then
                     FillElitePacDDL(""PfEnhancement"", sRiskType, True)
                 End If
","rule-128,rule-145",,direct_rule,,,,
rule-145.1,PFPolicyInput.aspx,FillElitePacDDL,ddlPFElite,,1.)ElitePac / Enhancement Options,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
","rule-128,rule-145",,function_type_rule,,,,
rule-145.2,PFPolicyInput.aspx,SetddlItem,ddlPFElite,,1.)ElitePac / Enhancement Options,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
","rule-128,rule-145",,function_type_rule,,,,
rule-146,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"setddlPFElite():            Dim Poldate As Integer = GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate)
                 If (InStr(""21*22*23"", PgmCode) > 0 And (Poldate >= 106274)) _
                   And (_oLobData.Attributes.Common.PolicyInsuranceCompany = ""18"") Then
                     FillElitePacDDL(""PfEnhancement"", String.Empty, True)
                 End If
","rule-128,rule-146",,direct_rule,,,,
rule-146.1,PFPolicyInput.aspx,FillElitePacDDL,ddlPFElite,,1.)ElitePac / Enhancement Options,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
","rule-128,rule-146",,function_type_rule,,,,
rule-146.2,PFPolicyInput.aspx,SetddlItem,ddlPFElite,,1.)ElitePac / Enhancement Options,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
","rule-128,rule-146",,function_type_rule,,,,
rule-147,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                If ((_oLobData.Attributes.Common.PolicyTransactionType = ""NBQU"") Or (_oLobData.Attributes.Common.PolicyTransactionType = ""NBIS"")) Then
","rule-128,rule-147",,direct_rule,,,,
rule-148,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                    If (_oLobData.Attributes.Common.OneNDoneType = ""PG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""17"", True)
                     End If
","rule-128,rule-147,rule-148",,direct_rule,,,,
rule-149,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                    If (_oLobData.Attributes.Common.OneNDoneType = ""MG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""23"", True)
                     End If
","rule-128,rule-147,rule-149",,direct_rule,,,,
,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                End If
","rule-128,rule-147",,,,,,
rule-150,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                If InStr(1, ""*41*"", _oLobData.Attributes.Common.PolicyProgramType) > 0 Then
                     FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                 End If
","rule-128,rule-150",,direct_rule,,,,
rule-151,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"            ElseIf _isElitePacAllowed = False Then
                 ddlPFElite.Items.Clear()
                 ddlPFElite.Items.Add(""Not Applicable"")
                 ddlPFElite.Items(0).Selected = True
             End If
",rule-151,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,setddlPFElite(),rule-151,,,,,,
rule-151.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-151,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,SetControlsOptionalCoverageExtensions(),rule-151,,,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,SetupPropertyPolicyInputControl(),rule-151,,,,,,
rule-152,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"            If _oLobShared.PFVAExpansionApplyElitePAC(_oCOData, _oLobData) = True Then
                 ddlPFElite.Items(0).Selected = True
",rule-152,,direct_rule,,,,PFShared-1601
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,setddlPFElite(),rule-152,,,,,,
rule-152.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-152,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,SetControlsOptionalCoverageExtensions(),rule-152,,,,,,
,PFPolicyInput.aspx,,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,SetupPropertyPolicyInputControl(),rule-152,,,,,,
rule-153,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"                If ddlPFElite.Enabled = True Then
                     ddlPFElite.Enabled = False
                 End If
","rule-152,rule-153",,direct_rule,,,,
,PFPolicyInput.aspx,setddlPFElite,ddlPFElite,Optional Coverages,1.)ElitePac / Enhancement Options,"            End If
",rule-152,,,,,,
rule-154,PFPolicyInput.aspx,setddlPFPolCol,ddlPFPolCol, PROPERTY POLICY INFORMATION,1.)Predominant Cause of Loss,"SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                 If _isElitePac2015Applicable Then
                     .OnClientChange = ""OnCauseOfLossChange();""
                 End If
",rule-154,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPFPolCol, PROPERTY POLICY INFORMATION,1.)Predominant Cause of Loss,setddlPFPolCol(),rule-154,,,,,,
,PFPolicyInput.aspx,,ddlPFPolCol, PROPERTY POLICY INFORMATION,1.)Predominant Cause of Loss,SetControlsPolicyInformation(),rule-154,,,,,,
rule-155,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd1,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,"                If InStr(1, ""*4*5*"", _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim) > 1 Then
                     .DataTextField = ""Coins""
                     .DataValueField = ""Coins""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS2).DataSource
                 Else
                     .DataTextField = ""Code""
                     .DataValueField = ""Code""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS).DataSource
                 End If
",rule-155,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,SetddlPfBlktCnsOvrd1(),rule-155,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,SetupPagePresentationBlanlet(),rule-155,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,SetupPropertyPolicyInputControl(),rule-155,,,,,,
rule-156,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd1,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,"SetddlPfBlktCnsOvrd1():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktCnsOvrd1"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-156,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,SetddlPfBlktCnsOvrd1(),rule-156,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,SetupPagePresentationBlanlet(),rule-156,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd1, BLANKET GROUP #1,,SetupPropertyPolicyInputControl(),rule-156,,,,,,
rule-157,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd2,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,"                If InStr(1, ""*4*5*"", _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim) > 1 Then
                     .DataTextField = ""Coins""
                     .DataValueField = ""Coins""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS2).DataSource
                 Else
                     .DataTextField = ""Code""
                     .DataValueField = ""Code""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS).DataSource
                 End If
",rule-157,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,SetddlPfBlktCnsOvrd2(),rule-157,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,SetupPagePresentationBlanlet(),rule-157,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,SetupPropertyPolicyInputControl(),rule-157,,,,,,
rule-158,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd2,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,"SetddlPfBlktCnsOvrd2():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktCnsOvrd2"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-158,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,SetddlPfBlktCnsOvrd2(),rule-158,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,SetupPagePresentationBlanlet(),rule-158,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd2, BLANKET GROUP #2,,SetupPropertyPolicyInputControl(),rule-158,,,,,,
rule-159,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd3,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,"                If InStr(1, ""*4*5*"", _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim) > 1 Then
                     .DataTextField = ""Coins""
                     .DataValueField = ""Coins""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS2).DataSource
                 Else
                     .DataTextField = ""Code""
                     .DataValueField = ""Code""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS).DataSource
                 End If
",rule-159,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,SetddlPfBlktCnsOvrd3(),rule-159,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,SetupPagePresentationBlanlet(),rule-159,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,SetupPropertyPolicyInputControl(),rule-159,,,,,,
rule-160,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd3,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,"SetddlPfBlktCnsOvrd3():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktCnsOvrd3"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-160,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,SetddlPfBlktCnsOvrd3(),rule-160,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,SetupPagePresentationBlanlet(),rule-160,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd3, BLANKET GROUP #3,1.)Coinsurance Override,SetupPropertyPolicyInputControl(),rule-160,,,,,,
rule-161,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd4,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,"                If InStr(1, ""*4*5*"", _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim) > 1 Then
                     .DataTextField = ""Coins""
                     .DataValueField = ""Coins""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS2).DataSource
                 Else
                     .DataTextField = ""Code""
                     .DataValueField = ""Code""
                     .DataSource = oLookup.Item(QUERY_NAME_BLKT_COINS).DataSource
                 End If
",rule-161,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,SetddlPfBlktCnsOvrd4(),rule-161,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,SetupPagePresentationBlanlet(),rule-161,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,SetupPropertyPolicyInputControl(),rule-161,,,,,,
rule-162,PFPolicyInput.aspx,SetddlPfBlktCnsOvrd4,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,"SetddlPfBlktCnsOvrd4():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktCnsOvrd4"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-162,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,SetddlPfBlktCnsOvrd4(),rule-162,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,SetupPagePresentationBlanlet(),rule-162,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktCnsOvrd4, BLANKET GROUP #4,1.)Coinsurance Override,SetupPropertyPolicyInputControl(),rule-162,,,,,,
rule-163,PFPolicyInput.aspx,SetPShowNewEq1,ddlPfBlktSubLimEq1, BLANKET GROUP #1,1.)Sub-Limit Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket1.Visible = True
                 chkPfBlktFullEq1.Visible = True
                 ddlPfBlktSubLimEq1.Visible = True
             Else
                 lEQBlanket1.Visible = False
                 chkPfBlktFullEq1.Visible = False
                 ddlPfBlktSubLimEq1.Visible = False
             End If
",rule-163,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq1, BLANKET GROUP #1,1.)Sub-Limit Coverage,SetPShowNewEq1(),rule-163,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq1, BLANKET GROUP #1,1.)Sub-Limit Coverage,SetupPagePresentationBlanlet(),rule-163,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq1, BLANKET GROUP #1,1.)Sub-Limit Coverage,SetupPropertyPolicyInputControl(),rule-163,,,,,,
rule-164,PFPolicyInput.aspx,SetPShowNewEq2,ddlPfBlktSubLimEq2, BLANKET GROUP #2,1.)Sub-Limit Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket2.Visible = True
                 chkPfBlktFullEq2.Visible = True
                 ddlPfBlktSubLimEq2.Visible = True
             Else
                 lEQBlanket2.Visible = False
                 chkPfBlktFullEq2.Visible = False
                 ddlPfBlktSubLimEq2.Visible = False
             End If
",rule-164,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq2, BLANKET GROUP #2,1.)Sub-Limit Coverage,SetPShowNewEq2(),rule-164,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq2, BLANKET GROUP #2,1.)Sub-Limit Coverage,SetupPagePresentationBlanlet(),rule-164,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq2, BLANKET GROUP #2,1.)Sub-Limit Coverage,SetupPropertyPolicyInputControl(),rule-164,,,,,,
rule-165,PFPolicyInput.aspx,SetPShowNewEq3,ddlPfBlktSubLimEq3, BLANKET GROUP #3,1.)Sub-Limit Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket3.Visible = True
                 chkPfBlktFullEq3.Visible = True
                 ddlPfBlktSubLimEq3.Visible = True
             Else
                 lEQBlanket3.Visible = False
                 chkPfBlktFullEq3.Visible = False
                 ddlPfBlktSubLimEq3.Visible = False
             End If
",rule-165,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq3, BLANKET GROUP #3,1.)Sub-Limit Coverage,SetPShowNewEq3(),rule-165,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq3, BLANKET GROUP #3,1.)Sub-Limit Coverage,SetupPagePresentationBlanlet(),rule-165,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq3, BLANKET GROUP #3,1.)Sub-Limit Coverage,SetupPropertyPolicyInputControl(),rule-165,,,,,,
rule-166,PFPolicyInput.aspx,SetPShowNewEq4,ddlPfBlktSubLimEq4, BLANKET GROUP #4,1.)Sub-Limit Coverage,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket4.Visible = True
                 chkPfBlktFullEq4.Visible = True
                 ddlPfBlktSubLimEq4.Visible = True
             Else
                 lEQBlanket4.Visible = False
                 chkPfBlktFullEq4.Visible = False
                 ddlPfBlktSubLimEq4.Visible = False
             End If
",rule-166,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq4, BLANKET GROUP #4,1.)Sub-Limit Coverage,SetPShowNewEq4(),rule-166,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq4, BLANKET GROUP #4,1.)Sub-Limit Coverage,SetupPagePresentationBlanlet(),rule-166,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktSubLimEq4, BLANKET GROUP #4,1.)Sub-Limit Coverage,SetupPropertyPolicyInputControl(),rule-166,,,,,,
rule-167,PFPolicyInput.aspx,SetddlPfBlktTyp1,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,"                If _oLobData.Attributes.Common.UserType.Equals(""AGENT"") Then
                     pnlPolBlanket1.AddHelpItem(""Blanket Type 1"", ""Assign same Blkt Ind to coverages that are grouped together. When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""ddlPfBlktTyp1"")
                 Else
                     pnlPolBlanket1.AddHelpItem(""Blanket Type 1"", ""Assign same Blkt Ind to coverages that are<br> grouped together."", ""ddlPfBlktTyp1"")
                 End If
",rule-167,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetddlPfBlktTyp1(),rule-167,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-167,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-167,,,,,,
rule-168,PFPolicyInput.aspx,SetddlPfBlktTyp1,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,"                If _oLobData.Policy.Input(""PFIsoLossCostApply"").Value.Equals(""Y"") Then
                     .OnClientChange = ""ddlPfBlktType_onChangeOnloadNew($SIGIfind('ddlPfBlktTyp1'),'SPLimit1','SPTE1',$SIGIfind('txtLimVal1'),"" &
                                                             ""$SIGIfind('txtLimArea1'),$SIGIfind('txtLim1001'),$SIGIfind('txtLim901'),$SIGIfind('txtLimInput1'),"" &
                                                             ""$SIGIfind('ddlPfBlktCnsOvrd1'),$SIGIfind('chkLim1001'),$SIGIfind('chkLim901'),$SIGIfind('chkLimInput1'),"" &
                                                             ""$SIGIfind('chkPfBlktAgrdVal1'),$SIGIfind('ddlOptMarginClause1'),$SIGIfind('ddlOptMarginClausePercent1'),'HelpIcon1',"" &
                                                             ""$SIGIfind('chkPfBlktFullEq1'),$SIGIfind('ddlPfBlktSubLimEq1')),SetCoins($SIGIfind('ddlPfBlktTyp1'),$SIGIfind('ddlPfBlktCnsOvrd1'),1)""
                 Else
                     .OnClientChange = ""ddlPfBlktType_onChangeOnload($SIGIfind('ddlPfBlktTyp1'),'SPLimit1','SPTE1',$SIGIfind('txtLimVal1'),"" &
                                                                 ""$SIGIfind('txtLimArea1'),$SIGIfind('txtLim1001'),$SIGIfind('txtLim901'),$SIGIfind('txtLimInput1'),"" &
                                                                 ""$SIGIfind('ddlPfBlktCnsOvrd1'),$SIGIfind('chkLim1001'),$SIGIfind('chkLim901'),$SIGIfind('chkLimInput1'),"" &
                                                                 ""$SIGIfind('chkPfBlktAgrdVal1'),"" &
                                                                 ""SetCoins($SIGIfind('ddlPfBlktTyp1'),$SIGIfind('ddlPfBlktCnsOvrd1'),1))""
                 End If
",rule-168,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetddlPfBlktTyp1(),rule-168,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-168,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-168,,,,,,
rule-169,PFPolicyInput.aspx,SetddlPfBlktTyp1,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,"SetddlPfBlktTyp1():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-169,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetddlPfBlktTyp1(),rule-169,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-169,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp1, BLANKET GROUP #1,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-169,,,,,,
rule-170,PFPolicyInput.aspx,SetddlPfBlktTyp2,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,"                If _oLobData.Attributes.Common.UserType.Equals(""AGENT"") Then
                     pnlPolBlanket2.AddHelpItem(""Blanket Type 2"", ""Assign same Blkt Ind to coverages that are grouped together. When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""ddlPfBlktTyp2"")
                 Else
                     pnlPolBlanket2.AddHelpItem(""Blanket Type 2"", ""Assign same Blkt Ind to coverages that are grouped together."", ""ddlPfBlktTyp2"")
                 End If
",rule-170,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetddlPfBlktTyp2(),rule-170,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-170,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-170,,,,,,
rule-171,PFPolicyInput.aspx,SetddlPfBlktTyp2,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,"                If _oLobData.Policy.Input(""PFIsoLossCostApply"").Value.Equals(""Y"") Then
                     .OnClientChange = ""ddlPfBlktType_onChangeOnloadNew($SIGIfind('ddlPfBlktTyp2'),'SPLimit2','SPTE2',$SIGIfind('txtLimVal2'),$SIGIfind('txtLimArea2'),"" &
                                     ""$SIGIfind('txtLim1002'),$SIGIfind('txtLim902'),$SIGIfind('txtLimInput2'),$SIGIfind('ddlPfBlktCnsOvrd2'),$SIGIfind('chkLim1002'),$SIGIfind('chkLim902'),"" &
                                     ""$SIGIfind('chkLimInput2'),$SIGIfind('chkPfBlktAgrdVal2'),$SIGIfind('ddlOptMarginClause2'),$SIGIfind('ddlOptMarginClausePercent2'),'HelpIcon2',"" &
                                     ""$SIGIfind('chkPfBlktFullEq2'),$SIGIfind('ddlPfBlktSubLimEq2')),SetCoins($SIGIfind('ddlPfBlktTyp2'),$SIGIfind('ddlPfBlktCnsOvrd2'),2)""
                 Else
                     .OnClientChange = ""ddlPfBlktType_onChangeOnload($SIGIfind('ddlPfBlktTyp2'),'SPLimit2','SPTE2',$SIGIfind('txtLimVal2'),$SIGIfind('txtLimArea2'),"" &
                                         ""$SIGIfind('txtLim1002'),$SIGIfind('txtLim902'),$SIGIfind('txtLimInput2'),$SIGIfind('ddlPfBlktCnsOvrd2'),$SIGIfind('chkLim1002'),$SIGIfind('chkLim902'),"" &
                                         ""$SIGIfind('chkLimInput2'),$SIGIfind('chkPfBlktAgrdVal2'),SetCoins($SIGIfind('ddlPfBlktTyp2'),"" &
                                         ""$SIGIfind('ddlPfBlktCnsOvrd2'),2))""
                 End If
",rule-171,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetddlPfBlktTyp2(),rule-171,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-171,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-171,,,,,,
rule-172,PFPolicyInput.aspx,SetddlPfBlktTyp2,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,"SetddlPfBlktTyp2():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-172,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetddlPfBlktTyp2(),rule-172,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-172,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp2, BLANKET GROUP #2,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-172,,,,,,
rule-173,PFPolicyInput.aspx,SetddlPfBlktTyp3,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,"                If _oLobData.Attributes.Common.UserType.Equals(""AGENT"") Then
                     pnlPolBlanket3.AddHelpItem(""Blanket Type 3"", ""Assign same Blkt Ind to coverages that are grouped together. When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""ddlPfBlktTyp3"")
                 Else
                     pnlPolBlanket3.AddHelpItem(""Blanket Type 3"", ""Assign same Blkt Ind to coverages that are grouped together."", ""ddlPfBlktTyp3"")
                 End If
",rule-173,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetddlPfBlktTyp3(),rule-173,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-173,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-173,,,,,,
rule-174,PFPolicyInput.aspx,SetddlPfBlktTyp3,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,"                If _oLobData.Policy.Input(""PFIsoLossCostApply"").Value.Equals(""Y"") Then
                     .OnClientChange = ""ddlPfBlktType_onChangeOnloadNew($SIGIfind('ddlPfBlktTyp3'),'SPLimit3','SPTE3',$SIGIfind('txtLimVal3'),$SIGIfind('txtLimArea3'),"" &
                                     ""$SIGIfind('txtLim1003'),$SIGIfind('txtLim903'),$SIGIfind('txtLimInput3'),$SIGIfind('ddlPfBlktCnsOvrd3'),"" &
                                     ""$SIGIfind('chkLim1003'),$SIGIfind('chkLim903'),$SIGIfind('chkLimInput3'),$SIGIfind('chkPfBlktAgrdVal3'),"" &
                                     ""$SIGIfind('ddlOptMarginClause3'),$SIGIfind('ddlOptMarginClausePercent3'),'HelpIcon3',"" &
                                     ""$SIGIfind('chkPfBlktFullEq3'),$SIGIfind('ddlPfBlktSubLimEq3')),SetCoins($SIGIfind('ddlPfBlktTyp3'),$SIGIfind('ddlPfBlktCnsOvrd3'),3)""
                 Else
                     .OnClientChange = ""ddlPfBlktType_onChangeOnload($SIGIfind('ddlPfBlktTyp3'),'SPLimit3','SPTE3',$SIGIfind('txtLimVal3'),$SIGIfind('txtLimArea3'),"" &
                                         ""$SIGIfind('txtLim1003'),$SIGIfind('txtLim903'),$SIGIfind('txtLimInput3'),$SIGIfind('ddlPfBlktCnsOvrd3'),"" &
                                         ""$SIGIfind('chkLim1003'),$SIGIfind('chkLim903'),$SIGIfind('chkLimInput3'),$SIGIfind('chkPfBlktAgrdVal3'),"" &
                                         ""SetCoins($SIGIfind('ddlPfBlktTyp3'),$SIGIfind('ddlPfBlktCnsOvrd3'),3))""
                 End If
",rule-174,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetddlPfBlktTyp3(),rule-174,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-174,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-174,,,,,,
rule-175,PFPolicyInput.aspx,SetddlPfBlktTyp3,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,"SetddlPfBlktTyp3():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-175,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetddlPfBlktTyp3(),rule-175,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-175,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp3, BLANKET GROUP #3,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-175,,,,,,
rule-176,PFPolicyInput.aspx,SetddlPfBlktTyp4,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,"                If _oLobData.Attributes.Common.UserType.Equals(""AGENT"") Then
                     pnlPolBlanket4.AddHelpItem(""Blanket Type 4"", ""Assign same Blkt Ind to coverages that are grouped together. When Blanket and/or Agreed Value coverage is written, a Statement of Values reflecting 100% Insurance to Value for both Building and BPP must be completed and signed by the insured and maintained in your agency permanent file."", ""ddlPfBlktTyp4"")
                 Else
                     pnlPolBlanket4.AddHelpItem(""Blanket Type 4"", ""Assign same Blkt Ind to coverages that are grouped together."", ""ddlPfBlktTyp4"")
                 End If
",rule-176,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetddlPfBlktTyp4(),rule-176,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-176,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-176,,,,,,
rule-177,PFPolicyInput.aspx,SetddlPfBlktTyp4,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,"                If _oLobData.Policy.Input(""PFIsoLossCostApply"").Value.Equals(""Y"") Then
                     .OnClientChange = ""ddlPfBlktType_onChangeOnloadNew($SIGIfind('ddlPfBlktTyp4'),'SPLimit4','SPTE4',$SIGIfind('txtLimVal4'),$SIGIfind('txtLimArea4'),"" &
                                  ""$SIGIfind('txtLim1004'),$SIGIfind('txtLim904'),$SIGIfind('txtLimInput4'),$SIGIfind('ddlPfBlktCnsOvrd4'),$SIGIfind('chkLim1004'),"" &
                                  ""$SIGIfind('chkLim904'),$SIGIfind('chkLimInput4'),$SIGIfind('chkPfBlktAgrdVal4'),$SIGIfind('ddlOptMarginClause4'),"" &
                                  ""$SIGIfind('ddlOptMarginClausePercent4'),'HelpIcon4',"" &
                                  ""$SIGIfind('chkPfBlktFullEq4'),$SIGIfind('ddlPfBlktSubLimEq4')),SetCoins($SIGIfind('ddlPfBlktTyp4'),$SIGIfind('ddlPfBlktCnsOvrd4'),4))""
                 Else
                     .OnClientChange = ""ddlPfBlktType_onChangeOnload($SIGIfind('ddlPfBlktTyp4'),'SPLimit4','SPTE4',$SIGIfind('txtLimVal4'),$SIGIfind('txtLimArea4'),"" &
                                      ""$SIGIfind('txtLim1004'),$SIGIfind('txtLim904'),$SIGIfind('txtLimInput4'),$SIGIfind('ddlPfBlktCnsOvrd4'),$SIGIfind('chkLim1004'),"" &
                                      ""$SIGIfind('chkLim904'),$SIGIfind('chkLimInput4'),$SIGIfind('chkPfBlktAgrdVal4'),SetCoins($SIGIfind('ddlPfBlktTyp4'),$SIGIfind('ddlPfBlktCnsOvrd4'),4))""
                 End If
",rule-177,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetddlPfBlktTyp4(),rule-177,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-177,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-177,,,,,,
rule-178,PFPolicyInput.aspx,SetddlPfBlktTyp4,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,"SetddlPfBlktTyp4():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-178,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetddlPfBlktTyp4(),rule-178,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetupPagePresentationBlanlet(),rule-178,,,,,,
,PFPolicyInput.aspx,,ddlPfBlktTyp4, BLANKET GROUP #4,1.)Blanket Type,SetupPropertyPolicyInputControl(),rule-178,,,,,,
rule-179,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipDrctInd,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,"                If _oLobShared.CLASRatedByAltPower(_oLobData) Then
",rule-179,,function_type_rule,,,,PFShared-1413
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,SetddlPfClsRtElctGenEquipDrctInd(),rule-179,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,SetupPagePresentationClasRated(),rule-179,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,SetupPropertyPolicyInputControl(),rule-179,,,,,,
rule-180,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipDrctInd,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,"                    If _oLobData.Policy.Input(""PfClsRtElctGenEquipDrctInd"").Value.Trim = """" Then
                         _oLobData.Policy.Input(""PfClsRtElctGenEquipDrctInd"").Value = ""3""
                     End If
","rule-179,rule-180",,direct_rule,,,,
,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipDrctInd,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,"                Else
                     _oLobData.Policy.Input(""PfClsRtElctGenEquipDrctInd"").Value = "" ""
                 End If
",rule-179,,,,,,
rule-181,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipDrctInd,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,"SetddlPfClsRtElctGenEquipDrctInd():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfClsRtElctGenEquipDrctInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-181,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,SetddlPfClsRtElctGenEquipDrctInd(),rule-181,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,SetupPagePresentationClasRated(),rule-181,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipDrctInd, CLAS Rated Details,1.)Direct Coverages,SetupPropertyPolicyInputControl(),rule-181,,,,,,
rule-182,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipIndrctInd,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,"Class_Variable:        Private _bClasEBRating As Boolean = False
 SetupPagePresentation():            _bClasEBRating = _oLobShared.CLASRatedByAltPower(_oLobData)
                 If _bClasEBRating Then",rule-182,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetddlPfClsRtElctGenEquipIndrctInd(),rule-182,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetupPagePresentationClasRated(),rule-182,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetupPropertyPolicyInputControl(),rule-182,,,,,,
rule-183,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipIndrctInd,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,"                    If _oLobData.Policy.Input(""PfClsRtElctGenEquipIndrctInd"").Value.Trim = """" Then
                         _oLobData.Policy.Input(""PfClsRtElctGenEquipIndrctInd"").Value = ""4""
                     End If
","rule-182,rule-183",,direct_rule,,,,
,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipIndrctInd,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,"                Else
                     _oLobData.Policy.Input(""PfClsRtElctGenEquipIndrctInd"").Value = "" ""
                 End If
",rule-182,,,,,,
rule-184,PFPolicyInput.aspx,SetddlPfClsRtElctGenEquipIndrctInd,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,"SetddlPfClsRtElctGenEquipIndrctInd():                        oItem.Selected = True
                     If oItem.Value.Trim = _oLobData.Policy.Input(""PfClsRtElctGenEquipIndrctInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-184,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetddlPfClsRtElctGenEquipIndrctInd(),rule-184,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetupPagePresentationClasRated(),rule-184,,,,,,
,PFPolicyInput.aspx,,ddlPfClsRtElctGenEquipIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetupPropertyPolicyInputControl(),rule-184,,,,,,
rule-185,PFPolicyInput.aspx,SetddlPfPPClsRtCmbnInd,ddlPfPPClsRtCmbnInd, CLAS Rated Details,1.)Combined All Coverages,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtCmbnInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-185,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtCmbnInd, CLAS Rated Details,1.)Combined All Coverages,SetddlPfPPClsRtCmbnInd(),rule-185,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtCmbnInd, CLAS Rated Details,1.)Combined All Coverages,SetupPagePresentationClasRated(),rule-185,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtCmbnInd, CLAS Rated Details,1.)Combined All Coverages,SetupPropertyPolicyInputControl(),rule-185,,,,,,
rule-185.1,PFPolicyInput.aspx,SetddlPfPPClsRtCmbnInd,ddlPfPPClsRtCmbnInd, CLAS Rated Details,1.)Combined All Coverages,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtCmbnInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-185,,,,,,
rule-186,PFPolicyInput.aspx,SetddlPfPPClsRtDedDocInd,ddlPfPPClsRtDedDocInd, CLAS Rated Details,1.)Override Reason,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtDedDocInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-186,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtDedDocInd, CLAS Rated Details,1.)Override Reason,SetddlPfPPClsRtDedDocInd(),rule-186,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtDedDocInd, CLAS Rated Details,1.)Override Reason,SetupPagePresentationClasRated(),rule-186,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtDedDocInd, CLAS Rated Details,1.)Override Reason,SetupPropertyPolicyInputControl(),rule-186,,,,,,
rule-186.1,PFPolicyInput.aspx,SetddlPfPPClsRtDedDocInd,ddlPfPPClsRtDedDocInd, CLAS Rated Details,1.)Override Reason,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtDedDocInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-186,,,,,,
rule-187,PFPolicyInput.aspx,SetddlPfPPClsRtDrctInd,ddlPfPPClsRtDrctInd, CLAS Rated Details,1.)Direct Coverages,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtDrctInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-187,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtDrctInd, CLAS Rated Details,1.)Direct Coverages,SetddlPfPPClsRtDrctInd(),rule-187,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtDrctInd, CLAS Rated Details,1.)Direct Coverages,SetupPagePresentationClasRated(),rule-187,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtDrctInd, CLAS Rated Details,1.)Direct Coverages,SetupPropertyPolicyInputControl(),rule-187,,,,,,
rule-187.1,PFPolicyInput.aspx,SetddlPfPPClsRtDrctInd,ddlPfPPClsRtDrctInd, CLAS Rated Details,1.)Direct Coverages,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtDrctInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-187,,,,,,
rule-188,PFPolicyInput.aspx,SetddlPfPPClsRtIndrctInd,ddlPfPPClsRtIndrctInd, CLAS Rated Details,1.)Indirect Coverages,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtIndrctInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-188,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetddlPfPPClsRtIndrctInd(),rule-188,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetupPagePresentationClasRated(),rule-188,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtIndrctInd, CLAS Rated Details,1.)Indirect Coverages,SetupPropertyPolicyInputControl(),rule-188,,,,,,
rule-188.1,PFPolicyInput.aspx,SetddlPfPPClsRtIndrctInd,ddlPfPPClsRtIndrctInd, CLAS Rated Details,1.)Indirect Coverages,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtIndrctInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-188,,,,,,
rule-189,PFPolicyInput.aspx,SetddlPfPPClsRtSplgInd,ddlPfPPClsRtSplgInd, CLAS Rated Details,1.)Spoilage,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtSplgInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-189,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtSplgInd, CLAS Rated Details,1.)Spoilage,SetddlPfPPClsRtSplgInd(),rule-189,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtSplgInd, CLAS Rated Details,1.)Spoilage,SetupPagePresentationClasRated(),rule-189,,,,,,
,PFPolicyInput.aspx,,ddlPfPPClsRtSplgInd, CLAS Rated Details,1.)Spoilage,SetupPropertyPolicyInputControl(),rule-189,,,,,,
rule-189.1,PFPolicyInput.aspx,SetddlPfPPClsRtSplgInd,ddlPfPPClsRtSplgInd, CLAS Rated Details,1.)Spoilage,"                    If oItem.Value.Trim = _oLobData.Policy.Input(""PfPPClsRtSplgInd"").Value.Trim Then
                         oItem.Selected = True
                         Exit For
                     End If
",rule-189,,,,,,
rule-190,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"            If GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate) >= 106182 Then
                 _oLobData.Policy.Input(""PfPPOptOut"").Value = ddlPfPPOptOut.SelectedValue
",rule-190,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,SaveFormSystemsPowerPacOptionsData(),rule-190,,,,,,
,PFPolicyInput.aspx,,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,SaveFormData(),rule-190,,,,,,
rule-190.1,PFPolicyInput.aspx,SaveData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-190,,Function_Invocation_Rule,,,,
rule-190.2,PFPolicyInput.aspx,SaveData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-190,,Function_Invocation_Rule,,,,
rule-191,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                If _oLobShared.HSBRatedByAltPower(_oLobData) = True Then
                     chkHSBOptOut.Checked = False
                     chkCLASRated.Checked = False
                     chkHSBRated.Checked = True
                 End If
","rule-190,rule-191",,direct_rule,,,,PFShared-1403
rule-192,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                If chkCLASRated.Checked = True Then
","rule-190,rule-192",,direct_rule,,,,
rule-193,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value <> ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-190,rule-192,rule-193",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y""
                 Else
","rule-190,rule-192",,,,,,
rule-194,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                    If _oLobData.Policy.Input(""PfPPClasRated"").Value = ""Y"" Then
                         _bAutoWalkThruFieldChanged = True
                     End If
","rule-190,rule-192,rule-194",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                    _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                 End If
","rule-190,rule-192",,,,,,
rule-195,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                If chkHSBRated.Checked = True Then
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = ""F""
                 Else
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-190,rule-195",,direct_rule,,,,
rule-196,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                If chkHSBOptOut.Checked = True Then
","rule-190,rule-196",,direct_rule,,,,
rule-197,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                    If Val(_oLobData.Policy.Input(""PfPPOptOut"").Value) = 0 Then
                         _oLobData.Policy.Input(""PfPPOptOut"").Value = ""9""
                     End If
","rule-190,rule-196,rule-197",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                    With _oLobData.Policy.Input
                         .Fields(""PfPPHSBRated"").Value = """"
                         .Fields(""PfPPHSBPrem"").Value = """"
                         .Fields(""PfPPHSBEqpBdLmt"").Value = """"
                         .Fields(""PfPPHSBBincLmt"").Value = """"
                         .Fields(""PfPPHSBExxpLmt"").Value = """"
                         .Fields(""PfPPHSBExpdExpLmt"").Value = """"
                         .Fields(""PfPPHSBHzSbstLmt"").Value = """"
                         .Fields(""PfPPHSBSplgLmt"").Value = """"
                         .Fields(""PfPPHSBSrvIntLmt"").Value = """"
                         .Fields(""PfPPHSBOthCndInd"").Value = """"
                         .Fields(""PfPolPPOverride"").Value = """"
                         .Fields(""PfPolPPCmbDedCd"").Value = """"
                         .Fields(""PfPolPPDDedCd"").Value = """"
                         .Fields(""PfPolPPDACDedCd"").Value = """"
                         .Fields(""PfPolPPDBlrDedCd"").Value = """"
                         .Fields(""PfPolPPDDigDedCd"").Value = """"
                         .Fields(""PfPolPPDElcDedCd"").Value = """"
                         .Fields(""PfPolPPDPrsDedCd"").Value = """"
                         .Fields(""PfPolPPDRfgDedCd"").Value = """"
                         .Fields(""PfPolPPDTrnDedCd"").Value = """"
                         .Fields(""PfPolPPDTrbDedCd"").Value = """"
                         .Fields(""PfPolPPDSpeDedCd"").Value = """"
                         .Fields(""PfPolPPIDedCd"").Value = """"
                         .Fields(""PfPolPPIACDedCd"").Value = """"
                         .Fields(""PfPolPPIBlrDedCd"").Value = """"
                         .Fields(""PfPolPPIDigDedCd"").Value = """"
                         .Fields(""PfPolPPIElcDedCd"").Value = """"
                         .Fields(""PfPolPPIPrsDedCd"").Value = """"
                         .Fields(""PfPolPPIRfgDedCd"").Value = """"
                         .Fields(""PfPolPPITrnDedCd"").Value = """"
                         .Fields(""PfPolPPITrbDedCd"").Value = """"
                         .Fields(""PfPolPSplDedCd"").Value = """"
                         .Fields(""PfPolPPISpeDedCd"").Value = """"
                         .Fields(""PfPPClasRated"").Value = """"
                         .Fields(""PfPPSpl"").Value = """"
                         .Fields(""PfPPSplLim"").Value = """"
                         .Fields(""PfPPSplRate"").Value = """"
                         .Fields(""PfPPClsRtCmbnInd"").Value = """"
                         .Fields(""PfPPClsRtDrctInd"").Value = """"
                         .Fields(""PfPPClsRtIndrctInd"").Value = """"
                         .Fields(""PfPPClsRtSplgInd"").Value = """"
                         .Fields(""PfPPClsRtDedDocInd"").Value = """"
                     End With
                 End If
","rule-190,rule-196",,,,,,
rule-198,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"                If chkCLASRated.Checked = False AndAlso
                          chkHSBRated.Checked = False AndAlso
                           chkHSBOptOut.Checked = False Then
                     _oLobData.Policy.Input(""PfPPClasRated"").Value = """"
                     _oLobData.Policy.Input(""PfPPOptOut"").Value = """"
                     _oLobData.Policy.Input(""PfPPHSBRated"").Value = """"
                 End If
","rule-190,rule-198",,direct_rule,,,,
,PFPolicyInput.aspx,SaveFormSystemsPowerPacOptionsData,ddlPfPPOptOut, SYSTEMS POWER PAC COVERAGE,1.)Reason,"            End If
",rule-190,,,,,,
rule-199,PFPolicyInput.aspx,setddlPfPolBldgDed,ddlPfPolBldgDed, PROPERTY POLICY INFORMATION,1.)Deductible,"                If dtPfPolBldgDed.Columns.Contains(""help_Desc"") Then
                     .DataTextField = ""help_Desc""
                     .DataValueField = ""help_Desc""
                 ElseIf dtPfPolBldgDed.Columns.Contains(""Help_Value"") Then
                     .DataTextField = ""Help_Value""
                     .DataValueField = ""Help_Value""
                 Else
                     .DataTextField = ""Policy_Ded""
                     .DataValueField = ""Policy_Ded""
                 End If
",rule-199,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPfPolBldgDed, PROPERTY POLICY INFORMATION,1.)Deductible,setddlPfPolBldgDed(),rule-199,,,,,,
,PFPolicyInput.aspx,,ddlPfPolBldgDed, PROPERTY POLICY INFORMATION,1.)Deductible,SetControlsPolicyInformation(),rule-199,,,,,,
rule-200,PFPolicyInput.aspx,setddlPfPolBldgDed,ddlPfPolBldgDed, PROPERTY POLICY INFORMATION,1.)Deductible,"                If Date.ParseExact(_oCOData.Attributes.Common.PolicyEffectiveDate, ""MMddyy"", System.Globalization.CultureInfo.InvariantCulture) >= IsoDeductibleEffectiveDate Then
                     .DataSource = dtPfPolBldgDed.Select.Where(Function(policyDeductible) policyDeductible.Item(""Policy_Ded"").ToString <> ""100,000"").ToList()
                 Else
                     .DataSource = dtPfPolBldgDed
                 End If
",rule-200,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPfPolBldgDed, PROPERTY POLICY INFORMATION,1.)Deductible,setddlPfPolBldgDed(),rule-200,,,,,,
,PFPolicyInput.aspx,,ddlPfPolBldgDed, PROPERTY POLICY INFORMATION,1.)Deductible,SetControlsPolicyInformation(),rule-200,,,,,,
rule-201,PFPolicyInput.aspx,setddlPolDed,ddlPolDed, Deductible Overrides,1.)Policy Deductible Overrride,"                    If (_oLobData.Policy.Input(""PfPolType"").Value = ""L"" _
                         Or _oLobData.Policy.Input(""PfPolType"").Value = ""S"" _
                         Or _oLobData.Policy.Input(""PfPolType"").Value = ""X"") Then
                         .DataSource = oLookup.Item(""ISLAND_LARGEDED"").DataSource
                     Else
                         .DataSource = oLookup.Item(""ISLAND_DED"").DataSource
                     End If
",rule-201,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPolDed, Deductible Overrides,1.)Policy Deductible Overrride,setddlPolDed(),rule-201,,,,,,
,PFPolicyInput.aspx,,ddlPolDed, Deductible Overrides,1.)Policy Deductible Overrride,SetupPropertyPolicyInputControl(),rule-201,,,,,,
rule-202,PFPolicyInput.aspx,setddlPolDed,ddlPolDed, Deductible Overrides,1.)Policy Deductible Overrride,"                    If _stxtPfPolBg1Ded = String.Empty AndAlso
                        _stxtPfPolBg2Ded = String.Empty AndAlso
                         _stxtPfPolOtherDed = String.Empty Then
                     Else
                         .SelectedIndex = _iSelectedIndex
                     End If
",rule-202,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPolDed, Deductible Overrides,1.)Policy Deductible Overrride,setddlPolDed(),rule-202,,,,,,
,PFPolicyInput.aspx,,ddlPolDed, Deductible Overrides,1.)Policy Deductible Overrride,SetupPropertyPolicyInputControl(),rule-202,,,,,,
rule-203,PFPolicyInput.aspx,SetddlPriorCarrier,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                If InStr(""*NBIS*NBQU*RCIS*RCQU*"", _oCOData.Attributes.Common.PolicyTransactionType) > 0 Then
                     .Validators.Required.Enabled = True
                 End If
",rule-203,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,SetddlPriorCarrier(),rule-203,,,,,,
,PFPolicyInput.aspx,,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,SetupPropertyPolicyInputControl(),rule-203,,,,,,
rule-204,PFPolicyInput.aspx,SetddlPriorCarrier,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                If InStr(""*REQU*REIS*PCNM*"", _oCOData.Attributes.Common.PolicyTransactionType) > 0 Then
",rule-204,,direct_rule,,,,
,PFPolicyInput.aspx,,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,SetddlPriorCarrier(),rule-204,,,,,,
,PFPolicyInput.aspx,,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,SetupPropertyPolicyInputControl(),rule-204,,,,,,
rule-205,PFPolicyInput.aspx,SetddlPriorCarrier,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                    If _oLobData.Policy.Input.Exists = False Then
                         .Validators.Required.Enabled = True
                     End If
","rule-204,rule-205",,direct_rule,,,,
,PFPolicyInput.aspx,SetddlPriorCarrier,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                End If
",rule-204,,,,,,
rule-206,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"            If oAccount.Updateable Then
                 For Each Lob As AccountAccess.AcctLob In oAccount.Lobs
",rule-206,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,SaveCarrierFormData(),rule-206,,,,,,
rule-207,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                    If sLob.Trim = Lob.Fields(""LOB_CODE"").Trim Then
","rule-206,rule-207",,variable_type_rule,,,,
rule-208,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                        If ddlPriorCarrier.SelectedValue.Trim <> """" Then
                             Lob.Fields(""PREV_CARRIER_CD"") = ddlPriorCarrier.SelectedValue
                             bLobExists = True
                             Exit For
                         End If
","rule-206,rule-207,rule-208",,direct_rule,,,,
,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                    End If
","rule-206,rule-207",,,,,,
,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                Next
",rule-206,,,,,,
rule-209,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                If Not bLobExists Then
                     oAcctLobs.Add(sLob)
","rule-206,rule-209",,variable_type_rule,,,,
rule-210,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                    If ddlPriorCarrier.SelectedValue.Trim <> """" Then
                         oAcctLobs.LOB(sLob).Fields(""PREV_CARRIER_CD"") = ddlPriorCarrier.SelectedValue
                     End If
","rule-206,rule-209,rule-210",,direct_rule,,,,
,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                End If
","rule-206,rule-209",,,,,,
,PFPolicyInput.aspx,SaveCarrierFormData,ddlPriorCarrier, Prior Carrier For Property,1.)Prior Carrier ,"                oAccount.Commit()
             End If
",rule-206,,,,,,
rule-211,PFPolicyInput.aspx,setddlPFPolBldgCoins,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,"                If IsRuleApplicable(_sEffDate, _sPredState, ExcludeFlatCoinsurance) Then
                     .ToolTip = FLAT_EXCLUDED_TOOL_TIP
                 Else
                     .ToolTip = BUILDING_COINS_TOOL_TIP
                 End If
",rule-211,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,setddlPFPolBldgCoins(),rule-211,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,SetControlsPolicyInformation(),rule-211,,,,,,
rule-212,PFPolicyInput.aspx,setddlPFPolBldgCoins,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,"                If lobPFPolicyData.Input(""PfCopRate"").Value.CL_EqualsYesAbbreviation() Then
                     .Enabled = False
                 End If
",rule-212,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,setddlPFPolBldgCoins(),rule-212,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,SetControlsPolicyInformation(),rule-212,,,,,,
rule-213,PFPolicyInput.aspx,setddlPFPolBldgCoins,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,"                If .Items.FindByValue(buildingCoinsSelctedValue) IsNot Nothing Then
                     .SelectedValue = buildingCoinsSelctedValue
                 Else
                     .SelectedValue = COINS_LIMIT_80
                 End If
",rule-213,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,setddlPFPolBldgCoins(),rule-213,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,SetControlsPolicyInformation(),rule-213,,,,,,
rule-214,PFPolicyInput.aspx,SaveFormPolicyInformationData,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,"            If _oLobData.Policy.Input(""PfPolBldgCoins"").Value.Trim <> ddlpfpolbldgcoins.SelectedValue.Trim() Then
                 _bAutoWalkThruFieldChanged = True
             End If
",rule-214,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,SaveFormPolicyInformationData(),rule-214,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,SaveFormData(),rule-214,,,,,,
rule-214.1,PFPolicyInput.aspx,SaveData,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-214,,Function_Invocation_Rule,,,,
rule-214.2,PFPolicyInput.aspx,SaveData,ddlpfpolbldgcoins, PROPERTY POLICY INFORMATION,1.)Building Coinsurance,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-214,,Function_Invocation_Rule,,,,
rule-215,PFPolicyInput.aspx,setddlPFPolBppCoins,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,"                If IsRuleApplicable(_sEffDate, _sPredState, ExcludeFlatCoinsurance) Then
                     .ToolTip = FLAT_EXCLUDED_TOOL_TIP
                 Else
                     .ToolTip = BPP_COINS_TOOL_TIP
                 End If
",rule-215,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,setddlPFPolBppCoins(),rule-215,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,SetControlsPolicyInformation(),rule-215,,,,,,
rule-216,PFPolicyInput.aspx,setddlPFPolBppCoins,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,"                If lobPFPolicyData.Input(""PfCopRate"").Value.CL_EqualsYesAbbreviation() Then
                     .Enabled = False
                 End If
",rule-216,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,setddlPFPolBppCoins(),rule-216,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,SetControlsPolicyInformation(),rule-216,,,,,,
rule-217,PFPolicyInput.aspx,setddlPFPolBppCoins,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,"                If .Items.FindByValue(bppCoinsSelctedValue) IsNot Nothing Then
                     .SelectedValue = bppCoinsSelctedValue
                 Else
                     .SelectedValue = COINS_LIMIT_80
                 End If
",rule-217,,variable_type_rule,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,setddlPFPolBppCoins(),rule-217,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,SetControlsPolicyInformation(),rule-217,,,,,,
rule-218,PFPolicyInput.aspx,SaveFormPolicyInformationData,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,"            If _oLobData.Policy.Input(""PfPolBppCoins"").Value.Trim <> ddlpfpolbppcoins.SelectedValue.Trim() Then
                 _bAutoWalkThruFieldChanged = True
             End If
",rule-218,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,SaveFormPolicyInformationData(),rule-218,,,,,,
,PFPolicyInput.aspx,,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,SaveFormData(),rule-218,,,,,,
rule-218.1,PFPolicyInput.aspx,SaveData,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-218,,Function_Invocation_Rule,,,,
rule-218.2,PFPolicyInput.aspx,SaveData,ddlpfpolbppcoins, PROPERTY POLICY INFORMATION,1.)Business Personal Property Coinsurance,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-218,,Function_Invocation_Rule,,,,
rule-219,PFPolicyInput.aspx,SethidIsAutoWalkThruEligible,hidIsAutoWalkThruEligible,,,"Class_Variable:        Private _bDisableNav As Boolean = False
 Page_Load():                                    _bDisableNav = True             If (_oLobData.Attributes.Common.UserType.Equals(USER_TYPE_AGENT) AndAlso _bDisableNav.Equals(False) AndAlso
                (Request.QueryString(""Action"") = ACTION_NEW AndAlso _oCOData.StatusRecords(statusPF).Exists.Equals(False)).Equals(False) AndAlso
                 _oShared.GetLobEnabledForDotNET(""ATWTPF"", _oCOData.Policy.Fields(""PwBusType"").Value.Trim)) AndAlso
                (_oLobData.Locations.Count > 0 AndAlso _ACORDImportWalkthruProperties.IsACORDImpWalkthruRequired.CL_EqualsYesAbbreviation).Equals(False) Then
                 hidIsAutoWalkThruEligible.Value = True.ToString()
             End If
",rule-219,,variable_type_rule,,,,
,PFPolicyInput.aspx,,hidIsAutoWalkThruEligible,,,SethidIsAutoWalkThruEligible(),rule-219,,,,,,
,PFPolicyInput.aspx,,hidIsAutoWalkThruEligible,,,SetupPropertyPolicyInputControl(),rule-219,,,,,,
rule-219.1,PFPolicyInput.aspx,Page_Load,hidIsAutoWalkThruEligible,,,"             If Not IsPostBack Then
                 oCODataOld = New SIGI.CLAS.BusinessServices.LobCO.PolicyData(_sQtPolNum, _sInstanceId, BasePolicyData.LoadType.Default, BasePolicyData.DataGroup.Old)
                 _sAction = Request.QueryString(""Action"")
                 Select Case _sAction
                     Case ACTION_NEW, ACTION_WALK_THRU_DONE
                         PolicyWriting.UI.Utility.LoadCommonAttributes(_sQtPolNum, _sInstanceId, Me.User.UserID.ToString, Session, LOB_CODE_PROPERTY)
                         _oLobData = _oLobBus.LoadData(_sQtPolNum, _sInstanceId, _oCOData, _sAction, _oValidationResults)
                         HiddenPfPreviousElitepacValue.Value = _oLobData.Policy.Input.Fields(""PFElitePac2015"").Value.Trim
                         Const ACORD_WALKTHRU_REQUIRED As String = ""ACORDWalkthruRequired""
                         With _oLobData
                             .Attributes.Common.WalkThruInd = If(.Attributes(ACORD_WALKTHRU_REQUIRED) IsNot Nothing AndAlso
                                                            .Attributes(ACORD_WALKTHRU_REQUIRED).CL_EqualsYesAbbreviation, String.Empty, .Attributes.Common.WalkThruInd)
                         End With
                         If _oLobShared.PFLocationExist(_oCOData) = False Then 
Page.Redirect(String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicySummary.aspx""))
 
 End If
                         Dim policyEffectiveDate As Date = Date.ParseExact(_oLobData.Attributes.Common.PolicyEffectiveDate, DATE_FORMAT_MMDDYY, Nothing)
                         Dim appShared As New BusinessServices.Shared.ApplicationShared
                         Dim isMarginClauseEffective As Boolean = appShared.SupportIsInEffect(PROPERTY_ISO, policyEffectiveDate)
                         With _oLobData.Policy
                             If isMarginClauseEffective Then
                                 .Input(""PFIsoLossCostApply"").Value = YES_ABBREVIATED
                             Else
                                 .Input(""PFIsoLossCostApply"").Value = NO_ABBREVIATED
                             End If
                         End With
                         SetElitePacEligibilityIndicator(_oLobData.Policy.Input, _oCOData.Attributes)
                         SetISO2012Indicator(_oLobData.Attributes.Common.PolicyEffectiveDate, _oLobData.Attributes.Common.PredominantState.Trim, _oLobData.Policy.Input)
                         _navDict = _oLobShared.GetLOBNAvagation(_oCOData, _oLobData)
                         Dim lobAttributes As BusinessServices.LobPF.Attributes = _oLobData.Attributes
                         _oLobData.Attributes.Collections(""LOBNAVAGATION"") = _navDict
                         _bInputComplete = _oLobShared.SetCompleteFlagsBIC(_oCOData, _oLobData, _oCOData.StatusRecords(String.Concat(""STATUS"", Common.getLineOfBusiness(LOB.LineOfBusiness.Property))))
                         _bDisableNav = False
                         If _sAction = ACTION_WALK_THRU_DONE Then
                             _oValidationResults = TryCast(Session(""PF_ERRORS""), ErrorCollection)
                             If _oValidationResults IsNot Nothing Then
                                 If _oValidationResults.ErrorCount > 0 Then
                                     _oLobData.Attributes(""StillInWalkthru"") = YES_ABBREVIATED
                                     AddErrorsToPage(_oValidationResults)
                                     _bDisableNav = True
                                 Else
                                     WalkthruSuccess()
                                 End If
                             Else
                                 WalkthruSuccess()
                             End If
                         Else
                             If Session(""PF_ERRORS"") Is Nothing Then
                                 _oValidationResults = New ErrorCollection()
                                 Session(""PF_ERRORS"") = _oValidationResults
                             Else
                                 _oValidationResults = CType(Session(""PF_ERRORS""), ErrorCollection)
                                 If _oValidationResults.ErrorCount > 0 Then
                                     AddErrorsToPage(_oValidationResults)
                                 Else
                                     _oValidationResults.ClearAllErrors()
                                 End If
                             End If
                             _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                         End If
                         If (lobAttributes.Common.OneNDoneInd).CL_EqualsYesAbbreviation() Then
                             If (lobAttributes(""LOBAddMode"")).CL_EqualsYesAbbreviation() OrElse
                                 (lobAttributes.Common.WalkThruInd).CL_EqualsYesAbbreviation() Then
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oLobData.SetSession()
                                 _oCOData.SetSession()
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 Page.Redirect(String.Format(""{0}{1}?Type=OneNDone&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                             End If
                         ElseIf Not Trim(_sAction) = ACTION_WALK_THRU_DONE AndAlso _oLobData.Locations.Count > 0 Then         'If walkthru done, then dont run this code. otherwise it will go in endless loop of walkthru
                             If lobAttributes.Common.WalkThruInd.Trim.CL_EqualsYesAbbreviation() OrElse
                                 lobAttributes.Common.WalkThruInd.Trim.Equals(WALKTHRU_TYPE_INCOMPLETE) Then
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oCOData.SetSession()
                                 _oLobData.SetSession()
                                 If (lobAttributes.Common.WalkThruInd.Trim).CL_EqualsYesAbbreviation() Then
                                     Page.Redirect(String.Format(""{0}{1}?Type=LOB&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 Else
                                     Page.Redirect(String.Format(""{0}{1}?Type=Q&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 End If
                             End If
                         End If
                         _oLobBus.PowerPacRates(_oLobData)
                         SetupPagePresentation()
                         If _oLobData.Locations.Count = 0 Then
                             Dim oneNDone As String = _oLobData.Attributes.Common.OneNDoneType
                             Dim oneNDoneType As New HashSet(Of String) From {{ONE_N_DONE_CIVIC_ORGANIZATIONS},
                                                                              {ONE_N_DONE_CIRCUIT_TRAINING},
                                                                              {ONE_N_DONE_DANCE_STUDIOS},
                                                                              {ONE_N_DONE_LIGHT_MANUFACTURING},
                                                                              {ONE_N_DONE_LESSOR_RISK}}
                             If (oneNDoneType.Contains(oneNDone)) AndAlso (_oLobData.Attributes(""FirstTimeInO&DPF"").CL_EqualsNoAbbreviation() = False) AndAlso
                                (oneNDone.CL_EqualsYesAbbreviation()) Then
                                 If (oneNDone.Equals(ONE_N_DONE_LIGHT_MANUFACTURING)) AndAlso (String.IsNullOrWhiteSpace(_oLobData.Policy.Input.Fields(""PfMisc4"").Value)) Then
                                     _oLobData.Policy.Input.Fields(""PfMisc4"").Value = ""20""
                                 End If
                             End If
                         End If
                 End Select
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-219,,function_type_rule,,,,
rule-219.2,PFPolicyInput.aspx,Page_Load,hidIsAutoWalkThruEligible,,,"                             If isMarginClauseEffective Then
                                 .Input(""PFIsoLossCostApply"").Value = YES_ABBREVIATED
                             Else
                                 .Input(""PFIsoLossCostApply"").Value = NO_ABBREVIATED
                             End If
",rule-219,,function_type_rule,,,,
rule-219.3,PFPolicyInput.aspx,Page_Load,hidIsAutoWalkThruEligible,,,"                         If _sAction = ACTION_WALK_THRU_DONE Then
                             _oValidationResults = TryCast(Session(""PF_ERRORS""), ErrorCollection)
                             If _oValidationResults IsNot Nothing Then
                                 If _oValidationResults.ErrorCount > 0 Then
                                     _oLobData.Attributes(""StillInWalkthru"") = YES_ABBREVIATED
                                     AddErrorsToPage(_oValidationResults)
                                     _bDisableNav = True
                                 Else
                                     WalkthruSuccess()
                                 End If
                             Else
                                 WalkthruSuccess()
                             End If
                         Else
                             If Session(""PF_ERRORS"") Is Nothing Then
                                 _oValidationResults = New ErrorCollection()
                                 Session(""PF_ERRORS"") = _oValidationResults
                             Else
                                 _oValidationResults = CType(Session(""PF_ERRORS""), ErrorCollection)
                                 If _oValidationResults.ErrorCount > 0 Then
                                     AddErrorsToPage(_oValidationResults)
                                 Else
                                     _oValidationResults.ClearAllErrors()
                                 End If
                             End If
                             _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                         End If
",rule-219,,function_type_rule,,,,
rule-219.4,PFPolicyInput.aspx,Page_Load,hidIsAutoWalkThruEligible,,,"                             If Session(""PF_ERRORS"") Is Nothing Then
                                 _oValidationResults = New ErrorCollection()
                                 Session(""PF_ERRORS"") = _oValidationResults
                             Else
                                 _oValidationResults = CType(Session(""PF_ERRORS""), ErrorCollection)
                                 If _oValidationResults.ErrorCount > 0 Then
                                     AddErrorsToPage(_oValidationResults)
                                 Else
                                     _oValidationResults.ClearAllErrors()
                                 End If
                             End If
",rule-219,,function_type_rule,,,,
rule-219.5,PFPolicyInput.aspx,Page_Load,hidIsAutoWalkThruEligible,,,"                         If (lobAttributes.Common.OneNDoneInd).CL_EqualsYesAbbreviation() Then
                             If (lobAttributes(""LOBAddMode"")).CL_EqualsYesAbbreviation() OrElse
                                 (lobAttributes.Common.WalkThruInd).CL_EqualsYesAbbreviation() Then
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oLobData.SetSession()
                                 _oCOData.SetSession()
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 Page.Redirect(String.Format(""{0}{1}?Type=OneNDone&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                             End If
                         ElseIf Not Trim(_sAction) = ACTION_WALK_THRU_DONE AndAlso _oLobData.Locations.Count > 0 Then         'If walkthru done, then dont run this code. otherwise it will go in endless loop of walkthru
                             If lobAttributes.Common.WalkThruInd.Trim.CL_EqualsYesAbbreviation() OrElse
                                 lobAttributes.Common.WalkThruInd.Trim.Equals(WALKTHRU_TYPE_INCOMPLETE) Then
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oCOData.SetSession()
                                 _oLobData.SetSession()
                                 If (lobAttributes.Common.WalkThruInd.Trim).CL_EqualsYesAbbreviation() Then
                                     Page.Redirect(String.Format(""{0}{1}?Type=LOB&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 Else
                                     Page.Redirect(String.Format(""{0}{1}?Type=Q&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 End If
                             End If
                         End If
",rule-219,,function_type_rule,,,,
rule-219.6,PFPolicyInput.aspx,Page_Load,hidIsAutoWalkThruEligible,,,"                             If lobAttributes.Common.WalkThruInd.Trim.CL_EqualsYesAbbreviation() OrElse
                                 lobAttributes.Common.WalkThruInd.Trim.Equals(WALKTHRU_TYPE_INCOMPLETE) Then
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oCOData.SetSession()
                                 _oLobData.SetSession()
                                 If (lobAttributes.Common.WalkThruInd.Trim).CL_EqualsYesAbbreviation() Then
                                     Page.Redirect(String.Format(""{0}{1}?Type=LOB&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 Else
                                     Page.Redirect(String.Format(""{0}{1}?Type=Q&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 End If
                             End If
",rule-219,,function_type_rule,,,,
rule-219.7,PFPolicyInput.aspx,ProcessACORDImpWalkthru,hidIsAutoWalkThruEligible,,,"                 If (New [Shared].ApplicationShared).GetACORDImportActivePhaseTwo(lobCode, .UserId, .LocationCode) Then
                     Dim LOBStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS, lobCode))
                     Dim ACORDImportWalkthruPropertyParam As New ACORDImportPropertyWalkthruParams(LOBStatusRecord(PROPERTY_ACORD_IMPORT_SOURCE_LOB).Value,
                                                                                                   LOBStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value,
                                                                                                   Request.QueryString(ACORD_IMPORT_WALKTHRU_RUN),
                                                                                                   (IsPostBack AndAlso _oValidationResults.ErrorCount > 0), .View,
                                                                                                   .PolicyTransactionType, _oLobData.Attributes, ACORDImportWalkthruLoader,
                                                                                                   ACORDImportWalkthruTitle)
                     _ACORDImportWalkthruProperties = ProcessACORDImportPropertyWalkthru(ACORDImportWalkthruPropertyParam)
                 Else
                     _ACORDImportWalkthruProperties = New ACORDImportWalkthruProperties(String.Empty, String.Empty, String.Empty, String.Empty, False, String.Empty, False, String.Empty, False)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.8,PFPolicyInput.aspx,SetupPagePresentation,hidIsAutoWalkThruEligible,,,"             If _ACORDImportWalkthruProperties.IsSessionPreviousPageURLUpdateRequired Then
                 Session(CURRENT_PAGE_URL) = Session(PREVIOUS_PAGE_URL).ToString
                 Session.SetVariables()
             End If
",rule-219,,function_type_rule,,,,
rule-219.9,PFPolicyInput.aspx,SetupPagePresentation,hidIsAutoWalkThruEligible,,,"             If _oLobData.Locations.Count = 0 Then 
_sHSB_SIC = commonAddLob.HSB_Referral_SIC(_oCOData)
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.10,PFPolicyInput.aspx,SetupPagePresentation,hidIsAutoWalkThruEligible,,,"             If _oLobData.Attributes.ContainsKey(""LOBNAVAGATION"") = False Then
                 _navDict = CType(_oLobData.Attributes.Collections(""LOBNAVAGATION""), Dictionary(Of String, String))
             Else
                 _navDict = _oLobShared.GetLOBNAvagation(_oCOData, _oLobData)
             End If
",rule-219,,function_type_rule,,,,
rule-219.11,PFPolicyInput.aspx,SetupPagePresentation,hidIsAutoWalkThruEligible,,,"             If _navDict.ContainsValue(POLICY_STATUS_INCOMPLETE) Then
                 _bShowRateButton = False
             Else
                 _bShowRateButton = True
             End If
",rule-219,,function_type_rule,,,,
rule-219.12,PFPolicyInput.aspx,SetupPagePresentation,hidIsAutoWalkThruEligible,,,"             If LobAttributes.Common.OneNDoneInd.CL_EqualsYesAbbreviation() Then 
oDType = _oCOData.Policy(""ODType"").Value
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.13,PFPolicyInput.aspx,SetupPagePresentation,hidIsAutoWalkThruEligible,,,"             If _sAction IsNot Nothing AndAlso _sAction.Equals(ACTION_NEW) = False Then 
LobAttributes(""Chng2ClsRtd"") = String.Empty
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.14,PFPolicyInput.aspx,IsDeductible250PresentforProperty,hidIsAutoWalkThruEligible,,,"                 If (_ACORDImportWalkthruProperties.IsACORDImpWalkthruRequired.CL_EqualsNoAbbreviation() OrElse
                         _ACORDImportWalkthruProperties.IsACORDImpWalkthruRunning.CL_EqualsNoAbbreviation() OrElse
                         String.IsNullOrWhiteSpace(_ACORDImportWalkthruProperties.IsACORDImpWalkthruRunning)) AndAlso
                        (.Input(""PfPolBldgLgDed"").Value.Trim.Equals(PROPERTY_BLDG_DEDUCTION_250) OrElse
                        .Input(""PfPolBldgDed"").Value.Trim.Equals(PROPERTY_BLDG_DEDUCTION_250)) Then 
IsDeductible250Present = True
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.15,PFPolicyInput.aspx,IsDeductible250PresentforProperty,hidIsAutoWalkThruEligible,,,"                 If dtPfPolBldgDed.Columns.Contains(""help_Desc"") Then
                     .DataTextField = ""help_Desc""
                     .DataValueField = ""help_Desc""
                 ElseIf dtPfPolBldgDed.Columns.Contains(""Help_Value"") Then
                     .DataTextField = ""Help_Value""
                     .DataValueField = ""Help_Value""
                 Else
                     .DataTextField = ""Policy_Ded""
                     .DataValueField = ""Policy_Ded""
                 End If
",rule-219,,function_type_rule,,,,
rule-219.16,PFPolicyInput.aspx,IsDeductible250PresentforProperty,hidIsAutoWalkThruEligible,,,"                 If Date.ParseExact(_oCOData.Attributes.Common.PolicyEffectiveDate, ""MMddyy"", System.Globalization.CultureInfo.InvariantCulture) >= IsoDeductibleEffectiveDate Then
                     .DataSource = dtPfPolBldgDed.Select.Where(Function(policyDeductible) policyDeductible.Item(""Policy_Ded"").ToString <> ""100,000"").ToList()
                 Else
                     .DataSource = dtPfPolBldgDed
                 End If
",rule-219,,function_type_rule,,,,
rule-219.17,PFPolicyInput.aspx,IsDeductible250PresentforProperty,hidIsAutoWalkThruEligible,,,"             If polType.Contains(_oLobData.Policy.Input.Fields(""PfPolType"").Value) Then
                 SetddlItem(_oLobData.Policy.Input.Fields(""PfPolBldgLgDed"").Value, ddlPfPolBldgDed)
             Else
                 SetddlItem(_oLobData.Attributes(""PolBldgDed""), ddlPfPolBldgDed)
             End If
",rule-219,,function_type_rule,,,,
rule-219.18,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.19,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.20,PFPolicyInput.aspx,IsDeductible250PresentforProperty,hidIsAutoWalkThruEligible,,,"             If (ddlPfPolBldgDed.SelectedIndex.Equals(-1)) Then
                 SetddlItem(setDeductibleValueDuringAcordWalkthru, ddlPfPolBldgDed)
             End If
",rule-219,,function_type_rule,,,,
rule-219.21,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"             If IsRuleApplicable(_sEffDate, _sPredState, ExcludeFlatCoinsurance) Then
                 propertyCoinsuranceValues = New LookUpDropDownValue(Nothing, ""value"", ""key"", PROPERTY_COINSURANCE, True,
                                                                                            FormatDate(_sEffDate, DateFormatType.mmddyy).CL_ToDateTime,
                                                                                            Common.getLineOfBusiness(LineOfBusiness.Property),
                                              _sPredState, False, String.Empty, String.Empty, String.Empty)
             Else
                 propertyCoinsuranceValues = New LookUpDropDownValue(Nothing, ""value"", ""key"", PROPERTY_COINSURANCE, True,
                                                                                            FormatDate(_sEffDate, DateFormatType.mmddyy).CL_ToDateTime,
                                                                                            Common.getLineOfBusiness(LineOfBusiness.Property),
                                              STATE_CODE_COUNTRY_WIDE, False, String.Empty, String.Empty, String.Empty)
             End If
",rule-219,,function_type_rule,,,,
rule-219.22,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"             If buildingCoinsuranceValues IsNot Nothing Then
                 buildingCoinsuranceValues = GetLookUpDropDownValues(buildingCoinsuranceValues)
             End If
",rule-219,,function_type_rule,,,,
rule-219.23,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"                 If IsRuleApplicable(_sEffDate, _sPredState, ExcludeFlatCoinsurance) Then
                     .ToolTip = FLAT_EXCLUDED_TOOL_TIP
                 Else
                     .ToolTip = BUILDING_COINS_TOOL_TIP
                 End If
",rule-219,,function_type_rule,,,,
rule-219.24,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"                 If lobPFPolicyData.Input(""PfCopRate"").Value.CL_EqualsYesAbbreviation() Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.25,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"                 If .Items.FindByValue(buildingCoinsSelctedValue) IsNot Nothing Then
                     .SelectedValue = buildingCoinsSelctedValue
                 Else
                     .SelectedValue = COINS_LIMIT_80
                 End If
",rule-219,,function_type_rule,,,,
rule-219.26,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"             If IsRuleApplicable(_sEffDate, _sPredState, ExcludeFlatCoinsurance) Then
                 propertyCoinsuranceValues = New LookUpDropDownValue(Nothing, ""value"", ""key"", PROPERTY_COINSURANCE, True,
                                                                                            FormatDate(_sEffDate, DateFormatType.mmddyy).CL_ToDateTime,
                                                                                            Common.getLineOfBusiness(LineOfBusiness.Property),
                                              _sPredState, False, String.Empty, String.Empty, String.Empty)
             Else
                 propertyCoinsuranceValues = New LookUpDropDownValue(Nothing, ""value"", ""key"", PROPERTY_COINSURANCE, True,
                                                                                            FormatDate(_sEffDate, DateFormatType.mmddyy).CL_ToDateTime,
                                                                                            Common.getLineOfBusiness(LineOfBusiness.Property),
                                              STATE_CODE_COUNTRY_WIDE, False, String.Empty, String.Empty, String.Empty)
             End If
",rule-219,,function_type_rule,,,,
rule-219.27,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"             If bppCoinsuranceValues IsNot Nothing Then
                 bppCoinsuranceValues = GetLookUpDropDownValues(bppCoinsuranceValues)
             End If
",rule-219,,function_type_rule,,,,
rule-219.28,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"                 If IsRuleApplicable(_sEffDate, _sPredState, ExcludeFlatCoinsurance) Then
                     .ToolTip = FLAT_EXCLUDED_TOOL_TIP
                 Else
                     .ToolTip = BPP_COINS_TOOL_TIP
                 End If
",rule-219,,function_type_rule,,,,
rule-219.29,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"                 If lobPFPolicyData.Input(""PfCopRate"").Value.CL_EqualsYesAbbreviation() Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.30,PFPolicyInput.aspx,GetPropertyCoinsuranceValues,hidIsAutoWalkThruEligible,,,"                 If .Items.FindByValue(bppCoinsSelctedValue) IsNot Nothing Then
                     .SelectedValue = bppCoinsSelctedValue
                 Else
                     .SelectedValue = COINS_LIMIT_80
                 End If
",rule-219,,function_type_rule,,,,
rule-219.31,PFPolicyInput.aspx,setddlPFPolCol,hidIsAutoWalkThruEligible,,,"             If _oLobShared.PFVAExpansionApplyCOL(_oCOData, _oLobData) Then
                 dtPFPolCol = _oLobBus.GetListPolicyCOLVAExpand()
                 If String.IsNullOrWhiteSpace(_oLobData.Policy.Input.Fields(""PfPolCol"").Value) Then
                     _oLobData.Policy.Input.Fields(""PfPolCol"").Value = PREDOMINANT_CAUSE_OF_LOSS.SPECIAL.GetHashCode.ToString.Trim
                 End If
             Else
                 dtPFPolCol = _oLobBus.GetListPolicyCOL()
             End If
",rule-219,,function_type_rule,,,,
rule-219.32,PFPolicyInput.aspx,setddlPFPolCol,hidIsAutoWalkThruEligible,,,"                 If _isElitePac2015Applicable Then
                     .OnClientChange = ""OnCauseOfLossChange();""
                 End If
",rule-219,,function_type_rule,,,,
rule-219.33,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.34,PFPolicyInput.aspx,setddlPFPolBppCoins,hidIsAutoWalkThruEligible,,,"             If _oCOLobShared.IsLFCEffDate(_sEffDate) Then
                 setddlLossFreeYr()
             Else
                 settxtLossFreeYears()
             End If
",rule-219,,function_type_rule,,,,
rule-219.35,PFPolicyInput.aspx,setddlLossFreeYr,hidIsAutoWalkThruEligible,,,"             If _oCOData.RenewalLOB.Exists Then 
oldLines = _oCOData.RenewalLOB.Buffer.Trim
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.36,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.37,PFPolicyInput.aspx,setddlLossFreeYr,hidIsAutoWalkThruEligible,,,"                 If _isElitePac2015Applicable Then
                     .Visible = True
                     pnlPolInfo.AddHelpItem(""Loss Free"", 874, ""ddlLossFreeYr"")
                 Else
                     If _bDisableMod2 Then
                         .Visible = False
                     Else
                         .Visible = True
                         pnlPolInfo.AddHelpItem(""Loss Free"", 874, ""ddlLossFreeYr"")
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.38,PFPolicyInput.aspx,setddlLossFreeYr,hidIsAutoWalkThruEligible,,,"                 If oCODataOld IsNot Nothing AndAlso oCODataOld.StatusRecords.Contains(""STATUSPF"") Then 
_boldPF = True
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.39,PFPolicyInput.aspx,setddlLossFreeYr,hidIsAutoWalkThruEligible,,,"                 If (_boldPF AndAlso policyTransactionType.Equals(Common.getTransactionType(Transaction.TransactionType.ChangeEndorsement))) OrElse
                     (New HashSet(Of String)() From {{Common.getTransactionType(Transaction.TransactionType.RenewalIssue)},
                                                    {Common.getTransactionType(Transaction.TransactionType.RenewalQuote)}}.Contains(policyTransactionType) AndAlso
                     oldLines.Contains(Common.getLineOfBusiness(LOB.LineOfBusiness.Property))) AndAlso String.IsNullOrWhiteSpace(lossFreeYears).Equals(False) Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.40,PFPolicyInput.aspx,setddlLossFreeYr,hidIsAutoWalkThruEligible,,,"                 If SIGI.Web.Context.Current.User.IsInRole(""Auth_ERRC"") AndAlso .Enabled.Equals(False) Then
                     .Enabled = isLFCCorrectionEligible(_oCOData)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.41,PFPolicyInput.aspx,settxtLossFreeYears,hidIsAutoWalkThruEligible,,,"                 If _bDisableMod2 = True Then
                     .Visible = False
                 Else
                     Visible = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.42,PFPolicyInput.aspx,isInstituteRiskEligible,hidIsAutoWalkThruEligible,,,"                 If isInstituteRiskEligible(_oLobData.Policy.Input) Then
         Private Function isInstituteRiskEligible(ByVal lobData As LobPF.PolicyInput) As Boolean
             Dim returnVal As Boolean = False
             Dim elitePac2015applicable As Boolean = lobData(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
             Dim pgrmCode As String = lobData(""PfPgmCode"").Value.Trim
             If (elitePac2015applicable AndAlso New HashSet(Of String)() From {{PROGRAM_CODE_COMM_UNITY_OF_FAITH},
                                                                                     {PROGRAM_CODE_EMERGENCY_SERVICES},
                                                                                     {PROGRAM_CODE_GOVERNMENTAL},
                                                                                      {PROGRAM_CODE_SCHOOLS},
                                                                                      {PROGRAM_CODE_INSTITUTIONAL}}.Contains(pgrmCode)) OrElse
                (elitePac2015applicable.Equals(False) AndAlso New HashSet(Of String)() From {{PROGRAM_CODE_INSTITUTE_OF_EDUCATION_OLD},
                                                                                              {PROGRAM_CODE_GOVERNMENTAL},
                                                                                              {PROGRAM_CODE_EMERGENCY_SERVICES},
                                                                                              {PROGRAM_CODE_INSTITUTIONAL},
                                                                                              {PROGRAM_CODE_SUMMIT_RE_INSTIT},
                                                                                              {PROGRAM_CODE_SUMMIT_PRIVATES_SCHOOL_OLD},
                                                                                              {PROGRAM_CODE_PACKAGE_MOD_NOT_APPLICABLE_OLD},
                                                                                              {PROGRAM_CODE_SERV_VOL_EMERG},
                                                                                              {PROGRAM_CODE_COMM_UNITY_OF_FAITH}}.Contains(pgrmCode)) Then
                 returnVal = True
             End If
             Return returnVal
         End Function
                     If (_oLobData.Attributes.Common.UserType.Equals(USER_TYPE_AGENT) = False) Then
                         pnlPolInfo.AddHelpItem(""Special Institutional Risk Rating Plan"", 1095, ""chkInstitutionalRisk"")
                     End If
                     .Visible = True
                     .Checked = _oLobData.Policy.Input(""PfMisc2"").Value.CL_EqualsYesAbbreviation()
                     If _isElitePac2015Applicable = False AndAlso _sPredState.Equals(STATE_CODE_PENNSYLVANNIA) Then
                         .ToolTip = ""Check box if Public & Institutional Property Rate Plan applies.""
                     End If
                 Else
                     .Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.43,PFPolicyInput.aspx,isInstituteRiskEligible,hidIsAutoWalkThruEligible,,,"                     If (_oLobData.Attributes.Common.UserType.Equals(USER_TYPE_AGENT) = False) Then
                         pnlPolInfo.AddHelpItem(""Special Institutional Risk Rating Plan"", 1095, ""chkInstitutionalRisk"")
                     End If
",rule-219,,function_type_rule,,,,
rule-219.44,PFPolicyInput.aspx,isInstituteRiskEligible,hidIsAutoWalkThruEligible,,,"                     If _isElitePac2015Applicable = False AndAlso _sPredState.Equals(STATE_CODE_PENNSYLVANNIA) Then
                         .ToolTip = ""Check box if Public & Institutional Property Rate Plan applies.""
                     End If
",rule-219,,function_type_rule,,,,
rule-219.45,PFPolicyInput.aspx,setchkCLASRated,hidIsAutoWalkThruEligible,,,"                 If _businessIncomeApply Then
                     .Checked = True
                     pnlClasRated.InitialClientVisibility = True
                 Else
                     If _oLobData.Attributes(""sPowPacClsRtdChk"") = ""visible"" Then
                         .Checked = True
                         pnlClasRated.InitialClientVisibility = True
                     Else
                         pnlClasRated.InitialClientVisibility = False
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.46,PFPolicyInput.aspx,setchkHSBRated,hidIsAutoWalkThruEligible,,,"                 If Trim(_oLobData.Attributes(""sPowPacHSBRtdChk"")) = ""visible"" Then
                     .Checked = True
                     pnlHSBRated.InitialClientVisibility = True
                 Else
                     pnlHSBRated.InitialClientVisibility = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.47,PFPolicyInput.aspx,setchkHSBOptout,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Attributes(""sPowPacOptOutChk"") = ""visible"" Then
                     chkHSBOptOut.Checked = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.48,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.49,PFPolicyInput.aspx,setddlPFPolBppCoins,hidIsAutoWalkThruEligible,,,"             If _isElitePac2015Applicable Then
                 pnlElitePac.Visible = True
                 SetControlsElitePacOptions()
             Else
                 pnlElitePac.Visible = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.50,PFPolicyInput.aspx,SetElitePacDropDown,hidIsAutoWalkThruEligible,,,"             If New HashSet(Of String)() From {{SIC_CODE_MOTELS}, {SIC_CODE_COUNTRY_INNS}, {SIC_CODE_HOTELS}, {SIC_CODE_BES_BREAKFAST_INNS},
                                               {SIC_CODE_TOURIST_ACCOMMODATIONS}, {SIC_CODE_HOTELS_ON_MEMBERSHIP_BASIS}}.Contains(
                                               _oCOData.Policy(""PwSlSicCode"").Value) Then
                 extensionOption = LobCO.BusinessRules.COElitePac.GetElitePacExtensionOptionValue(_oCOData.Policy.Fields(""CpProgram"").Value, LOB_CODE_PROPERTY,
                                                                             TRANSACTION_TYPE_NEW_BUSINESS)
             ElseIf _oCOData.Policy(""PwSlSicCode"").Value.Equals(SIC_CODE_HOTEL_RESORTS) Then
                 extensionOption = LobCO.BusinessRules.COElitePac.GetElitePacExtensionOptionValue(PROGRAM_CODE_HOTEL_EXCEPTION, LOB_CODE_PROPERTY, TRANSACTION_TYPE_NEW_BUSINESS)
             Else
                 extensionOption = LobCO.BusinessRules.COElitePac.GetElitePacExtensionOptionValue(_oCOData.Policy.Fields(""CpProgram"").Value, LOB_CODE_PROPERTY,
                                                                             TRANSACTION_TYPE_NEW_BUSINESS)
             End If
",rule-219,,function_type_rule,,,,
rule-219.51,PFPolicyInput.aspx,SetElitePacDropDown,hidIsAutoWalkThruEligible,,,"                 If New HashSet(Of String)() From {{PREDOMINANT_CAUSE_OF_LOSS.SPECIAL.GetHashCode.ToString},
                                                   {PREDOMINANT_CAUSE_OF_LOSS.SPECIAL_WITH_EQ.GetHashCode.ToString}}.Contains(
                                                   _oLobData.Policy.Input.Fields(""PfPolCol"").Value.Trim) = False Then
                     .Enabled = False
                     pnlElitePac.Style.Add(""Display"", ""none"")
                     pnlElitePac.DisplayModifiedIndicator = False
                 Else
                     pnlElitePac.DisplayModifiedIndicator = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.52,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.53,PFPolicyInput.aspx,setpnlGreenPac,hidIsAutoWalkThruEligible,,,"                 If .Input(""PFGreenPacIcAval"").Value.CL_EqualsYesAbbreviation() Then
                     pnlGreenPac.Visible = True
                     setddlGreenPacICLmt()
                     sethidGreenPacICOccur()
                     sethidGreenPacICAggr()
                     setddlGreenPacSCLmt()
                     sethidGreenPacSCOccur()
                     sethidGreenPacSCAggr()
                     If String.IsNullOrWhiteSpace(.Input(""PFGreenPacIcFlat"").Value).Equals(False) OrElse
                         String.IsNullOrWhiteSpace(.Input(""PFGreenPacScFlat"").Value).Equals(False) Then 
pnlGreenPac.Selected = True
                 Else
 
 End If
                     pnlGreenPac.Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.54,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.55,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.56,PFPolicyInput.aspx,setpnlGreenPac,hidIsAutoWalkThruEligible,,,"                     If String.IsNullOrWhiteSpace(.Input(""PFGreenPacIcFlat"").Value).Equals(False) OrElse
                         String.IsNullOrWhiteSpace(.Input(""PFGreenPacScFlat"").Value).Equals(False) Then 
pnlGreenPac.Selected = True
                 Else
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.57,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,hidIsAutoWalkThruEligible,,,"             If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.58,PFPolicyInput.aspx,setpnlPFCampground,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Policy.Input(""PfCamp"").Value = ""Y"" Then
                     .Selected = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.59,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"             If _isElitePacAllowed Then
                 If ((_oLobData.Attributes.Common.PredominantState = ""DC"" And (InStr(""03*05*07*08*11*42*"", PgmCode) > 0)) Or (InStr(notsummit, PgmCode) = 0)) Then
                     Select Case PgmCode
                         Case ""03"", ""06"", ""07"", ""11"", ""12"", ""14"", ""42""
                             FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                         Case ""19""
                             FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                         Case ""08""
                             FillElitePacDDL(""ELITEPAC19"", ""20"", False)
                         Case ""09""
                             FillElitePacDDL(""ELITEPAC20"", sRiskType, True)
                         Case ""13""
                             FillElitePacDDL(""ELITEPAC21"", ""22"", False)
                         Case ""21"", ""22""
                             FillElitePacDDL(""ELITEPAC22"", ""09"", False)
                         Case ""23"", ""25""
                             FillElitePacDDL(""ELITEPAC23"", ""06"", False)
                         Case ""05""
                             If (_oLobData.Attributes.Common.PredominantState = ""VA"") Then
                                 FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                             Else
                                 If (Poldate >= 108001) Then
                                     FillElitePacDDL(""ELITEPAC14"", ""02"", False)
                                 Else
                                     FillElitePacDDL(""ELITEPAC14"", sRiskType, True)
                                 End If
                             End If
                         Case ""10""
                             FillElitePacDDL(""ELITEPAC16"", sRiskType, True)
                         Case ""35""
                             If InStr(""MD*IA*IN*WI*MI*RI*OH*NJ*VA"", _oLobData.Attributes.Common.PredominantState) > 0 Then
                                 FillElitePacDDL(""ELITEPAC15"", sRiskType, True)
                             Else
                                 FillElitePacDDL(""ELITEPAC23"", """", False)
                             End If
                     End Select
                 Else
                     If PgmCode = ""17"" Or PgmCode = ""45"" Then
                         FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                     Else
                         FillElitePacDDL(""ELITEPAC23"", String.Empty, False)
                     End If
                 End If
                 If ((InStr(""32*38*35*37*39*34*31*33*10*40*36*25*26"", PgmCode) > 0) And (Poldate >= 105032)) Then
                     FillElitePacDDL(""PfEnhancement"", sRiskType, True)
                 End If
                 If (InStr(""21*22*23"", PgmCode) > 0 And (Poldate >= 106274)) _
                   And (_oLobData.Attributes.Common.PolicyInsuranceCompany = ""18"") Then
                     FillElitePacDDL(""PfEnhancement"", String.Empty, True)
                 End If
                 If ((_oLobData.Attributes.Common.PolicyTransactionType = ""NBQU"") Or (_oLobData.Attributes.Common.PolicyTransactionType = ""NBIS"")) Then
                     If (_oLobData.Attributes.Common.OneNDoneType = ""PG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""17"", True)
                     End If
                     If (_oLobData.Attributes.Common.OneNDoneType = ""MG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""23"", True)
                     End If
                 End If
                 If InStr(1, ""*41*"", _oLobData.Attributes.Common.PolicyProgramType) > 0 Then
                     FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                 End If
             ElseIf _isElitePacAllowed = False Then
                 ddlPFElite.Items.Clear()
                 ddlPFElite.Items.Add(""Not Applicable"")
                 ddlPFElite.Items(0).Selected = True
             End If
",rule-219,,function_type_rule,,,,
rule-219.60,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.61,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.62,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.63,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.64,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.65,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.66,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.67,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.68,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.69,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.70,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.71,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.72,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.73,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.74,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                             If (_oLobData.Attributes.Common.PredominantState = ""VA"") Then
                                 FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                             Else
                                 If (Poldate >= 108001) Then
                                     FillElitePacDDL(""ELITEPAC14"", ""02"", False)
                                 Else
                                     FillElitePacDDL(""ELITEPAC14"", sRiskType, True)
                                 End If
                             End If
",rule-219,,function_type_rule,,,,
rule-219.75,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.76,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.77,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                                 If (Poldate >= 108001) Then
                                     FillElitePacDDL(""ELITEPAC14"", ""02"", False)
                                 Else
                                     FillElitePacDDL(""ELITEPAC14"", sRiskType, True)
                                 End If
",rule-219,,function_type_rule,,,,
rule-219.78,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.79,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.80,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.81,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.82,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.83,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.84,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                             If InStr(""MD*IA*IN*WI*MI*RI*OH*NJ*VA"", _oLobData.Attributes.Common.PredominantState) > 0 Then
                                 FillElitePacDDL(""ELITEPAC15"", sRiskType, True)
                             Else
                                 FillElitePacDDL(""ELITEPAC23"", """", False)
                             End If
",rule-219,,function_type_rule,,,,
rule-219.85,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.86,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.87,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.88,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.89,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                     If PgmCode = ""17"" Or PgmCode = ""45"" Then
                         FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                     Else
                         FillElitePacDDL(""ELITEPAC23"", String.Empty, False)
                     End If
",rule-219,,function_type_rule,,,,
rule-219.90,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.91,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.92,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.93,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.94,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                 If ((InStr(""32*38*35*37*39*34*31*33*10*40*36*25*26"", PgmCode) > 0) And (Poldate >= 105032)) Then
                     FillElitePacDDL(""PfEnhancement"", sRiskType, True)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.95,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.96,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.97,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                 If (InStr(""21*22*23"", PgmCode) > 0 And (Poldate >= 106274)) _
                   And (_oLobData.Attributes.Common.PolicyInsuranceCompany = ""18"") Then
                     FillElitePacDDL(""PfEnhancement"", String.Empty, True)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.98,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.99,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.100,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                 If ((_oLobData.Attributes.Common.PolicyTransactionType = ""NBQU"") Or (_oLobData.Attributes.Common.PolicyTransactionType = ""NBIS"")) Then
                     If (_oLobData.Attributes.Common.OneNDoneType = ""PG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""17"", True)
                     End If
                     If (_oLobData.Attributes.Common.OneNDoneType = ""MG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""23"", True)
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.101,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.102,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.103,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                     If (_oLobData.Attributes.Common.OneNDoneType = ""MG"" And ddlPFElite.SelectedValue = String.Empty) Then
                         FillElitePacDDL(""ELITEPAC20"", ""23"", True)
                     End If
",rule-219,,function_type_rule,,,,
rule-219.104,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.105,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.106,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                 If InStr(1, ""*41*"", _oLobData.Attributes.Common.PolicyProgramType) > 0 Then
                     FillElitePacDDL(""ELITEPAC17"", ""02"", False)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.107,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.108,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.109,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"             If sVaElitePac1035.Trim <> """" Then
                 If sVaElitePac1035 = ""06"" Then
                     FillElitePacDDL(""ELITEPAC23"", ""06"", True)
                 End If
                 If sVaElitePac1035 = ""09"" Then
                     FillElitePacDDL(""ELITEPAC22"", ""09"", True)
                 End If
                 If sVaElitePac1035 = ""02"" Then
                     FillElitePacDDL(""ELITEPAC17"", ""02"", True)
                 End If
             End If
",rule-219,,function_type_rule,,,,
rule-219.110,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.111,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.112,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                 If sVaElitePac1035 = ""09"" Then
                     FillElitePacDDL(""ELITEPAC22"", ""09"", True)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.113,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.114,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.115,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"                 If sVaElitePac1035 = ""02"" Then
                     FillElitePacDDL(""ELITEPAC17"", ""02"", True)
                 End If
",rule-219,,function_type_rule,,,,
rule-219.116,PFPolicyInput.aspx,FillElitePacDDL,hidIsAutoWalkThruEligible,,,"             If sTable = ""PfEnhancement"" Then
                 oLookup = _oLobBus.GetListElitePacEnhanced(_oLobData.Attributes.Common.PredominantState, _oLobData.Attributes.Common.PolicyEffectiveDate)
             Else
                 oLookup = _oLobBus.GetListsElitePac(sTable)
             End If
",rule-219,,function_type_rule,,,,
rule-219.117,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.118,PFPolicyInput.aspx,setddlPFElite,hidIsAutoWalkThruEligible,,,"             If _oLobShared.PFVAExpansionApplyElitePAC(_oCOData, _oLobData) = True Then
                 ddlPFElite.Items(0).Selected = True
                 If ddlPFElite.Enabled = True Then
                     ddlPFElite.Enabled = False
                 End If
             End If
",rule-219,,function_type_rule,,,,
rule-219.119,PFPolicyInput.aspx,setpnlElite,hidIsAutoWalkThruEligible,,,"                 If _businessIncomeApply Then
                     .Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.120,PFPolicyInput.aspx,setpnlElite,hidIsAutoWalkThruEligible,,,"                 If ddlPFElite.SelectedValue = ""Not Applicable"" OrElse String.IsNullOrWhiteSpace(ddlPFElite.SelectedValue) Then
                     .Selected = False
                 Else
                     .Selected = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.121,PFPolicyInput.aspx,setpnlElite,hidIsAutoWalkThruEligible,,,"                 If _sProgCode.Equals(PROGRAM_CODE_SPECIAL_CONTRACTORS_OLD) AndAlso New HashSet(Of String)() From {{STATE_CODE_MASSACHUSETTS}, {STATE_CODE_RHODE_ISLAND}, {STATE_CODE_NEW_YORK}}.Contains(_oCOData.Attributes.Common.PredominantState) Then
                     .DisabledMessage = ""This coverage is already included""
                 End If
",rule-219,,function_type_rule,,,,
rule-219.122,PFPolicyInput.aspx,setpnlKeyEmployee,hidIsAutoWalkThruEligible,,,"                 If (New BusinessServices.LobPF.PFShared).IsKeyEmployeeCoverageAvailable(PgmCodeKeyEmp, Poldate) Then
                     setddlPfPfKeyEmplLmt()
                     .Selected = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.123,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.124,PFPolicyInput.aspx,setpnlKeyEmployee,hidIsAutoWalkThruEligible,,,"                 If _businessIncomeApply Then
                     .Visible = True
                     If String.IsNullOrWhiteSpace(txtPfKeyEmpl.Text) = False Then
                         .Selected = True
                     End If
                 Else
                     If String.IsNullOrWhiteSpace(txtPfKeyEmpl.Text) = False Then
                         .Selected = True
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.125,PFPolicyInput.aspx,setpnlKeyEmployee,hidIsAutoWalkThruEligible,,,"                     If String.IsNullOrWhiteSpace(txtPfKeyEmpl.Text) = False Then
                         .Selected = True
                     End If
",rule-219,,function_type_rule,,,,
rule-219.126,PFPolicyInput.aspx,setpnlClubProfessional,hidIsAutoWalkThruEligible,,,"                 If (_oCOData.Attributes.Common.PredominantState.Equals(Common.getStateCode(StateEnum.Illinois)) AndAlso Poldate >= CLUB_EFF_DATE AndAlso Poldate < ClubProffEffDate) = False Then
                     Dim PgmCodeClubProf As String = _oLobData.Policy.Input.Fields(""PfPgmCode"").Value
                     Dim PgmCodeCompare As New HashSet(Of String) From {{PROGRAM_CODE_HOTELS}, {PROGRAM_CODE_GOLF_FACILITIES_COUNTRY_CLUB}}
                     If PgmCodeCompare.Contains(PgmCodeClubProf) AndAlso (Poldate >= 114344) Then
                         setlddlPfClubProfLmt()
                     End If
                     If String.IsNullOrWhiteSpace(txtPfClubProf.Text) = False Then
                         .Selected = True
                     End If
                     .ContentType = StackingPanelItem.ContentTypes.SubContent
                     .PrimaryTitleText = ""Club Professional""
                 End If
",rule-219,,function_type_rule,,,,
rule-219.127,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.128,PFPolicyInput.aspx,setpnlClubProfessional,hidIsAutoWalkThruEligible,,,"                     If String.IsNullOrWhiteSpace(txtPfClubProf.Text) = False Then
                         .Selected = True
                     End If
",rule-219,,function_type_rule,,,,
rule-219.129,PFPolicyInput.aspx,setpnlPFVAPollution,hidIsAutoWalkThruEligible,,,"                 If elitepacEligibleCheck.Equals(False) Then
                     pnlPolOptCoverExten.AddHelpItem(""Virginia Pollution"", ""Coverage must be Non-Qual rated. Only available if Ordinance or Law is rated on the policy or if policy is Summit or other preferred product that automatically includes Ordinance or Law coverage."", ""pnlPFVAPollution"")
                 Else
                     pnlPolOptCoverExten.AddHelpItem(""Virginia Pollution"", ""Coverage must be Non-Qual rated. Only available if Ordinance or Law is rated on the policy or if policy has a Property ElitePac Extension Endorsement or SelectPac Property Extension Endorsement that automatically includes Ordinance or Law coverage."", ""pnlPFVAPollution"")
                 End If
",rule-219,,function_type_rule,,,,
rule-219.130,PFPolicyInput.aspx,setpnlCrisisResponse,hidIsAutoWalkThruEligible,,,"                 If .Fields(""PFCrisisResponse"").Value.CL_EqualsYesAbbreviation Then
                     pnlCrisisResponse.Visible = True
                     setddlCRBIEELmt()
                     sethidCRBIEELmtOccur()
                     sethidCRBIEELmtAggr()
                     settxtCRCICEtxt()
                     sethidCRCICLmtOccur()
                     sethidCRCICLmtAggr()
                     If (_businessIncomeApply AndAlso String.IsNullOrWhiteSpace(.Fields(""PFCrisisResponseBIEEOccLmt"").Value).Equals(False) OrElse
                                 String.IsNullOrWhiteSpace(txtCRCICEtxt.Text).Equals(False)) OrElse
                             (String.IsNullOrWhiteSpace(.Fields(""PFCrisisResponseBIEEOccLmt"").Value).Equals(False) OrElse
                                 String.IsNullOrWhiteSpace(txtCRCICEtxt.Text).Equals(False)) Then 
pnlCrisisResponse.Selected = True
                 Else
 
 End If
                     pnlCrisisResponse.Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.131,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.132,PFPolicyInput.aspx,settxtCRCICEtxt,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input.Fields(""PFCrisisResponseBIEEOccLmt"").Value.Trim <> String.Empty Then
                 If CInt(_oLobData.Policy.Input.Fields(""PFCrisisResponseBIEEOccLmt"").Value.Trim) < 100000 Then
                     sCELmt = ""$10,000 / $10,000""
                 End If
                 If CInt(_oLobData.Policy.Input.Fields(""PFCrisisResponseBIEEOccLmt"").Value) > 50000 Then
                     sCELmt = ""$25,000 / $25,000""
                 End If
             End If
",rule-219,,function_type_rule,,,,
rule-219.133,PFPolicyInput.aspx,settxtCRCICEtxt,hidIsAutoWalkThruEligible,,,"                 If CInt(_oLobData.Policy.Input.Fields(""PFCrisisResponseBIEEOccLmt"").Value) > 50000 Then
                     sCELmt = ""$25,000 / $25,000""
                 End If
",rule-219,,function_type_rule,,,,
rule-219.134,PFPolicyInput.aspx,setpnlCrisisResponse,hidIsAutoWalkThruEligible,,,"                     If (_businessIncomeApply AndAlso String.IsNullOrWhiteSpace(.Fields(""PFCrisisResponseBIEEOccLmt"").Value).Equals(False) OrElse
                                 String.IsNullOrWhiteSpace(txtCRCICEtxt.Text).Equals(False)) OrElse
                             (String.IsNullOrWhiteSpace(.Fields(""PFCrisisResponseBIEEOccLmt"").Value).Equals(False) OrElse
                                 String.IsNullOrWhiteSpace(txtCRCICEtxt.Text).Equals(False)) Then 
pnlCrisisResponse.Selected = True
                 Else
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.135,PFPolicyInput.aspx,setpnlFireDepartment,hidIsAutoWalkThruEligible,,,"                 If _oLobShared.checkISO2008(_sEffDate, _sPredState) Then
                     pnlFireDepartment.Visible = True
                     settxtPfPolFireDptLimit()
                     If _businessIncomeApply Then
                         .Visible = True
                     End If
                     If _oLobData.Policy.Input(""PfPolFireDptSrvcInd"").Value.CL_EqualsYesAbbreviation Then
                         .Selected = True
                     End If
                     .ToolTip = "" Select for Fire Dept Service Charge increased limits. $1,000 included automatically.""
                 Else
                     .Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.136,PFPolicyInput.aspx,setpnlFireDepartment,hidIsAutoWalkThruEligible,,,"                     If _businessIncomeApply Then
                         .Visible = True
                     End If
",rule-219,,function_type_rule,,,,
rule-219.137,PFPolicyInput.aspx,setpnlFireDepartment,hidIsAutoWalkThruEligible,,,"                     If _oLobData.Policy.Input(""PfPolFireDptSrvcInd"").Value.CL_EqualsYesAbbreviation Then
                         .Selected = True
                     End If
",rule-219,,function_type_rule,,,,
rule-219.138,PFPolicyInput.aspx,setpnlFireDepartment,hidIsAutoWalkThruEligible,,,"                 If _sPredState.Equals(Common.getStateCode(StateEnum.Arizona)) Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.139,PFPolicyInput.aspx,setpnlPayrollExpense,hidIsAutoWalkThruEligible,,,"                 If _bPFISO2008 Then
                     .Visible = True
                     setddlPayrollExp()
                     If _businessIncomeApply Then 
.Visible = True
 
 End If
                     .Selected = String.IsNullOrWhiteSpace(_oLobData.Policy.Input(""PfPolBincDiscPyrllExp"").Value).Equals(False)
                     .ToolTip = "" Check box if Business Income Discretionary Payroll Expense is requested""
                     .OnClientClick = ""chkPayrollExpense_Click""
                 Else
                     .Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.140,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.141,PFPolicyInput.aspx,setpnlPayrollExpense,hidIsAutoWalkThruEligible,,,"                     If _businessIncomeApply Then 
.Visible = True
 
 End If
",rule-219,,function_type_rule,,,,
rule-219.142,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,hidIsAutoWalkThruEligible,,,"                 If _bPFISO2008 Then
                     .Visible = True
                     setddlOrdPayRlLmtn()
                     If _businessIncomeApply Then
                         .Visible = True
                     End If
                     If String.IsNullOrWhiteSpace(_oLobData.Policy.Input(""PfPolBincOrdPayrll"").Value) = False Then
                         .Selected = True
                     End If
                     .ToolTip = "" Check box if Business Income Ordinary Payroll Limitation or Exclusion is requested""
                     .OnClientClick = ""chkOrdinaryPayRoll_OnClientClick""
                 Else
                     .Visible = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.143,PFPolicyInput.aspx,setddlOrdPayRlLmtn,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(FIELD_PFISO2012MULTISTATE).Value.CL_EqualsYesAbbreviation() Then
                 lddlOrdPayRlLmtn.Text = ""Business Income - Payroll Limitation Or Exclusion""
             Else
                 lddlOrdPayRlLmtn.Text = ""Business Income - Ordinary Payroll Limitation or Exclusion""
             End If
",rule-219,,function_type_rule,,,,
rule-219.144,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.145,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,hidIsAutoWalkThruEligible,,,"                     If _businessIncomeApply Then
                         .Visible = True
                     End If
",rule-219,,function_type_rule,,,,
rule-219.146,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,hidIsAutoWalkThruEligible,,,"                     If String.IsNullOrWhiteSpace(_oLobData.Policy.Input(""PfPolBincOrdPayrll"").Value) = False Then
                         .Selected = True
                     End If
",rule-219,,function_type_rule,,,,
rule-219.147,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Policy.Input(FIELD_PFISO2012MULTISTATE).Value.CL_EqualsYesAbbreviation() Then
                     .PrimaryTitleText = ""Business Income - Payroll Limitation Or Exclusion""
                     pnlPolOptCoverExten.AddHelpItem(""Payroll Limitation/Exclusion"", 888, ""ddlOrdPayRlLmtn"")
                 Else
                     .PrimaryTitleText = ""Business Income - Ordinary Payroll Limitation or Exclusion""
                 End If
",rule-219,,function_type_rule,,,,
rule-219.148,PFPolicyInput.aspx,SetddlPriorCarrier,hidIsAutoWalkThruEligible,,,"             If (_oCOData.Attributes.Common.View = ""Y"") Then
                 ViewMode = True
             End If
",rule-219,,function_type_rule,,,,
rule-219.149,PFPolicyInput.aspx,SetddlPriorCarrier,hidIsAutoWalkThruEligible,,,"                 If sLob.Trim = Lob.Fields(""LOB_CODE"").Trim Then
                     sPriorCarrier = Lob.Fields(""PREV_CARRIER_CD"").Trim
                     bLobExists = True
                     Exit For
                 End If
",rule-219,,function_type_rule,,,,
rule-219.150,PFPolicyInput.aspx,SetddlPriorCarrier,hidIsAutoWalkThruEligible,,,"             If Not bLobExists Or sPriorCarrier.Trim = """" Then
                 sPriorCarrier = _oCOData.Policy.Fields(""CoPriorCarrier"").Value.Trim
             End If
",rule-219,,function_type_rule,,,,
rule-219.151,PFPolicyInput.aspx,SetddlPriorCarrier,hidIsAutoWalkThruEligible,,,"                 If InStr(""*NBIS*NBQU*RCIS*RCQU*"", _oCOData.Attributes.Common.PolicyTransactionType) > 0 Then
                     .Validators.Required.Enabled = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.152,PFPolicyInput.aspx,SetddlPriorCarrier,hidIsAutoWalkThruEligible,,,"                 If InStr(""*REQU*REIS*PCNM*"", _oCOData.Attributes.Common.PolicyTransactionType) > 0 Then
                     If _oLobData.Policy.Input.Exists = False Then
                         .Validators.Required.Enabled = True
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.153,PFPolicyInput.aspx,SetddlItem,hidIsAutoWalkThruEligible,,,"                 If sItem.Trim = String.Empty Then
                     Exit For
                 Else
                     If Item.Value.Trim = sItem.Trim() Then
                         Item.Selected = True
                         Exit For
                     End If
                 End If
",rule-219,,function_type_rule,,,,
rule-219.154,PFPolicyInput.aspx,BuildStateList,hidIsAutoWalkThruEligible,,,"                     If _oLobData.States.Count > 0 Then
                         Dim oState As BusinessServices.LobPF.State
                         For Each oState In _oLobData.States
                             sPFState = oState.StateCode
                             oStatePanelItem = New ExpandCollapsePanelItem
                             CreateStatePanelItem(sPFState, oStatePanelItem, oState)
                             pnlStateItems.Items.Add(oStatePanelItem)
                         Next
                     End If
",rule-219,,function_type_rule,,,,
rule-219.155,PFPolicyInput.aspx,SethidIsAutoWalkThruEligible,hidIsAutoWalkThruEligible,,,"             If (_oLobData.Attributes.Common.UserType.Equals(USER_TYPE_AGENT) AndAlso _bDisableNav.Equals(False) AndAlso
                (Request.QueryString(""Action"") = ACTION_NEW AndAlso _oCOData.StatusRecords(statusPF).Exists.Equals(False)).Equals(False) AndAlso
                 _oShared.GetLobEnabledForDotNET(""ATWTPF"", _oCOData.Policy.Fields(""PwBusType"").Value.Trim)) AndAlso
                (_oLobData.Locations.Count > 0 AndAlso _ACORDImportWalkthruProperties.IsACORDImpWalkthruRequired.CL_EqualsYesAbbreviation).Equals(False) Then
                 hidIsAutoWalkThruEligible.Value = True.ToString()
             End If
",rule-219,,function_type_rule,,,,
rule-219.156,PFPolicyInput.aspx,SetPnlPolicyDeductible,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Policy.Input.Fields(""PfDedOvrds"").Value.Trim.CL_EqualsYesAbbreviation Then
                     .Visible = True
                 End If
",rule-219,,function_type_rule,,,,
rule-219.157,PFPolicyInput.aspx,BuildDeductibleElements,hidIsAutoWalkThruEligible,,,"             If sPolType = ""L"" Or sPolType = ""S"" Or sPolType = ""X"" Then
                 iIndex = -1
                 For i = 0 To 25
                     stxtBG1 = String.Empty
                     stxtBG2 = String.Empty
                     stxtBG3 = String.Empty
                     sBG1 = String.Empty
                     sBG2 = String.Empty
                     sBG3 = String.Empty
                     stxtBG1 = ""txtBG1"" & CType(i, String).Trim
                     stxtBG2 = ""txtBG2"" & CType(i, String).Trim
                     stxtBG3 = ""txtBG3"" & CType(i, String).Trim
                     sBG1 = dict(stxtBG1).Trim
                     sBG2 = dict(stxtBG2).Trim
                     sBG3 = dict(stxtBG3).Trim
                     If (sBG1 <> """" And sBG1 <> ""1.00"") Or (sBG2 <> """" And sBG2 <> ""1.00"") Or (sBG3 <> """" And sBG3 <> ""1.00"") Then
                         iIndex = i
                     End If
                 Next
                 If iIndex > -1 Then
                     stxtBG1 = ""txtBG1"" & CType(iIndex, String).Trim
                     stxtBG2 = ""txtBG2"" & CType(iIndex, String).Trim
                     stxtBG3 = ""txtBG3"" & CType(iIndex, String).Trim
                     _stxtPfPolBg1Ded = dict(stxtBG1).Trim
                     _stxtPfPolBg2Ded = dict(stxtBG2).Trim
                     _stxtPfPolOtherDed = dict(stxtBG3).Trim
                     _iSelectedIndex = iIndex
                 Else
                     _stxtPfPolBg1Ded = String.Empty
                     _stxtPfPolBg2Ded = String.Empty
                     _stxtPfPolOtherDed = String.Empty
                     _iSelectedIndex = 0
                 End If
             Else
                 iIndex = -1
                 For i = 26 To 41
                     stxtBG1 = String.Empty
                     stxtBG2 = String.Empty
                     stxtBG3 = String.Empty
                     sBG1 = String.Empty
                     sBG2 = String.Empty
                     sBG3 = String.Empty
                     stxtBG1 = ""txtBG1"" & CType(i, String).Trim
                     stxtBG2 = ""txtBG2"" & CType(i, String).Trim
                     stxtBG3 = ""txtBG3"" & CType(i, String).Trim
                     sBG1 = dict(stxtBG1).Trim
                     sBG2 = dict(stxtBG2).Trim
                     sBG3 = dict(stxtBG3).Trim
                     If (sBG1 <> """" And sBG1 <> ""1.00"") Or (sBG2 <> """" And sBG2 <> ""1.00"") Or (sBG3 <> """" And sBG3 <> ""1.00"") Then
                         iIndex = i
                     End If
                 Next
                 If iIndex > -1 Then
                     stxtBG1 = ""txtBG1"" & CType(iIndex, String).Trim
                     stxtBG2 = ""txtBG2"" & CType(iIndex, String).Trim
                     stxtBG3 = ""txtBG3"" & CType(iIndex, String).Trim
                     _stxtPfPolBg1Ded = dict(stxtBG1).Trim
                     _stxtPfPolBg2Ded = dict(stxtBG2).Trim
                     _stxtPfPolOtherDed = dict(stxtBG3).Trim
                     If iIndex <> 0 Then
                         _iSelectedIndex = iIndex - 26
                     End If
                 Else
                     _stxtPfPolBg1Ded = String.Empty
                     _stxtPfPolBg2Ded = String.Empty
                     _stxtPfPolOtherDed = String.Empty
                     _iSelectedIndex = 0
                 End If
             End If
",rule-219,,function_type_rule,,,,
rule-219.158,PFPolicyInput.aspx,BuildDeductibleElements,hidIsAutoWalkThruEligible,,,"                 If iIndex > -1 Then
                     stxtBG1 = ""txtBG1"" & CType(iIndex, String).Trim
                     stxtBG2 = ""txtBG2"" & CType(iIndex, String).Trim
                     stxtBG3 = ""txtBG3"" & CType(iIndex, String).Trim
                     _stxtPfPolBg1Ded = dict(stxtBG1).Trim
                     _stxtPfPolBg2Ded = dict(stxtBG2).Trim
                     _stxtPfPolOtherDed = dict(stxtBG3).Trim
                     _iSelectedIndex = iIndex
                 Else
                     _stxtPfPolBg1Ded = String.Empty
                     _stxtPfPolBg2Ded = String.Empty
                     _stxtPfPolOtherDed = String.Empty
                     _iSelectedIndex = 0
                 End If
",rule-219,,function_type_rule,,,,
rule-219.159,PFPolicyInput.aspx,Bg,hidIsAutoWalkThruEligible,,,"                     If (sBG1 <> """" And sBG1 <> ""1.00"") Or (sBG2 <> """" And sBG2 <> ""1.00"") Or (sBG3 <> """" And sBG3 <> ""1.00"") Then
                         iIndex = i
                     End If
",rule-219,,function_type_rule,,,,
rule-219.160,PFPolicyInput.aspx,Bg,hidIsAutoWalkThruEligible,,,"                 If iIndex > -1 Then
                     stxtBG1 = ""txtBG1"" & CType(iIndex, String).Trim
                     stxtBG2 = ""txtBG2"" & CType(iIndex, String).Trim
                     stxtBG3 = ""txtBG3"" & CType(iIndex, String).Trim
                     _stxtPfPolBg1Ded = dict(stxtBG1).Trim
                     _stxtPfPolBg2Ded = dict(stxtBG2).Trim
                     _stxtPfPolOtherDed = dict(stxtBG3).Trim
                     If iIndex <> 0 Then
                         _iSelectedIndex = iIndex - 26
                     End If
                 Else
                     _stxtPfPolBg1Ded = String.Empty
                     _stxtPfPolBg2Ded = String.Empty
                     _stxtPfPolOtherDed = String.Empty
                     _iSelectedIndex = 0
                 End If
",rule-219,,function_type_rule,,,,
rule-219.161,PFPolicyInput.aspx,setchkPfPolTypeL,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Policy.Input(""PfPolType"").Value = ""L"" Then
                     .Checked = True
                 ElseIf (_oLobData.Policy.Input(""PfPolType"").Value = ""S"") _
                 Or (_oLobData.Policy.Input(""PfPolType"").Value = ""X"") Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.162,PFPolicyInput.aspx,setchkPfPolTypeX,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Policy.Input(""PfPolType"").Value = ""X"" Then
                     .Checked = True
                 ElseIf (_oLobData.Policy.Input(""PfPolType"").Value = ""S"") _
                     Or (_oLobData.Policy.Input(""PfPolType"").Value = ""L"") Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.163,PFPolicyInput.aspx,setchkPfPolTypeS,hidIsAutoWalkThruEligible,,,"                 If _oLobData.Policy.Input(""PfPolType"").Value = ""S"" Then
                     .Checked = True
                 ElseIf (_oLobData.Policy.Input(""PfPolType"").Value = ""L"") _
                 Or (_oLobData.Policy.Input(""PfPolType"").Value = ""X"") Then
                     .Enabled = False
                 End If
",rule-219,,function_type_rule,,,,
rule-219.164,PFPolicyInput.aspx,setddlPolDed,hidIsAutoWalkThruEligible,,,"                     If (_oLobData.Policy.Input(""PfPolType"").Value = ""L"" _
                         Or _oLobData.Policy.Input(""PfPolType"").Value = ""S"" _
                         Or _oLobData.Policy.Input(""PfPolType"").Value = ""X"") Then
                         .DataSource = oLookup.Item(""ISLAND_LARGEDED"").DataSource
                     Else
                         .DataSource = oLookup.Item(""ISLAND_DED"").DataSource
                     End If
",rule-219,,function_type_rule,,,,
rule-219.165,PFPolicyInput.aspx,Bg,hidIsAutoWalkThruEligible,,,"                     If _stxtPfPolBg1Ded = String.Empty AndAlso
         Private Function Bg() As Boolean
             Return (txtBG126.Text.Trim <> """" AndAlso txtBG126.Text.Trim <> ""1.00"") OrElse
                         (txtBG226.Text.Trim <> """" AndAlso txtBG226.Text.Trim <> ""1.00"")
         End Function
                        _stxtPfPolBg2Ded = String.Empty AndAlso
                         _stxtPfPolOtherDed = String.Empty Then
                     Else
                         .SelectedIndex = _iSelectedIndex
                     End If
",rule-219,,function_type_rule,,,,
rule-219.166,PFPolicyInput.aspx,SetUpCheckMarksInPanels,hidIsAutoWalkThruEligible,,,"             If pnlPolDeduct.Visible = True Then
                 If _oLobData.Policy.Input(""PfPolType"").Value.Trim <> """" Then
                     pnlPolDeduct.DisplayModifiedIndicator = True
                 Else
                     pnlPolDeduct.DisplayModifiedIndicator = False
                 End If
             End If
",rule-219,,function_type_rule,,,,
rule-219.167,PFPolicyInput.aspx,SetUpCheckMarksInPanels,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim <> """" Then
                 pnlPolSpecialRating.DisplayModifiedIndicator = True
             Else
                 pnlPolSpecialRating.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.168,PFPolicyInput.aspx,SetUpCheckMarksInPanels,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfPPClasRated"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPOptOut"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPOptOut"").Value.Trim <> """" Then
                 pnlPolSystemPowerPac.DisplayModifiedIndicator = True
             Else
                 pnlPolSystemPowerPac.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.169,PFPolicyInput.aspx,SetUpCheckMarksInPanels,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfPPSplLim"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPClsRtCmbnInd"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPClsRtDrctInd"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPClsRtIndrctInd"").Value.Trim <> """" Then
                 pnlClasRated.DisplayModifiedIndicator = True
             Else
                 pnlClasRated.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.170,PFPolicyInput.aspx,ValidateHsbPremiumEquipmentBreakdownBusinessIncomeForEmpty,hidIsAutoWalkThruEligible,,,"             If ValidateHsbPremiumEquipmentBreakdownBusinessIncomeForEmpty() OrElse
         Private Function ValidateHsbPremiumEquipmentBreakdownBusinessIncomeForEmpty() As Boolean
             Return _oLobData.Policy.Input(""PfPPHSBPrem"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPHSBEqpBdLmt"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPHSBBincLmt"").Value.Trim <> """"
         End Function
                ValidateExtraAndExpeditingExpenseHazardousSubstanceForEmpty() OrElse
                ValidateSpoilageAndServiceInterruption() Then
                 pnlHSBRated.DisplayModifiedIndicator = True
             Else
                 pnlHSBRated.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.171,PFPolicyInput.aspx,ValidateTeesAndGreensPolCoverageAndEmployeeAggregateLimitAndCampgroundExtension,hidIsAutoWalkThruEligible,,,"             If ValidateTeesAndGreensPolCoverageAndEmployeeAggregateLimitAndCampgroundExtension() OrElse
         Private Function ValidateTeesAndGreensPolCoverageAndEmployeeAggregateLimitAndCampgroundExtension() As Boolean
             Return _oLobData.Policy.Input(""PfEnhClassCode"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPolCov"").Value.Trim = ""Y"" OrElse
                _oLobData.Policy.Input(""PfKeyEmpl"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfCamp"").Value.Trim = ""Y""
         End Function
                ValidateNoOfClubProfAndVirginiaPollutionCovgAndIncreasedCostAndBusinessIncomeOccurrenceLmt() OrElse
                ValidateGreenPacIcFlatAndPolFireDptSrvcIndAndPolBincDiscPyrllExp() OrElse
                ValidatePolBincOrdPayrllForEmpty() Then
                 pnlPolOptCoverExten.DisplayModifiedIndicator = True
             Else
                 pnlPolOptCoverExten.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.172,PFPolicyInput.aspx,ValidatePolBincOrdPayrllForEmpty,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim <> """" Then
                 pnlPolBlanket1.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket1.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.173,PFPolicyInput.aspx,ValidatePolBincOrdPayrllForEmpty,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim <> """" Then
                 pnlPolBlanket2.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket2.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.174,PFPolicyInput.aspx,ValidatePolBincOrdPayrllForEmpty,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim <> """" Then
                 pnlPolBlanket3.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket3.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.175,PFPolicyInput.aspx,ValidatePolBincOrdPayrllForEmpty,hidIsAutoWalkThruEligible,,,"             If _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim <> """" Then
                 pnlPolBlanket4.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket4.DisplayModifiedIndicator = False
             End If
",rule-219,,function_type_rule,,,,
rule-219.176,PFPolicyInput.aspx,SetODPopups,hidIsAutoWalkThruEligible,,,"             If _oCOData.Attributes(""ShowPFLightManuMsg"") = ""Y"" Then
                 notificationSection.Add(Notification.NotificationType.Informational, ""Additional information is available for this policy.  Please click on details link. <a class='ODPopupDetails' onclick='ODPopupDetails_OnClick();'>Details</a>"")
             End If
",rule-219,,function_type_rule,,,,
rule-219.177,PFPolicyInput.aspx,IsDebrisCoverageSelected,hidIsAutoWalkThruEligible,,,"             If debrisRemovalCount > 0 Then
                 isDebrisCovSelected = True
             End If
",rule-219,,function_type_rule,,,,
rule-219.178,PFPolicyInput.aspx,RegisterJavaScriptVariablesDedover,hidIsAutoWalkThruEligible,,,"             If sPolType = ""L"" Or sPolType = ""S"" Or sPolType = ""X"" Then
                 bLargeDed = True
             End If
",rule-219,,function_type_rule,,,,
rule-219.179,PFPolicyInput.aspx,SetACORDScriptVariables,hidIsAutoWalkThruEligible,,,"                 If (isACORDImpWalkthruRequired.CL_EqualsYesAbbreviation AndAlso isACORDImpPostbackValidationFailed.Equals(False) AndAlso
                     isACORDImpWalkthruRunning.CL_EqualsNoAbbreviation AndAlso isACORDImpWalkthruPostponed.CL_EqualsNoAbbreviation) Then
                     .Add(ACORD_IMPORT_WALKTHRU_START_PAGE,
                          GetACORDImportWalkthruURL(_oLobData.Locations, _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS,
                                                                                                    Common.getLineOfBusiness(LineOfBusiness.Property))).Fields(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value))
                 End If
",rule-219,,function_type_rule,,,,
rule-219.180,PFPolicyInput.aspx,SetACORDImpWalkthruButtons,hidIsAutoWalkThruEligible,,,"             If isACORDWalkthruRequired AndAlso _ACORDImportWalkthruProperties.IsACORDImpWalkthruRunning.CL_EqualsYesAbbreviation() Then                 btnCancel.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 btnExitToDashboard.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 navback.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 navForward.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 btnRate.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 btnRate2.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 quoteSummary.Enabled = False
                 accountInfoBar.Enabled = False
                 mainTabBar.Enabled = False
                 lobTabBar.Enabled = False
                 With pageHeader
                     .Enabled = False
                     .DisplayUtilityLinks = False
                 End With
                 btnDelete.Visible = False
                 btnWalkThru.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 btnACORDImportSaveExitWalkthru.Text = TEXT_SAVE_AND_EXIT_WALKTHRU
                 btnACORDImportSaveContinueWalkthru.Text = TEXT_CONTINUE_WALKTHRU
                 btnACORDImportCancelExitWalkthru.Text = TEXT_CANCEL_AND_EXIT_WALKTHRU
             ElseIf isACORDWalkthruRequired AndAlso _ACORDImportWalkthruProperties.IsACORDImpWalkthruRunning.CL_EqualsNoAbbreviation() Then
                 btnRate.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 btnRate2.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 btnWalkThru.Style.Add(STYLE_KEY_DISPLAY, STYLE_KEY_VALUE_NONE)
                 SetACORDImpWalkthroughButtons()
             Else
                 SetACORDImpWalkthroughButtons()
             End If
",rule-219,,function_type_rule,,,,
rule-219.181,PFPolicyInput.aspx,SetupDefaultExtensionOption,hidIsAutoWalkThruEligible,,,"             If Not IsPostBack Then
                    _defaultPfPresenter = New PropertyPolicyPresenter(Me)
                    Dim cachedFields = _defaultPfPresenter.InitializeView()
                     Session(""DefaultPfExtensionOptionFields"") = cachedFields
                     Session(""DefaultPfExtensionOptionFieldsBGColor"") = PrefillFieldsToHighlight
                 Session.SetVariables()
             Else
                    RestorePrefillBackgroundColorScriptOnPostback(""DefaultPfExtensionOptionFieldsBGColor"")
                    InitializePrefillBackgroundColorScript()
             End If
",rule-219,,function_type_rule,,,,
rule-219.182,PFPolicyInput.aspx,RegisterScriptVariables,hidIsAutoWalkThruEligible,,,"                         If _oLobData.Locations.Count = 0 Then
                             Dim oneNDone As String = _oLobData.Attributes.Common.OneNDoneType
                             Dim oneNDoneType As New HashSet(Of String) From {{ONE_N_DONE_CIVIC_ORGANIZATIONS},
                                                                              {ONE_N_DONE_CIRCUIT_TRAINING},
                                                                              {ONE_N_DONE_DANCE_STUDIOS},
                                                                              {ONE_N_DONE_LIGHT_MANUFACTURING},
                                                                              {ONE_N_DONE_LESSOR_RISK}}
                             If (oneNDoneType.Contains(oneNDone)) AndAlso (_oLobData.Attributes(""FirstTimeInO&DPF"").CL_EqualsNoAbbreviation() = False) AndAlso
                                (oneNDone.CL_EqualsYesAbbreviation()) Then
                                 If (oneNDone.Equals(ONE_N_DONE_LIGHT_MANUFACTURING)) AndAlso (String.IsNullOrWhiteSpace(_oLobData.Policy.Input.Fields(""PfMisc4"").Value)) Then
                                     _oLobData.Policy.Input.Fields(""PfMisc4"").Value = ""20""
                                 End If
                             End If
                         End If
",rule-219,,function_type_rule,,,,
rule-220,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,            If bTriggerAutomaticWalkThru = False Then,rule-220,,direct_rule,,,,
rule-220.1,PFPolicyInput.aspx,btnExitToDashboard_Click,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(DASHBOARD_URL, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                 _oLobData.Commit()
                 _oCOData.Commit()
                 Redirect(DASHBOARD_URL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.2,PFPolicyInput.aspx,btnExitToDashboard_Click,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(DASHBOARD_URL, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                 _oLobData.Commit()
                 _oCOData.Commit()
                 Redirect(DASHBOARD_URL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.3,PFPolicyInput.aspx,btnRate_Click,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(RATING_URL, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oCOData.SetSession()
                 _oLobData.SetSession()
                 Redirect(RATING_URL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.4,PFPolicyInput.aspx,btnRate_Click,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(RATING_URL, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oCOData.SetSession()
                 _oLobData.SetSession()
                 Redirect(RATING_URL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.5,PFPolicyInput.aspx,navback_Click,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(Me.PreviousPageURL, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 _oCOData.SetSession()
                 If Me.PreviousPageURL.IndexOf(LOB_CRIME_URLS, StringComparison.CurrentCultureIgnoreCase) > -1 AndAlso _oLobData.Policy.Input.Fields(""PFElitePacPFAddCF"").Value.Trim.Equals(CRIME_ELITEPAC_DELETED) Then
                     Page.Redirect(PROPERTY_POLICYSUMMARY)
                 End If
                 Page.Redirect(Me.PreviousPageURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.6,PFPolicyInput.aspx,navback_Click,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(Me.PreviousPageURL, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 _oCOData.SetSession()
                 If Me.PreviousPageURL.IndexOf(LOB_CRIME_URLS, StringComparison.CurrentCultureIgnoreCase) > -1 AndAlso _oLobData.Policy.Input.Fields(""PFElitePacPFAddCF"").Value.Trim.Equals(CRIME_ELITEPAC_DELETED) Then
                     Page.Redirect(PROPERTY_POLICYSUMMARY)
                 End If
                 Page.Redirect(Me.PreviousPageURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.7,PFPolicyInput.aspx,navForward_Click,hidIsAutoWalkThruEligible,,,"            If SaveData(ACTION_SAVE_NAV_AWAY) Then
                 Dim redirectionURL As String = PROPERTY_LOCATION_INPUT
                 Dim locationLevel As String = POLICY_SCREEN
                 SetNavigationPageStatusComplete()
                 Dim locationKey As String = _oLobShared.GetNextNavigation(locationLevel, oNavigationList)
                 redirectionURL = String.Format(""{0}?LocState={1}&LocNum={2}&BldgNum={3}"", redirectionURL, locationKey.CL_Mid(3, 2), locationKey.CL_Mid(5, 3),
                                                locationKey.CL_Mid(8, 3))
                 CheckForAutomaticWalkthru(redirectionURL, True)
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 Dim LobStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS,
                                                                                                  Common.getLineOfBusiness(LineOfBusiness.Property)))
                 If LobStatusRecord(PROPERTY_ACORD_IMPORT_SOURCE_LOB).Value.Equals(ACORD_SOURCE) AndAlso
                     LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value.Equals(STATUS_COMPLETED) = False AndAlso
                     _oLobData.Attributes(IS_ACORD_IMPORT_WALKTHRU_RUNNING).CL_EqualsYesAbbreviation() Then
                     LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value = PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOCATION
                     SetLocationWalkthruLevelRecord()
                 End If
                 _oLobData.Commit()
                 _oCOData.Commit()
                 Redirect(redirectionURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.8,PFPolicyInput.aspx,navForward_Click,hidIsAutoWalkThruEligible,,,"            If SaveData(ACTION_SAVE_NAV_AWAY) Then
                 Dim redirectionURL As String = PROPERTY_LOCATION_INPUT
                 Dim locationLevel As String = POLICY_SCREEN
                 SetNavigationPageStatusComplete()
                 Dim locationKey As String = _oLobShared.GetNextNavigation(locationLevel, oNavigationList)
                 redirectionURL = String.Format(""{0}?LocState={1}&LocNum={2}&BldgNum={3}"", redirectionURL, locationKey.CL_Mid(3, 2), locationKey.CL_Mid(5, 3),
                                                locationKey.CL_Mid(8, 3))
                 CheckForAutomaticWalkthru(redirectionURL, True)
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 Dim LobStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS,
                                                                                                  Common.getLineOfBusiness(LineOfBusiness.Property)))
                 If LobStatusRecord(PROPERTY_ACORD_IMPORT_SOURCE_LOB).Value.Equals(ACORD_SOURCE) AndAlso
                     LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value.Equals(STATUS_COMPLETED) = False AndAlso
                     _oLobData.Attributes(IS_ACORD_IMPORT_WALKTHRU_RUNNING).CL_EqualsYesAbbreviation() Then
                     LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value = PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOCATION
                     SetLocationWalkthruLevelRecord()
                 End If
                 _oLobData.Commit()
                 _oCOData.Commit()
                 Redirect(redirectionURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.9,PFPolicyInput.aspx,btnACORDImportSaveExitWalkthru_ItemClick,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(pageHeader.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 Dim LobSelected As String = Common.getLineOfBusiness(LOB.LineOfBusiness.Property)
                 Dim LobStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS, LobSelected))
                 LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value = PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOCATION
                 LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value = ACORD_IMPORT_WALKTHRU_ATTEMPTED
                 SetLocationWalkthruLevelRecord()
                 With _oLobData
                     .Attributes(IS_ACORD_IMPORT_WALKTHRU_RUNNING) = NO_ABBREVIATED
                     .Attributes(IS_ACORD_IMPORT_WALKTHRU_POSTPONDED) = YES_ABBREVIATED
                     .Commit()
                 End With
                 _oCOData.Commit()
                 Page.Redirect(PROPERTY_POLICY_SUMMARY)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.10,PFPolicyInput.aspx,btnACORDImportSaveExitWalkthru_ItemClick,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(pageHeader.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 Dim LobSelected As String = Common.getLineOfBusiness(LOB.LineOfBusiness.Property)
                 Dim LobStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS, LobSelected))
                 LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value = PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOCATION
                 LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value = ACORD_IMPORT_WALKTHRU_ATTEMPTED
                 SetLocationWalkthruLevelRecord()
                 With _oLobData
                     .Attributes(IS_ACORD_IMPORT_WALKTHRU_RUNNING) = NO_ABBREVIATED
                     .Attributes(IS_ACORD_IMPORT_WALKTHRU_POSTPONDED) = YES_ABBREVIATED
                     .Commit()
                 End With
                 _oCOData.Commit()
                 Page.Redirect(PROPERTY_POLICY_SUMMARY)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.11,PFPolicyInput.aspx,mainTabBar_ItemClick,hidIsAutoWalkThruEligible,,,"            If SaveData(ACTION_SAVE_NAV_AWAY) Then
                 CheckForAutomaticWalkthru(Item.NavigateURL, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 _oLobData.Attributes.Collections(LOB_NAVIGATION) = Nothing
                 _oLobData.SetSession()
                 _oCOData.SetSession()
                 Page.Redirect(Item.NavigateURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.12,PFPolicyInput.aspx,mainTabBar_ItemClick,hidIsAutoWalkThruEligible,,,"            If SaveData(ACTION_SAVE_NAV_AWAY) Then
                 CheckForAutomaticWalkthru(Item.NavigateURL, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 _oLobData.Attributes.Collections(LOB_NAVIGATION) = Nothing
                 _oLobData.SetSession()
                 _oCOData.SetSession()
                 Page.Redirect(Item.NavigateURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.13,PFPolicyInput.aspx,quoteSummary_LinkClick,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(quoteSummary.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 If quoteSummary.NavigatingAwayFromLOB Then
                     SetACORDImpAttributes(_oLobData.Attributes)
                     _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                     _oLobData.SetSession()
                 End If
                 _oCOData.SetSession()
                 If quoteSummary.NavigateUrl.IndexOf(LOB_CRIME_URLS, StringComparison.CurrentCultureIgnoreCase) > -1 AndAlso _oLobData.Policy.Input.Fields(""PFElitePacPFAddCF"").Value.Trim.Equals(CRIME_ELITEPAC_DELETED) Then
                     Page.Redirect(PROPERTY_POLICYSUMMARY)
                 End If
                 Page.Redirect(quoteSummary.NavigateUrl)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.14,PFPolicyInput.aspx,quoteSummary_LinkClick,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(quoteSummary.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 If quoteSummary.NavigatingAwayFromLOB Then
                     SetACORDImpAttributes(_oLobData.Attributes)
                     _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                     _oLobData.SetSession()
                 End If
                 _oCOData.SetSession()
                 If quoteSummary.NavigateUrl.IndexOf(LOB_CRIME_URLS, StringComparison.CurrentCultureIgnoreCase) > -1 AndAlso _oLobData.Policy.Input.Fields(""PFElitePacPFAddCF"").Value.Trim.Equals(CRIME_ELITEPAC_DELETED) Then
                     Page.Redirect(PROPERTY_POLICYSUMMARY)
                 End If
                 Page.Redirect(quoteSummary.NavigateUrl)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.15,PFPolicyInput.aspx,pageHeader_LinkClick,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(pageHeader.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oCOData.Attributes(""UdocReturnPath"") = APPLICATION_ROOT & ""LobPF/PFPolicyInput.aspx""
                 _oCOData.Commit()
                 _oCOData.SetSession()
                 Page.Redirect(pageHeader.NavigateUrl)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-220.16,PFPolicyInput.aspx,pageHeader_LinkClick,hidIsAutoWalkThruEligible,,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(pageHeader.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oCOData.Attributes(""UdocReturnPath"") = APPLICATION_ROOT & ""LobPF/PFPolicyInput.aspx""
                 _oCOData.Commit()
                 _oCOData.SetSession()
                 Page.Redirect(pageHeader.NavigateUrl)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-220,,Function_Invocation_Rule,,,,
rule-221,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,"                If _bAutoWalkThruFieldChanged = True And hidIsAutoWalkThruEligible.Value = True.ToString() Then
                     _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = ""True""
                 End If
","rule-220,rule-221",,variable_type_rule,,,,
rule-221.1,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,"            If bTriggerAutomaticWalkThru = False Then                 If _bAutoWalkThruFieldChanged = True And hidIsAutoWalkThruEligible.Value = True.ToString() Then
                     _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = ""True""
                 End If
             Else
                 If (_bAutoWalkThruFieldChanged = True Or _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = ""True"") _
                 And hidIsAutoWalkThruEligible.Value = True.ToString() Then
                     _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = """"
                     TriggerAutomaticWalkThru(sIntendedURL)
                 End If
             End If
",rule-221,,,,,,
,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,"            Else
",rule-220,,,,,,
rule-222,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,"                If (_bAutoWalkThruFieldChanged = True Or _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = ""True"") _
                 And hidIsAutoWalkThruEligible.Value = True.ToString() Then
                     _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = """"
                     TriggerAutomaticWalkThru(sIntendedURL)
                 End If
","rule-220,rule-222",,variable_type_rule,,,,
rule-222.1,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,"            If bTriggerAutomaticWalkThru = False Then                 If _bAutoWalkThruFieldChanged = True And hidIsAutoWalkThruEligible.Value = True.ToString() Then
                     _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = ""True""
                 End If
             Else
                 If (_bAutoWalkThruFieldChanged = True Or _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = ""True"") _
                 And hidIsAutoWalkThruEligible.Value = True.ToString() Then
                     _oLobData.Attributes(""PFPolicyAutoWalkThruReq"") = """"
                     TriggerAutomaticWalkThru(sIntendedURL)
                 End If
             End If
",rule-222,,,,,,
,PFPolicyInput.aspx,CheckForAutomaticWalkthru,hidIsAutoWalkThruEligible,,,"            End If
",rule-220,,,,,,
rule-223,PFPolicyInput.aspx,SetPShowNewEq1,lEQBlanket1, BLANKET GROUP #1,1.)Optional Earthquake:,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket1.Visible = True
                 chkPfBlktFullEq1.Visible = True
                 ddlPfBlktSubLimEq1.Visible = True
             Else
                 lEQBlanket1.Visible = False
                 chkPfBlktFullEq1.Visible = False
                 ddlPfBlktSubLimEq1.Visible = False
             End If
",rule-223,,direct_rule,,,,
,PFPolicyInput.aspx,,lEQBlanket1, BLANKET GROUP #1,1.)Optional Earthquake:,SetPShowNewEq1(),rule-223,,,,,,
,PFPolicyInput.aspx,,lEQBlanket1, BLANKET GROUP #1,1.)Optional Earthquake:,SetupPagePresentationBlanlet(),rule-223,,,,,,
,PFPolicyInput.aspx,,lEQBlanket1, BLANKET GROUP #1,1.)Optional Earthquake:,SetupPropertyPolicyInputControl(),rule-223,,,,,,
rule-224,PFPolicyInput.aspx,SetPShowNewEq2,lEQBlanket2, BLANKET GROUP #2,1.)Optional Earthquake:,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket2.Visible = True
                 chkPfBlktFullEq2.Visible = True
                 ddlPfBlktSubLimEq2.Visible = True
             Else
                 lEQBlanket2.Visible = False
                 chkPfBlktFullEq2.Visible = False
                 ddlPfBlktSubLimEq2.Visible = False
             End If
",rule-224,,direct_rule,,,,
,PFPolicyInput.aspx,,lEQBlanket2, BLANKET GROUP #2,1.)Optional Earthquake:,SetPShowNewEq2(),rule-224,,,,,,
,PFPolicyInput.aspx,,lEQBlanket2, BLANKET GROUP #2,1.)Optional Earthquake:,SetupPagePresentationBlanlet(),rule-224,,,,,,
,PFPolicyInput.aspx,,lEQBlanket2, BLANKET GROUP #2,1.)Optional Earthquake:,SetupPropertyPolicyInputControl(),rule-224,,,,,,
rule-225,PFPolicyInput.aspx,SetPShowNewEq3,lEQBlanket3, BLANKET GROUP #3,1.)Optional Earthquake:,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket3.Visible = True
                 chkPfBlktFullEq3.Visible = True
                 ddlPfBlktSubLimEq3.Visible = True
             Else
                 lEQBlanket3.Visible = False
                 chkPfBlktFullEq3.Visible = False
                 ddlPfBlktSubLimEq3.Visible = False
             End If
",rule-225,,direct_rule,,,,
,PFPolicyInput.aspx,,lEQBlanket3, BLANKET GROUP #3,1.)Optional Earthquake:,SetPShowNewEq3(),rule-225,,,,,,
,PFPolicyInput.aspx,,lEQBlanket3, BLANKET GROUP #3,1.)Optional Earthquake:,SetupPagePresentationBlanlet(),rule-225,,,,,,
,PFPolicyInput.aspx,,lEQBlanket3, BLANKET GROUP #3,1.)Optional Earthquake:,SetupPropertyPolicyInputControl(),rule-225,,,,,,
rule-226,PFPolicyInput.aspx,SetPShowNewEq4,lEQBlanket4, BLANKET GROUP #4,1.)Optional Earthquake:,"SetupPagePresentationBlanlet():            _bShowNewEq = _oLobBusPolBlkt.UseNewEarthquake(_oLobData.Attributes.Common.PolicyEffectiveDate, _sPredState)
             If _bShowNewEq = True Then
                 lEQBlanket4.Visible = True
                 chkPfBlktFullEq4.Visible = True
                 ddlPfBlktSubLimEq4.Visible = True
             Else
                 lEQBlanket4.Visible = False
                 chkPfBlktFullEq4.Visible = False
                 ddlPfBlktSubLimEq4.Visible = False
             End If
",rule-226,,direct_rule,,,,
,PFPolicyInput.aspx,,lEQBlanket4, BLANKET GROUP #4,1.)Optional Earthquake:,SetPShowNewEq4(),rule-226,,,,,,
,PFPolicyInput.aspx,,lEQBlanket4, BLANKET GROUP #4,1.)Optional Earthquake:,SetupPagePresentationBlanlet(),rule-226,,,,,,
,PFPolicyInput.aspx,,lEQBlanket4, BLANKET GROUP #4,1.)Optional Earthquake:,SetupPropertyPolicyInputControl(),rule-226,,,,,,
rule-227,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlClasRated, SYSTEMS POWER PAC COVERAGE,,"            If _oLobData.Policy.Input(""PfPPSplLim"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPClsRtCmbnInd"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPClsRtDrctInd"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPClsRtIndrctInd"").Value.Trim <> """" Then
                 pnlClasRated.DisplayModifiedIndicator = True
             Else
                 pnlClasRated.DisplayModifiedIndicator = False
             End If
",rule-227,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlClasRated, SYSTEMS POWER PAC COVERAGE,,SetUpCheckMarksInPanels(),rule-227,,,,,,
rule-228,PFPolicyInput.aspx,setpnlClubProfessional,pnlClubProfessional,Optional Coverages,,"setpnlClubProfessional():                Const CLUB_EFF_DATE As Integer = 114344
 setpnlClubProfessional():                Dim Poldate As Integer = GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate)
                 If (_oCOData.Attributes.Common.PredominantState.Equals(Common.getStateCode(StateEnum.Illinois)) AndAlso Poldate >= CLUB_EFF_DATE AndAlso Poldate < ClubProffEffDate) = False Then
                     Dim PgmCodeClubProf As String = _oLobData.Policy.Input.Fields(""PfPgmCode"").Value
                     Dim PgmCodeCompare As New HashSet(Of String) From {{PROGRAM_CODE_HOTELS}, {PROGRAM_CODE_GOLF_FACILITIES_COUNTRY_CLUB}}
",rule-228,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlClubProfessional,Optional Coverages,,setpnlClubProfessional(),rule-228,,,,,,
,PFPolicyInput.aspx,,pnlClubProfessional,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-228,,,,,,
,PFPolicyInput.aspx,,pnlClubProfessional,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-228,,,,,,
rule-229,PFPolicyInput.aspx,setpnlClubProfessional,pnlClubProfessional,Optional Coverages,,"setpnlClubProfessional():                Dim Poldate As Integer = GrgJul(_oLobData.Attributes.Common.PolicyEffectiveDate)
                     If PgmCodeCompare.Contains(PgmCodeClubProf) AndAlso (Poldate >= 114344) Then
                         setlddlPfClubProfLmt()
                     End If
","rule-228,rule-229",,direct_rule,,,,
rule-230,PFPolicyInput.aspx,setpnlClubProfessional,pnlClubProfessional,Optional Coverages,,"                    If String.IsNullOrWhiteSpace(txtPfClubProf.Text) = False Then
                         .Selected = True
                     End If
","rule-228,rule-230",,direct_rule,,,,
,PFPolicyInput.aspx,setpnlClubProfessional,pnlClubProfessional,Optional Coverages,,"                    .ContentType = StackingPanelItem.ContentTypes.SubContent
                     .PrimaryTitleText = ""Club Professional""
                 End If
",rule-228,,,,,,
rule-231,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,pnlElite,Optional Coverages,,"SetControlsOptionalCoverageExtensions():            Dim elitepacEligibleCheck As Boolean = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
             If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-231,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-231,,,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-231,,,,,,
rule-232,PFPolicyInput.aspx,setpnlElite,pnlElite,Optional Coverages,,"Class_Variable:        Private _businessIncomeApply As Boolean = False
 SetupPagePresentation():            _businessIncomeApply = _isElitePac2015Applicable = False AndAlso newCopCov AndAlso                                     (_oCOData.Attributes.Common.PolicyProgramType.Equals(PROGRAM_CODE_SENIOR_LIVING) OrElse                                      _oCOData.Attributes.Common.PolicySIC.Equals(SIC_CODE_ASSISTED_LIVING_FACILITIES)) SetupPagePresentation():            Dim newCopCov As Boolean = applicationShared.SupportIsInEffect(COP_EFFECTIVE, Date.ParseExact(_sEffDate, DATE_FORMAT_MMDDYY, Nothing))
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                 If _businessIncomeApply Then
                     .Visible = False
                 End If
",rule-232,,variable_type_rule,,,,
rule-232.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,pnlElite,Optional Coverages,,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-232,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-232,,,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-232,,,,,,
rule-233,PFPolicyInput.aspx,setpnlElite,pnlElite,Optional Coverages,,"                If ddlPFElite.SelectedValue = ""Not Applicable"" OrElse String.IsNullOrWhiteSpace(ddlPFElite.SelectedValue) Then
                     .Selected = False
                 Else
                     .Selected = True
                 End If
",rule-233,,direct_rule,,,,
rule-233.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,pnlElite,Optional Coverages,,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-233,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-233,,,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-233,,,,,,
rule-234,PFPolicyInput.aspx,setpnlElite,pnlElite,Optional Coverages,,"Class_Variable:        Private _sProgCode As String = String.Empty
 SetupPagePresentation():                _sProgCode = .PolicyProgramType
                 If _sProgCode.Equals(PROGRAM_CODE_SPECIAL_CONTRACTORS_OLD) AndAlso New HashSet(Of String)() From {{STATE_CODE_MASSACHUSETTS}, {STATE_CODE_RHODE_ISLAND}, {STATE_CODE_NEW_YORK}}.Contains(_oCOData.Attributes.Common.PredominantState) Then
                     .DisabledMessage = ""This coverage is already included""
                 End If
",rule-234,,direct_rule,,,,
rule-234.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,pnlElite,Optional Coverages,,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-234,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-234,,,,,,
,PFPolicyInput.aspx,,pnlElite,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-234,,,,,,
rule-235,PFPolicyInput.aspx,SetupPagePresentation,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
             If _isElitePac2015Applicable Then
                 pnlElitePac.Visible = True
                 SetControlsElitePacOptions()
             Else
                 pnlElitePac.Visible = False
             End If
",rule-235,,variable_type_rule,,,,
rule-235.1,PFPolicyInput.aspx,Page_Load,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If Not IsPostBack Then
                 oCODataOld = New SIGI.CLAS.BusinessServices.LobCO.PolicyData(_sQtPolNum, _sInstanceId, BasePolicyData.LoadType.Default, BasePolicyData.DataGroup.Old)
                 _sAction = Request.QueryString(""Action"")
                 Select Case _sAction
                     Case ACTION_NEW, ACTION_WALK_THRU_DONE
                         PolicyWriting.UI.Utility.LoadCommonAttributes(_sQtPolNum, _sInstanceId, Me.User.UserID.ToString, Session, LOB_CODE_PROPERTY)
                         _oLobData = _oLobBus.LoadData(_sQtPolNum, _sInstanceId, _oCOData, _sAction, _oValidationResults)
                         HiddenPfPreviousElitepacValue.Value = _oLobData.Policy.Input.Fields(""PFElitePac2015"").Value.Trim
                         Const ACORD_WALKTHRU_REQUIRED As String = ""ACORDWalkthruRequired""
                         With _oLobData
                             .Attributes.Common.WalkThruInd = If(.Attributes(ACORD_WALKTHRU_REQUIRED) IsNot Nothing AndAlso
                                                            .Attributes(ACORD_WALKTHRU_REQUIRED).CL_EqualsYesAbbreviation, String.Empty, .Attributes.Common.WalkThruInd)
                         End With
                         If _oLobShared.PFLocationExist(_oCOData) = False Then 
Page.Redirect(String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicySummary.aspx""))
 
 End If
                         Dim policyEffectiveDate As Date = Date.ParseExact(_oLobData.Attributes.Common.PolicyEffectiveDate, DATE_FORMAT_MMDDYY, Nothing)
                         Dim appShared As New BusinessServices.Shared.ApplicationShared
                         Dim isMarginClauseEffective As Boolean = appShared.SupportIsInEffect(PROPERTY_ISO, policyEffectiveDate)
                         With _oLobData.Policy
                             If isMarginClauseEffective Then
                                 .Input(""PFIsoLossCostApply"").Value = YES_ABBREVIATED
                             Else
                                 .Input(""PFIsoLossCostApply"").Value = NO_ABBREVIATED
                             End If
                         End With
                         SetElitePacEligibilityIndicator(_oLobData.Policy.Input, _oCOData.Attributes)
                         SetISO2012Indicator(_oLobData.Attributes.Common.PolicyEffectiveDate, _oLobData.Attributes.Common.PredominantState.Trim, _oLobData.Policy.Input)
                         _navDict = _oLobShared.GetLOBNAvagation(_oCOData, _oLobData)
                         Dim lobAttributes As BusinessServices.LobPF.Attributes = _oLobData.Attributes
                         _oLobData.Attributes.Collections(""LOBNAVAGATION"") = _navDict
                         _bInputComplete = _oLobShared.SetCompleteFlagsBIC(_oCOData, _oLobData, _oCOData.StatusRecords(String.Concat(""STATUS"", Common.getLineOfBusiness(LOB.LineOfBusiness.Property))))
                         _bDisableNav = False
                         If _sAction = ACTION_WALK_THRU_DONE Then
                             _oValidationResults = TryCast(Session(""PF_ERRORS""), ErrorCollection)
                             If _oValidationResults IsNot Nothing Then
                                 If _oValidationResults.ErrorCount > 0 Then
                                     _oLobData.Attributes(""StillInWalkthru"") = YES_ABBREVIATED
                                     AddErrorsToPage(_oValidationResults)
                                     _bDisableNav = True
                                 Else
                                     WalkthruSuccess()
                                 End If
                             Else
                                 WalkthruSuccess()
                             End If
                         Else
                             If Session(""PF_ERRORS"") Is Nothing Then
                                 _oValidationResults = New ErrorCollection()
                                 Session(""PF_ERRORS"") = _oValidationResults
                             Else
                                 _oValidationResults = CType(Session(""PF_ERRORS""), ErrorCollection)
                                 If _oValidationResults.ErrorCount > 0 Then
                                     AddErrorsToPage(_oValidationResults)
                                 Else
                                     _oValidationResults.ClearAllErrors()
                                 End If
                             End If
                             _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                         End If
                         If (lobAttributes.Common.OneNDoneInd).CL_EqualsYesAbbreviation() Then
                             If (lobAttributes(""LOBAddMode"")).CL_EqualsYesAbbreviation() OrElse
                                 (lobAttributes.Common.WalkThruInd).CL_EqualsYesAbbreviation() Then
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oLobData.SetSession()
                                 _oCOData.SetSession()
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 Page.Redirect(String.Format(""{0}{1}?Type=OneNDone&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                             End If
                         ElseIf Not Trim(_sAction) = ACTION_WALK_THRU_DONE AndAlso _oLobData.Locations.Count > 0 Then         'If walkthru done, then dont run this code. otherwise it will go in endless loop of walkthru
                             If lobAttributes.Common.WalkThruInd.Trim.CL_EqualsYesAbbreviation() OrElse
                                 lobAttributes.Common.WalkThruInd.Trim.Equals(WALKTHRU_TYPE_INCOMPLETE) Then
                                 _oLobData.Commit()
                                 _oCOData.Commit()
                                 lobAttributes.Common.WalkThruStartPage = String.Concat(APPLICATION_ROOT, ""LobPF/PFPolicyInput.aspx"")
                                 _oCOData.SetSession()
                                 _oLobData.SetSession()
                                 If (lobAttributes.Common.WalkThruInd.Trim).CL_EqualsYesAbbreviation() Then
                                     Page.Redirect(String.Format(""{0}{1}?Type=LOB&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 Else
                                     Page.Redirect(String.Format(""{0}{1}?Type=Q&ALL=Y&LEVEL=P"", APPLICATION_ROOT, walkThruBicUrl))
                                 End If
                             End If
                         End If
                         _oLobBus.PowerPacRates(_oLobData)
                         SetupPagePresentation()
                         If _oLobData.Locations.Count = 0 Then
                             Dim oneNDone As String = _oLobData.Attributes.Common.OneNDoneType
                             Dim oneNDoneType As New HashSet(Of String) From {{ONE_N_DONE_CIVIC_ORGANIZATIONS},
                                                                              {ONE_N_DONE_CIRCUIT_TRAINING},
                                                                              {ONE_N_DONE_DANCE_STUDIOS},
                                                                              {ONE_N_DONE_LIGHT_MANUFACTURING},
                                                                              {ONE_N_DONE_LESSOR_RISK}}
                             If (oneNDoneType.Contains(oneNDone)) AndAlso (_oLobData.Attributes(""FirstTimeInO&DPF"").CL_EqualsNoAbbreviation() = False) AndAlso
                                (oneNDone.CL_EqualsYesAbbreviation()) Then
                                 If (oneNDone.Equals(ONE_N_DONE_LIGHT_MANUFACTURING)) AndAlso (String.IsNullOrWhiteSpace(_oLobData.Policy.Input.Fields(""PfMisc4"").Value)) Then
                                     _oLobData.Policy.Input.Fields(""PfMisc4"").Value = ""20""
                                 End If
                             End If
                         End If
                 End Select
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.2,PFPolicyInput.aspx,btnDelete_Click,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If oValidationResults.ErrorCount > 0 Then
                 AddErrorsToPage(oValidationResults)
                 _oLobData = New LobPF.PolicyData(_sQtPolNum, _sInstanceId)
                 SetupPagePresentation()
             Else
                 Dim sNextPage As String = APPLICATION_ROOT & ""Common/ProductInfo/ProductInfoInput.aspx""
                 Page.Redirect(sNextPage)
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.3,PFPolicyInput.aspx,btnExitToDashboard_Click,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(DASHBOARD_URL, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                 _oLobData.Commit()
                 _oCOData.Commit()
                 Redirect(DASHBOARD_URL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.4,PFPolicyInput.aspx,btnRate_Click,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(RATING_URL, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oCOData.SetSession()
                 _oLobData.SetSession()
                 Redirect(RATING_URL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.5,PFPolicyInput.aspx,btnWalkThru_Click,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then                 SetNavigationPageStatusComplete()
                 _navDict = CType(_oLobData.Attributes.Collections(UCase(""LOBNAVAGATION"")), Dictionary(Of String, String))
                 _oLobShared.SetNextNavigation(""PL"", ""C"", _navDict)
                 _oLobData.Attributes.Collections(UCase(""LOBNAVAGATION"")) = _navDict
                 If _oLobData.Attributes.Common.WalkThruStartPage.Trim = String.Empty Then
                     _oLobData.Attributes.Common.WalkThruStartPage = APPLICATION_ROOT & ""LobPF/PFPolicyInput.aspx""
                 End If
                 _oLobData.Commit()
                 _oLobData.SetSession()
                 _oCOData.Commit()
                 _oCOData.SetSession()
                 Session.SetVariables()
                 Page.Redirect(sUrl)
             Else
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.6,PFPolicyInput.aspx,navback_Click,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then                 CheckForAutomaticWalkthru(Me.PreviousPageURL, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 _oCOData.SetSession()
                 If Me.PreviousPageURL.IndexOf(LOB_CRIME_URLS, StringComparison.CurrentCultureIgnoreCase) > -1 AndAlso _oLobData.Policy.Input.Fields(""PFElitePacPFAddCF"").Value.Trim.Equals(CRIME_ELITEPAC_DELETED) Then
                     Page.Redirect(PROPERTY_POLICYSUMMARY)
                 End If
                 Page.Redirect(Me.PreviousPageURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.7,PFPolicyInput.aspx,navForward_Click,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If SaveData(ACTION_SAVE_NAV_AWAY) Then
                 Dim redirectionURL As String = PROPERTY_LOCATION_INPUT
                 Dim locationLevel As String = POLICY_SCREEN
                 SetNavigationPageStatusComplete()
                 Dim locationKey As String = _oLobShared.GetNextNavigation(locationLevel, oNavigationList)
                 redirectionURL = String.Format(""{0}?LocState={1}&LocNum={2}&BldgNum={3}"", redirectionURL, locationKey.CL_Mid(3, 2), locationKey.CL_Mid(5, 3),
                                                locationKey.CL_Mid(8, 3))
                 CheckForAutomaticWalkthru(redirectionURL, True)
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 Dim LobStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS,
                                                                                                  Common.getLineOfBusiness(LineOfBusiness.Property)))
                 If LobStatusRecord(PROPERTY_ACORD_IMPORT_SOURCE_LOB).Value.Equals(ACORD_SOURCE) AndAlso
                     LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value.Equals(STATUS_COMPLETED) = False AndAlso
                     _oLobData.Attributes(IS_ACORD_IMPORT_WALKTHRU_RUNNING).CL_EqualsYesAbbreviation() Then
                     LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value = PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOCATION
                     SetLocationWalkthruLevelRecord()
                 End If
                 _oLobData.Commit()
                 _oCOData.Commit()
                 Redirect(redirectionURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.8,PFPolicyInput.aspx,btnACORDImportSaveExitWalkthru_ItemClick,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(pageHeader.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 Dim LobSelected As String = Common.getLineOfBusiness(LOB.LineOfBusiness.Property)
                 Dim LobStatusRecord As LobCO.StatusRecord = _oCOData.StatusRecords(String.Concat(LobCO.Shared.Constants.STATUS, LobSelected))
                 LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOB).Value = PROPERTY_ACORD_IMPORT_WALKTHRU_LEVEL_LOCATION
                 LobStatusRecord(PROPERTY_ACORD_IMPORT_WALKTHRU_STATUS_LOB).Value = ACORD_IMPORT_WALKTHRU_ATTEMPTED
                 SetLocationWalkthruLevelRecord()
                 With _oLobData
                     .Attributes(IS_ACORD_IMPORT_WALKTHRU_RUNNING) = NO_ABBREVIATED
                     .Attributes(IS_ACORD_IMPORT_WALKTHRU_POSTPONDED) = YES_ABBREVIATED
                     .Commit()
                 End With
                 _oCOData.Commit()
                 Page.Redirect(PROPERTY_POLICY_SUMMARY)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.9,PFPolicyInput.aspx,mainTabBar_ItemClick,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If SaveData(ACTION_SAVE_NAV_AWAY) Then
                 CheckForAutomaticWalkthru(Item.NavigateURL, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 _oLobData.Attributes.Collections(LOB_NAVIGATION) = Nothing
                 _oLobData.SetSession()
                 _oCOData.SetSession()
                 Page.Redirect(Item.NavigateURL)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.10,PFPolicyInput.aspx,quoteSummary_LinkClick,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(quoteSummary.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 _oLobData.Attributes.Common.WalkThruStartPage = String.Empty
                 If quoteSummary.NavigatingAwayFromLOB Then
                     SetACORDImpAttributes(_oLobData.Attributes)
                     _oLobData.Attributes.Collections(""LOBNAVAGATION"") = Nothing
                     _oLobData.SetSession()
                 End If
                 _oCOData.SetSession()
                 If quoteSummary.NavigateUrl.IndexOf(LOB_CRIME_URLS, StringComparison.CurrentCultureIgnoreCase) > -1 AndAlso _oLobData.Policy.Input.Fields(""PFElitePacPFAddCF"").Value.Trim.Equals(CRIME_ELITEPAC_DELETED) Then
                     Page.Redirect(PROPERTY_POLICYSUMMARY)
                 End If
                 Page.Redirect(quoteSummary.NavigateUrl)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-235.11,PFPolicyInput.aspx,pageHeader_LinkClick,pnlElitePac, SYSTEMS POWER PAC COVERAGE,,"            If bSaveDataSuccess Then
                 CheckForAutomaticWalkthru(pageHeader.NavigateUrl, True)
                 SetNavigationPageStatusComplete()
                 SetACORDImpAttributes(_oLobData.Attributes)
                 _oLobData.Attributes.Common.WalkThruStartPage = """"
                 _oCOData.Attributes(""UdocReturnPath"") = APPLICATION_ROOT & ""LobPF/PFPolicyInput.aspx""
                 _oCOData.Commit()
                 _oCOData.SetSession()
                 Page.Redirect(pageHeader.NavigateUrl)
             Else
                 CheckForAutomaticWalkthru(String.Empty, False)
                 SetupPagePresentation()
                 _oValidationResults.ClearAllErrors()
                 _oCOData.SetSession()
                 _oLobData.SetSession()
             End If
",rule-235,,Function_Invocation_Rule,,,,
rule-236,PFPolicyInput.aspx,setpnlFireDepartment,pnlFireDepartment,Optional Coverages,,"                If _oLobShared.checkISO2008(_sEffDate, _sPredState) Then
                     pnlFireDepartment.Visible = True
                     settxtPfPolFireDptLimit()
",rule-236,,function_type_rule,,,,PFShared-1276
,PFPolicyInput.aspx,,pnlFireDepartment,Optional Coverages,,setpnlFireDepartment(),rule-236,,,,,,
,PFPolicyInput.aspx,,pnlFireDepartment,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-236,,,,,,
,PFPolicyInput.aspx,,pnlFireDepartment,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-236,,,,,,
rule-237,PFPolicyInput.aspx,setpnlFireDepartment,pnlFireDepartment,Optional Coverages,,"Class_Variable:        Private _businessIncomeApply As Boolean = False
 SetupPagePresentation():            _businessIncomeApply = _isElitePac2015Applicable = False AndAlso newCopCov AndAlso                                     (_oCOData.Attributes.Common.PolicyProgramType.Equals(PROGRAM_CODE_SENIOR_LIVING) OrElse                                      _oCOData.Attributes.Common.PolicySIC.Equals(SIC_CODE_ASSISTED_LIVING_FACILITIES)) SetupPagePresentation():            Dim newCopCov As Boolean = applicationShared.SupportIsInEffect(COP_EFFECTIVE, Date.ParseExact(_sEffDate, DATE_FORMAT_MMDDYY, Nothing))
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                     If _businessIncomeApply Then
                         .Visible = True
                     End If
","rule-236,rule-237",,variable_type_rule,,,,
rule-238,PFPolicyInput.aspx,setpnlFireDepartment,pnlFireDepartment,Optional Coverages,,"                    If _oLobData.Policy.Input(""PfPolFireDptSrvcInd"").Value.CL_EqualsYesAbbreviation Then
                         .Selected = True
                     End If
","rule-236,rule-238",,,,,,
,PFPolicyInput.aspx,setpnlFireDepartment,pnlFireDepartment,Optional Coverages,,"                    .ToolTip = "" Select for Fire Dept Service Charge increased limits. $1,000 included automatically.""
                 Else
                     .Visible = False
                 End If
",rule-236,,,,,,
rule-239,PFPolicyInput.aspx,setpnlFireDepartment,pnlFireDepartment,Optional Coverages,,"Class_Variable:        Private _sPredState As String = String.Empty
 SetupPagePresentation():                _sPredState = .PredominantState
                 If _sPredState.Equals(Common.getStateCode(StateEnum.Arizona)) Then
                     .Enabled = False
                 End If
",rule-239,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlFireDepartment,Optional Coverages,,setpnlFireDepartment(),rule-239,,,,,,
,PFPolicyInput.aspx,,pnlFireDepartment,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-239,,,,,,
,PFPolicyInput.aspx,,pnlFireDepartment,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-239,,,,,,
rule-240,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlHSBRated, SYSTEMS POWER PAC COVERAGE,,"            If ValidateHsbPremiumEquipmentBreakdownBusinessIncomeForEmpty() OrElse
                ValidateExtraAndExpeditingExpenseHazardousSubstanceForEmpty() OrElse
                ValidateSpoilageAndServiceInterruption() Then
                 pnlHSBRated.DisplayModifiedIndicator = True
             Else
                 pnlHSBRated.DisplayModifiedIndicator = False
             End If
",rule-240,,function_type_rule,,,,
,PFPolicyInput.aspx,,pnlHSBRated, SYSTEMS POWER PAC COVERAGE,,SetUpCheckMarksInPanels(),rule-240,,,,,,
rule-241,PFPolicyInput.aspx,SetpnlDedOptions,pnlHSBSpecEquipExc, HSB Rated Details,,"SetupPagePresentationHSBRated():                _sPolPowPacInd = ""A""
                 If _sPolPowPacInd = ""A"" Then
                     .Expanded = True
                 Else
                     .Expanded = False
                 End If
",rule-241,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlHSBSpecEquipExc, HSB Rated Details,,SetpnlDedOptions(),rule-241,,,,,,
,PFPolicyInput.aspx,,pnlHSBSpecEquipExc, HSB Rated Details,,SetupPagePresentationHSBRated(),rule-241,,,,,,
,PFPolicyInput.aspx,,pnlHSBSpecEquipExc, HSB Rated Details,,SetupPropertyPolicyInputControl(),rule-241,,,,,,
rule-242,PFPolicyInput.aspx,setpnlKeyEmployee,pnlKeyEmployee,Optional Coverages,,"                If (New BusinessServices.LobPF.PFShared).IsKeyEmployeeCoverageAvailable(PgmCodeKeyEmp, Poldate) Then
                     setddlPfPfKeyEmplLmt()
                     .Selected = False
                 End If
",rule-242,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlKeyEmployee,Optional Coverages,,setpnlKeyEmployee(),rule-242,,,,,,
,PFPolicyInput.aspx,,pnlKeyEmployee,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-242,,,,,,
,PFPolicyInput.aspx,,pnlKeyEmployee,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-242,,,,,,
rule-243,PFPolicyInput.aspx,setpnlKeyEmployee,pnlKeyEmployee,Optional Coverages,,"Class_Variable:        Private _businessIncomeApply As Boolean = False
 SetupPagePresentation():            _businessIncomeApply = _isElitePac2015Applicable = False AndAlso newCopCov AndAlso                                     (_oCOData.Attributes.Common.PolicyProgramType.Equals(PROGRAM_CODE_SENIOR_LIVING) OrElse                                      _oCOData.Attributes.Common.PolicySIC.Equals(SIC_CODE_ASSISTED_LIVING_FACILITIES)) SetupPagePresentation():            Dim newCopCov As Boolean = applicationShared.SupportIsInEffect(COP_EFFECTIVE, Date.ParseExact(_sEffDate, DATE_FORMAT_MMDDYY, Nothing))
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                 If _businessIncomeApply Then
                     .Visible = True
",rule-243,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlKeyEmployee,Optional Coverages,,setpnlKeyEmployee(),rule-243,,,,,,
,PFPolicyInput.aspx,,pnlKeyEmployee,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-243,,,,,,
,PFPolicyInput.aspx,,pnlKeyEmployee,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-243,,,,,,
rule-244,PFPolicyInput.aspx,setpnlKeyEmployee,pnlKeyEmployee,Optional Coverages,,"                    If String.IsNullOrWhiteSpace(txtPfKeyEmpl.Text) = False Then
                         .Selected = True
                     End If
","rule-243,rule-244",,direct_rule,,,,
,PFPolicyInput.aspx,setpnlKeyEmployee,pnlKeyEmployee,Optional Coverages,,"                Else
",rule-243,,,,,,
rule-245,PFPolicyInput.aspx,setpnlKeyEmployee,pnlKeyEmployee,Optional Coverages,,"                    If String.IsNullOrWhiteSpace(txtPfKeyEmpl.Text) = False Then
                         .Selected = True
                     End If
","rule-243,rule-245",,direct_rule,,,,
,PFPolicyInput.aspx,setpnlKeyEmployee,pnlKeyEmployee,Optional Coverages,,"                End If
",rule-243,,,,,,
rule-246,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,pnlOrdinaryPayRoll,Optional Coverages,,"Class_Variable:        Private _bPFISO2008 As Boolean = False
 SetupPagePresentation():            _bPFISO2008 = _oLobShared.checkISO2008(_sEffDate, _sPredState)
                 If _bPFISO2008 Then
                     .Visible = True
                     setddlOrdPayRlLmtn()
",rule-246,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlOrdinaryPayRoll,Optional Coverages,,setpnlOrdinaryPayRoll(),rule-246,,,,,,
,PFPolicyInput.aspx,,pnlOrdinaryPayRoll,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-246,,,,,,
,PFPolicyInput.aspx,,pnlOrdinaryPayRoll,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-246,,,,,,
rule-247,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,pnlOrdinaryPayRoll,Optional Coverages,,"Class_Variable:        Private _businessIncomeApply As Boolean = False
 SetupPagePresentation():            _businessIncomeApply = _isElitePac2015Applicable = False AndAlso newCopCov AndAlso                                     (_oCOData.Attributes.Common.PolicyProgramType.Equals(PROGRAM_CODE_SENIOR_LIVING) OrElse                                      _oCOData.Attributes.Common.PolicySIC.Equals(SIC_CODE_ASSISTED_LIVING_FACILITIES)) SetupPagePresentation():            Dim newCopCov As Boolean = applicationShared.SupportIsInEffect(COP_EFFECTIVE, Date.ParseExact(_sEffDate, DATE_FORMAT_MMDDYY, Nothing))
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                     If _businessIncomeApply Then
                         .Visible = True
                     End If
","rule-246,rule-247",,variable_type_rule,,,,
rule-248,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,pnlOrdinaryPayRoll,Optional Coverages,,"                    If String.IsNullOrWhiteSpace(_oLobData.Policy.Input(""PfPolBincOrdPayrll"").Value) = False Then
                         .Selected = True
                     End If
","rule-246,rule-248",,,,,,
,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,pnlOrdinaryPayRoll,Optional Coverages,,"                    .ToolTip = "" Check box if Business Income Ordinary Payroll Limitation or Exclusion is requested""
                     .OnClientClick = ""chkOrdinaryPayRoll_OnClientClick""
                 Else
                     .Visible = False
                 End If
",rule-246,,,,,,
rule-249,PFPolicyInput.aspx,setpnlOrdinaryPayRoll,pnlOrdinaryPayRoll,Optional Coverages,,"                If _oLobData.Policy.Input(FIELD_PFISO2012MULTISTATE).Value.CL_EqualsYesAbbreviation() Then
                     .PrimaryTitleText = ""Business Income - Payroll Limitation Or Exclusion""
                     pnlPolOptCoverExten.AddHelpItem(""Payroll Limitation/Exclusion"", 888, ""ddlOrdPayRlLmtn"")
                 Else
                     .PrimaryTitleText = ""Business Income - Ordinary Payroll Limitation or Exclusion""
                 End If
",rule-249,,,,,,
,PFPolicyInput.aspx,,pnlOrdinaryPayRoll,Optional Coverages,,setpnlOrdinaryPayRoll(),rule-249,,,,,,
,PFPolicyInput.aspx,,pnlOrdinaryPayRoll,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-249,,,,,,
,PFPolicyInput.aspx,,pnlOrdinaryPayRoll,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-249,,,,,,
rule-250,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,pnlPFCampground,Optional Coverages,,"SetControlsOptionalCoverageExtensions():            Dim elitepacEligibleCheck As Boolean = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
             If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-250,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlPFCampground,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-250,,,,,,
,PFPolicyInput.aspx,,pnlPFCampground,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-250,,,,,,
rule-251,PFPolicyInput.aspx,setpnlPFCampground,pnlPFCampground,Optional Coverages,,"                If _oLobData.Policy.Input(""PfCamp"").Value = ""Y"" Then
                     .Selected = True
                 End If
",rule-251,,direct_rule,,,,
rule-251.1,PFPolicyInput.aspx,SetControlsOptionalCoverageExtensions,pnlPFCampground,Optional Coverages,,"            If elitepacEligibleCheck.Equals(False) Then
                 setpnlPFCampground()
                 setpnlElite()
             Else
                 pnlPFCampground.Visible = False
                 pnlElite.Visible = False
             End If
",rule-251,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,pnlPFCampground,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-251,,,,,,
,PFPolicyInput.aspx,,pnlPFCampground,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-251,,,,,,
rule-252,PFPolicyInput.aspx,setpnlPFVAPollution,pnlPFVAPollution,Optional Coverages,,"SetControlsOptionalCoverageExtensions():            Dim elitepacEligibleCheck As Boolean = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                 If elitepacEligibleCheck.Equals(False) Then
                     pnlPolOptCoverExten.AddHelpItem(""Virginia Pollution"", ""Coverage must be Non-Qual rated. Only available if Ordinance or Law is rated on the policy or if policy is Summit or other preferred product that automatically includes Ordinance or Law coverage."", ""pnlPFVAPollution"")
                 Else
                     pnlPolOptCoverExten.AddHelpItem(""Virginia Pollution"", ""Coverage must be Non-Qual rated. Only available if Ordinance or Law is rated on the policy or if policy has a Property ElitePac Extension Endorsement or SelectPac Property Extension Endorsement that automatically includes Ordinance or Law coverage."", ""pnlPFVAPollution"")
                 End If
",rule-252,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlPFVAPollution,Optional Coverages,,setpnlPFVAPollution(),rule-252,,,,,,
,PFPolicyInput.aspx,,pnlPFVAPollution,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-252,,,,,,
,PFPolicyInput.aspx,,pnlPFVAPollution,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-252,,,,,,
rule-253,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                If oState IsNot Nothing Then
                     sFieldPrefix = ""02"" & sState & ""$""
",rule-253,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlPFVAPollution,Optional Coverages,,SaveStRateDateOverrides(),rule-253,,,,,,
,PFPolicyInput.aspx,,pnlPFVAPollution,Optional Coverages,,SaveFormData(),rule-253,,,,,,
rule-253.1,PFPolicyInput.aspx,SaveData,pnlPFVAPollution,Optional Coverages,,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-253,,Function_Invocation_Rule,,,,
rule-253.2,PFPolicyInput.aspx,SaveData,pnlPFVAPollution,Optional Coverages,,"            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-253,,Function_Invocation_Rule,,,,
rule-254,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                    If _oLobData.Attributes.Common.MultiStateInd.CL_EqualsYesAbbreviation() Then
","rule-253,rule-254",,direct_rule,,,,
rule-255,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        If pnlPFVAPollution.Selected Then
                             oState.Input(REC_FIELD_PFSTVAPOLLTN).Value = YES_ABBREVIATED
","rule-253,rule-254,rule-255",,variable_type_rule,,,,
rule-256,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        ElseIf sState.Equals(CLAS.Application.Framework.Constants.Common.getStateCode(StateEnum.Virginia), StringComparison.CurrentCultureIgnoreCase) Then
                             oState.Input(REC_FIELD_PFSTVAPOLLTN).Value = NO_ABBREVIATED
                         Else : oState.Input(REC_FIELD_PFSTVAPOLLTN).Value = String.Empty
                         End If
","rule-253,rule-254,rule-256",,variable_type_rule,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                    End If
","rule-253,rule-254",,,,,,
rule-257,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                    If oForm(sFieldPrefix & ""hidRatDate"").Trim <> """" OrElse
                        oForm(sFieldPrefix & ""hidDevDate"").Trim <> """" OrElse
                        oForm(sFieldPrefix & ""txtLCM"").Trim <> """" Then
                         oState.Input(""PFRateDateOvrrd"").Value = ""Y""
","rule-253,rule-257",,direct_rule,,,,
rule-258,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        If oForm(sFieldPrefix & ""hidRatDate"").Trim <> """" Then
                             sField = oForm(sFieldPrefix & ""hidRatDate"")
                             sHighRtDt = Mid(sField, 1, 2) & ""/"" & Mid(sField, 3, 2) & ""/"" & Mid(sField, 5, 2)
                         Else
","rule-253,rule-257,rule-258",,direct_rule,,,,
rule-259,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                            Select Case _oLobData.Attributes.Common.MultiStateInd
","rule-253,rule-257,rule-258,rule-259",,,,,,
rule-260,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                                Case ""N""
                                     sHighRtDt = Mid(_oLobData.Policy.Input(""PfIpRevdate"").Value, 1, 2) & ""/"" & Mid(_oLobData.Policy.Input(""PfIpRevdate"").Value, 3, 2) & ""/"" & Mid(_oLobData.Policy.Input(""PfIpRevdate"").Value, 5, 2)
","rule-253,rule-257,rule-258,rule-259,rule-260",,,,,,
rule-261,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                                Case ""Y""
                                     sHighRtDt = Mid(oState.Input(""PfIsRevdate"").Value, 1, 2) & ""/"" & Mid(oState.Input(""PfIsRevdate"").Value, 3, 2) & ""/"" & Mid(oState.Input(""PfIsRevdate"").Value, 5, 2)
                             End Select
","rule-253,rule-257,rule-258,rule-259,rule-261",,,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        End If
","rule-253,rule-257,rule-258",,,,,,
rule-262,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        If oForm(sFieldPrefix & ""hidDevDate"").Trim <> """" Then
                             sField = oForm(sFieldPrefix & ""hidDevDate"")
                             sHighDevDt = Mid(sField, 1, 2) & ""/"" & Mid(sField, 3, 2) & ""/"" & Mid(sField, 5, 2)
                         Else
","rule-253,rule-257,rule-262",,direct_rule,,,,
rule-263,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                            Select Case _oLobData.Attributes.Common.MultiStateInd
","rule-253,rule-257,rule-262,rule-263",,,,,,
rule-264,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                                Case ""N""
                                     sHighDevDt = Mid(_oLobData.Policy.Input(""PfIpWrdate"").Value, 1, 2) & ""/"" & Mid(_oLobData.Policy.Input(""PfIpWrdate"").Value, 3, 2) & ""/"" & Mid(_oLobData.Policy.Input(""PfIpWrdate"").Value, 5, 2)
","rule-253,rule-257,rule-262,rule-263,rule-264",,,,,,
rule-265,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                                Case ""Y""
                                     sHighDevDt = Mid(oState.Input(""PfIsWrdate"").Value, 1, 2) & ""/"" & Mid(oState.Input(""PfIsWrdate"").Value, 3, 2) & ""/"" & Mid(oState.Input(""PfIsWrdate"").Value, 5, 2)
                             End Select
","rule-253,rule-257,rule-262,rule-263,rule-265",,,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        End If
","rule-253,rule-257,rule-262",,,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        sVersions = oForm(sFieldPrefix & ""hidVersions"")
                         sRateCo = oForm(sFieldPrefix & ""hidRateCo"")
","rule-253,rule-257",,,,,,
rule-266,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        If oForm(sFieldPrefix & ""txtLCM"").Trim <> """" Then
                             sLCM = oForm(sFieldPrefix & ""txtLCM"")
                         Else
","rule-253,rule-257,rule-266",,direct_rule,,,,
rule-267,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                            Select Case _oLobData.Attributes.Common.MultiStateInd
","rule-253,rule-257,rule-266,rule-267",,,,,,
rule-268,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                                Case ""N""
                                     sLCM = _oLobData.Policy.Input(""PFPolLcmOvrd"").Value
","rule-253,rule-257,rule-266,rule-267,rule-268",,,,,,
rule-269,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                                Case ""Y""
                                     sLCM = oState.Input(""PfStLCMOvrd"").Value
                             End Select
","rule-253,rule-257,rule-266,rule-267,rule-269",,,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        End If
","rule-253,rule-257,rule-266",,,,,,
rule-270,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                        Select Case _oLobData.Attributes.Common.MultiStateInd
","rule-253,rule-257,rule-270",,,,,,
rule-271,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                            Case ""N""
                                 _oLobShared.SaveSingleStateDataToPol(_oLobData, oPolStatusRec, sHighRtDt, sHighDevDt, sVersions, sRateCo, sLCM, String.Empty)
","rule-253,rule-257,rule-270,rule-271",,,,,,
rule-272,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                            Case ""Y""
                                 _oLobShared.SaveMultiStateDataToPol(_oLobData, oPolStatusRec, oState.StateCode, sHighRtDt, sHighDevDt, sVersions, sRateCo, sLCM, String.Empty)
                         End Select
","rule-253,rule-257,rule-270,rule-272",,,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                    End If
","rule-253,rule-257",,,,,,
,PFPolicyInput.aspx,SaveStRateDateOverrides,pnlPFVAPollution,Optional Coverages,,"                End If
",rule-253,,,,,,
rule-273,PFPolicyInput.aspx,setpnlPayrollExpense,pnlPayrollExpense,Optional Coverages,,"Class_Variable:        Private _bPFISO2008 As Boolean = False
 SetupPagePresentation():            _bPFISO2008 = _oLobShared.checkISO2008(_sEffDate, _sPredState)
                 If _bPFISO2008 Then
                     .Visible = True
                     setddlPayrollExp()
",rule-273,,variable_type_rule,,,,
,PFPolicyInput.aspx,,pnlPayrollExpense,Optional Coverages,,setpnlPayrollExpense(),rule-273,,,,,,
,PFPolicyInput.aspx,,pnlPayrollExpense,Optional Coverages,,SetControlsOptionalCoverageExtensions(),rule-273,,,,,,
,PFPolicyInput.aspx,,pnlPayrollExpense,Optional Coverages,,SetupPropertyPolicyInputControl(),rule-273,,,,,,
rule-274,PFPolicyInput.aspx,setpnlPayrollExpense,pnlPayrollExpense,Optional Coverages,,"Class_Variable:        Private _businessIncomeApply As Boolean = False
 SetupPagePresentation():            _businessIncomeApply = _isElitePac2015Applicable = False AndAlso newCopCov AndAlso                                     (_oCOData.Attributes.Common.PolicyProgramType.Equals(PROGRAM_CODE_SENIOR_LIVING) OrElse                                      _oCOData.Attributes.Common.PolicySIC.Equals(SIC_CODE_ASSISTED_LIVING_FACILITIES)) SetupPagePresentation():            Dim newCopCov As Boolean = applicationShared.SupportIsInEffect(COP_EFFECTIVE, Date.ParseExact(_sEffDate, DATE_FORMAT_MMDDYY, Nothing))
 SetupPagePresentation():            _isElitePac2015Applicable = _oLobData.Policy.Input.Fields(""PFElitePac2015Apply"").Value.CL_EqualsYesAbbreviation()
                     If _businessIncomeApply Then 
.Visible = True
 
 End If
","rule-273,rule-274",,variable_type_rule,,,,
,PFPolicyInput.aspx,setpnlPayrollExpense,pnlPayrollExpense,Optional Coverages,,"                    .Selected = String.IsNullOrWhiteSpace(_oLobData.Policy.Input(""PfPolBincDiscPyrllExp"").Value).Equals(False)
                     .ToolTip = "" Check box if Business Income Discretionary Payroll Expense is requested""
                     .OnClientClick = ""chkPayrollExpense_Click""
                 Else
                     .Visible = False
                 End If
",rule-273,,,,,,
rule-275,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolBlanket1, BLANKET RATING,,"            If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim <> """" Then
                 pnlPolBlanket1.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket1.DisplayModifiedIndicator = False
             End If
",rule-275,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket1, BLANKET RATING,,SetUpCheckMarksInPanels(),rule-275,,,,,,
rule-276,PFPolicyInput.aspx,SetSPLimit1,pnlPolBlanket1, BLANKET RATING,,"                If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim <> String.Empty AndAlso
                     InStr(1, ""*1*2*3*6*7*8*9*"", _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim) > 0 Then
                     .Expanded = True
                 End If
",rule-276,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket1, BLANKET RATING,,SetSPLimit1(),rule-276,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket1, BLANKET RATING,,SetupPagePresentationBlanlet(),rule-276,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket1, BLANKET RATING,,SetupPropertyPolicyInputControl(),rule-276,,,,,,
rule-277,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolBlanket2, BLANKET RATING,,"            If _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim <> """" Then
                 pnlPolBlanket2.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket2.DisplayModifiedIndicator = False
             End If
",rule-277,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket2, BLANKET RATING,,SetUpCheckMarksInPanels(),rule-277,,,,,,
rule-278,PFPolicyInput.aspx,SetSPLimit2,pnlPolBlanket2, BLANKET RATING,,"                If _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim <> String.Empty AndAlso
                     InStr(1, ""*1*2*3*6*7*8*9*"", _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim) > 0 Then
                     .InitialClientVisibility = True
                 Else
                     .InitialClientVisibility = False
                 End If
",rule-278,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket2, BLANKET RATING,,SetSPLimit2(),rule-278,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket2, BLANKET RATING,,SetupPagePresentationBlanlet(),rule-278,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket2, BLANKET RATING,,SetupPropertyPolicyInputControl(),rule-278,,,,,,
rule-279,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolBlanket3, BLANKET RATING,,"            If _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim <> """" Then
                 pnlPolBlanket3.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket3.DisplayModifiedIndicator = False
             End If
",rule-279,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket3, BLANKET RATING,,SetUpCheckMarksInPanels(),rule-279,,,,,,
rule-280,PFPolicyInput.aspx,SetSPLimit3,pnlPolBlanket3, BLANKET RATING,,"                If _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim <> String.Empty AndAlso
                     InStr(1, ""*1*2*3*6*7*8*9*"", _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim) > 0 Then
                     .InitialClientVisibility = True
                 Else
                     .InitialClientVisibility = False
                 End If
",rule-280,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket3, BLANKET RATING,,SetSPLimit3(),rule-280,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket3, BLANKET RATING,,SetupPagePresentationBlanlet(),rule-280,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket3, BLANKET RATING,,SetupPropertyPolicyInputControl(),rule-280,,,,,,
rule-281,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolBlanket4, BLANKET RATING,,"            If _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim <> """" Then
                 pnlPolBlanket4.DisplayModifiedIndicator = True
             Else
                 pnlPolBlanket4.DisplayModifiedIndicator = False
             End If
",rule-281,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket4, BLANKET RATING,,SetUpCheckMarksInPanels(),rule-281,,,,,,
rule-282,PFPolicyInput.aspx,SetSPLimit4,pnlPolBlanket4, BLANKET RATING,,"                If _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim <> String.Empty AndAlso
                     InStr(1, ""*1*2*3*6*7*8*9*"", _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim) > 0 Then
                     .InitialClientVisibility = True
                 Else
                     .InitialClientVisibility = False
                 End If
",rule-282,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolBlanket4, BLANKET RATING,,SetSPLimit4(),rule-282,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket4, BLANKET RATING,,SetupPagePresentationBlanlet(),rule-282,,,,,,
,PFPolicyInput.aspx,,pnlPolBlanket4, BLANKET RATING,,SetupPropertyPolicyInputControl(),rule-282,,,,,,
rule-283,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolDeduct, PROPERTY POLICY INFORMATION,,"            If pnlPolDeduct.Visible = True Then
",rule-283,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolDeduct, PROPERTY POLICY INFORMATION,,SetUpCheckMarksInPanels(),rule-283,,,,,,
rule-284,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolDeduct, PROPERTY POLICY INFORMATION,,"                If _oLobData.Policy.Input(""PfPolType"").Value.Trim <> """" Then
                     pnlPolDeduct.DisplayModifiedIndicator = True
                 Else
                     pnlPolDeduct.DisplayModifiedIndicator = False
                 End If
","rule-283,rule-284",,direct_rule,,,,
,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolDeduct, PROPERTY POLICY INFORMATION,,"            End If
",rule-283,,,,,,
rule-285,PFPolicyInput.aspx,SetPnlPolicyDeductible,pnlPolDeduct, PROPERTY POLICY INFORMATION,,"                If _oLobData.Policy.Input.Fields(""PfDedOvrds"").Value.Trim.CL_EqualsYesAbbreviation Then
                     .Visible = True
                 End If
",rule-285,,,,,,
,PFPolicyInput.aspx,,pnlPolDeduct, PROPERTY POLICY INFORMATION,,SetPnlPolicyDeductible(),rule-285,,,,,,
,PFPolicyInput.aspx,,pnlPolDeduct, PROPERTY POLICY INFORMATION,,SetupPropertyPolicyInputControl(),rule-285,,,,,,
rule-286,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolOptCoverExten,Optional Coverages,,"            If ValidateTeesAndGreensPolCoverageAndEmployeeAggregateLimitAndCampgroundExtension() OrElse
                ValidateNoOfClubProfAndVirginiaPollutionCovgAndIncreasedCostAndBusinessIncomeOccurrenceLmt() OrElse
                ValidateGreenPacIcFlatAndPolFireDptSrvcIndAndPolBincDiscPyrllExp() OrElse
                ValidatePolBincOrdPayrllForEmpty() Then
                 pnlPolOptCoverExten.DisplayModifiedIndicator = True
             Else
                 pnlPolOptCoverExten.DisplayModifiedIndicator = False
             End If
",rule-286,,function_type_rule,,,,
,PFPolicyInput.aspx,,pnlPolOptCoverExten,Optional Coverages,,SetUpCheckMarksInPanels(),rule-286,,,,,,
rule-287,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolSpecialRating, PROPERTY POLICY INFORMATION,,"            If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim <> """" Then
                 pnlPolSpecialRating.DisplayModifiedIndicator = True
             Else
                 pnlPolSpecialRating.DisplayModifiedIndicator = False
             End If
",rule-287,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolSpecialRating, PROPERTY POLICY INFORMATION,,SetUpCheckMarksInPanels(),rule-287,,,,,,
rule-288,PFPolicyInput.aspx,SetUpCheckMarksInPanels,pnlPolSystemPowerPac, Prior Carrier For Property,,"            If _oLobData.Policy.Input(""PfPPClasRated"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPOptOut"").Value.Trim <> """" OrElse
                _oLobData.Policy.Input(""PfPPOptOut"").Value.Trim <> """" Then
                 pnlPolSystemPowerPac.DisplayModifiedIndicator = True
             Else
                 pnlPolSystemPowerPac.DisplayModifiedIndicator = False
             End If
",rule-288,,direct_rule,,,,
,PFPolicyInput.aspx,,pnlPolSystemPowerPac, Prior Carrier For Property,,SetUpCheckMarksInPanels(),rule-288,,,,,,
rule-289,PFPolicyInput.aspx,SetElitePacDropDown,propertyElitePac, EXTENSION OPTIONS (Listed in order of broadest coverage),1.)Extension Options,"                If New HashSet(Of String)() From {{PREDOMINANT_CAUSE_OF_LOSS.SPECIAL.GetHashCode.ToString},
                                                   {PREDOMINANT_CAUSE_OF_LOSS.SPECIAL_WITH_EQ.GetHashCode.ToString}}.Contains(
                                                   _oLobData.Policy.Input.Fields(""PfPolCol"").Value.Trim) = False Then
                     .Enabled = False
                     pnlElitePac.Style.Add(""Display"", ""none"")
                     pnlElitePac.DisplayModifiedIndicator = False
                 Else
                     pnlElitePac.DisplayModifiedIndicator = True
                 End If
",rule-289,,direct_rule,,,,
,PFPolicyInput.aspx,,propertyElitePac, EXTENSION OPTIONS (Listed in order of broadest coverage),1.)Extension Options,SetElitePacDropDown(),rule-289,,,,,,
rule-289.1,PFPolicyInput.aspx,SetupPagePresentation,propertyElitePac, EXTENSION OPTIONS (Listed in order of broadest coverage),1.)Extension Options,"            If _isElitePac2015Applicable Then
                 pnlElitePac.Visible = True
                 SetControlsElitePacOptions()
             Else
                 pnlElitePac.Visible = False
             End If
",rule-289,,Function_Invocation_Rule,,,,
rule-290,PFPolicyInput.aspx,SettxtLim1001,txtLim1001, BLANKET GROUP #1,1.)Blanket Limit 100% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal1"").Value, 1, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLimit1"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-290,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim1001, BLANKET GROUP #1,1.)Blanket Limit 100% of Total Values,SettxtLim1001(),rule-290,,,,,,
,PFPolicyInput.aspx,,txtLim1001, BLANKET GROUP #1,1.)Blanket Limit 100% of Total Values,SetupPagePresentationBlanlet(),rule-290,,,,,,
,PFPolicyInput.aspx,,txtLim1001, BLANKET GROUP #1,1.)Blanket Limit 100% of Total Values,SetupPropertyPolicyInputControl(),rule-290,,,,,,
rule-291,PFPolicyInput.aspx,SettxtLim1002,txtLim1002, BLANKET GROUP #2,1.)Blanket Limit 100% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal2"").Value, 1, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim2"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-291,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim1002, BLANKET GROUP #2,1.)Blanket Limit 100% of Total Values,SettxtLim1002(),rule-291,,,,,,
,PFPolicyInput.aspx,,txtLim1002, BLANKET GROUP #2,1.)Blanket Limit 100% of Total Values,SetupPagePresentationBlanlet(),rule-291,,,,,,
,PFPolicyInput.aspx,,txtLim1002, BLANKET GROUP #2,1.)Blanket Limit 100% of Total Values,SetupPropertyPolicyInputControl(),rule-291,,,,,,
rule-292,PFPolicyInput.aspx,SettxtLim1003,txtLim1003, BLANKET GROUP #3,1.)Blanket Limit 100% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal3"").Value, 1, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim3"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-292,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim1003, BLANKET GROUP #3,1.)Blanket Limit 100% of Total Values,SettxtLim1003(),rule-292,,,,,,
,PFPolicyInput.aspx,,txtLim1003, BLANKET GROUP #3,1.)Blanket Limit 100% of Total Values,SetupPagePresentationBlanlet(),rule-292,,,,,,
,PFPolicyInput.aspx,,txtLim1003, BLANKET GROUP #3,1.)Blanket Limit 100% of Total Values,SetupPropertyPolicyInputControl(),rule-292,,,,,,
rule-293,PFPolicyInput.aspx,SettxtLim1004,txtLim1004, BLANKET GROUP #4,1.)Blanket Limit 100% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal4"").Value, 1, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim4"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-293,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim1004, BLANKET GROUP #4,1.)Blanket Limit 100% of Total Values,SettxtLim1004(),rule-293,,,,,,
,PFPolicyInput.aspx,,txtLim1004, BLANKET GROUP #4,1.)Blanket Limit 100% of Total Values,SetupPagePresentationBlanlet(),rule-293,,,,,,
,PFPolicyInput.aspx,,txtLim1004, BLANKET GROUP #4,1.)Blanket Limit 100% of Total Values,SetupPropertyPolicyInputControl(),rule-293,,,,,,
rule-294,PFPolicyInput.aspx,SettxtLim901,txtLim901, BLANKET GROUP #1,1.)Blanket Limit 90% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal1"").Value, 2, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLimit1"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-294,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim901, BLANKET GROUP #1,1.)Blanket Limit 90% of Total Values,SettxtLim901(),rule-294,,,,,,
,PFPolicyInput.aspx,,txtLim901, BLANKET GROUP #1,1.)Blanket Limit 90% of Total Values,SetupPagePresentationBlanlet(),rule-294,,,,,,
,PFPolicyInput.aspx,,txtLim901, BLANKET GROUP #1,1.)Blanket Limit 90% of Total Values,SetupPropertyPolicyInputControl(),rule-294,,,,,,
rule-295,PFPolicyInput.aspx,SettxtLim902,txtLim902, BLANKET GROUP #2,1.)Blanket Limit 90% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal2"").Value, 2, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim2"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-295,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim902, BLANKET GROUP #2,1.)Blanket Limit 90% of Total Values,SettxtLim902(),rule-295,,,,,,
,PFPolicyInput.aspx,,txtLim902, BLANKET GROUP #2,1.)Blanket Limit 90% of Total Values,SetupPagePresentationBlanlet(),rule-295,,,,,,
,PFPolicyInput.aspx,,txtLim902, BLANKET GROUP #2,1.)Blanket Limit 90% of Total Values,SetupPropertyPolicyInputControl(),rule-295,,,,,,
rule-296,PFPolicyInput.aspx,SettxtLim903,txtLim903, BLANKET GROUP #3,1.)Blanket Limit 90% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal3"").Value, 2, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim3"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-296,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim903, BLANKET GROUP #3,1.)Blanket Limit 90% of Total Values,SettxtLim903(),rule-296,,,,,,
,PFPolicyInput.aspx,,txtLim903, BLANKET GROUP #3,1.)Blanket Limit 90% of Total Values,SetupPagePresentationBlanlet(),rule-296,,,,,,
,PFPolicyInput.aspx,,txtLim903, BLANKET GROUP #3,1.)Blanket Limit 90% of Total Values,SetupPropertyPolicyInputControl(),rule-296,,,,,,
rule-297,PFPolicyInput.aspx,SettxtLim904,txtLim904, BLANKET GROUP #4,1.)Blanket Limit 90% of Total Values,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal4"").Value, 2, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim4"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-297,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLim904, BLANKET GROUP #4,1.)Blanket Limit 90% of Total Values,SettxtLim904(),rule-297,,,,,,
,PFPolicyInput.aspx,,txtLim904, BLANKET GROUP #4,1.)Blanket Limit 90% of Total Values,SetupPagePresentationBlanlet(),rule-297,,,,,,
,PFPolicyInput.aspx,,txtLim904, BLANKET GROUP #4,1.)Blanket Limit 90% of Total Values,SetupPropertyPolicyInputControl(),rule-297,,,,,,
rule-298,PFPolicyInput.aspx,SettxtLimArea1,txtLimArea1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Area,"                If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim = ""4"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLimit1"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-298,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimArea1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Area,SettxtLimArea1(),rule-298,,,,,,
,PFPolicyInput.aspx,,txtLimArea1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Area,SetupPagePresentationBlanlet(),rule-298,,,,,,
,PFPolicyInput.aspx,,txtLimArea1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Area,SetupPropertyPolicyInputControl(),rule-298,,,,,,
rule-299,PFPolicyInput.aspx,SettxtLimArea2,txtLimArea2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Area,"                If _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim = ""4"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim2"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-299,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimArea2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Area,SettxtLimArea2(),rule-299,,,,,,
,PFPolicyInput.aspx,,txtLimArea2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Area,SetupPagePresentationBlanlet(),rule-299,,,,,,
,PFPolicyInput.aspx,,txtLimArea2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Area,SetupPropertyPolicyInputControl(),rule-299,,,,,,
rule-300,PFPolicyInput.aspx,SettxtLimArea3,txtLimArea3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Area,"                If _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim = ""4"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim3"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-300,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimArea3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Area,SettxtLimArea3(),rule-300,,,,,,
,PFPolicyInput.aspx,,txtLimArea3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Area,SetupPagePresentationBlanlet(),rule-300,,,,,,
,PFPolicyInput.aspx,,txtLimArea3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Area,SetupPropertyPolicyInputControl(),rule-300,,,,,,
rule-301,PFPolicyInput.aspx,SettxtLimArea4,txtLimArea4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Area,"                If _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim = ""4"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim4"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-301,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimArea4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Area,SettxtLimArea4(),rule-301,,,,,,
,PFPolicyInput.aspx,,txtLimArea4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Area,SetupPagePresentationBlanlet(),rule-301,,,,,,
,PFPolicyInput.aspx,,txtLimArea4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Area,SetupPropertyPolicyInputControl(),rule-301,,,,,,
rule-302,PFPolicyInput.aspx,SettxtLimInput1,txtLimInput1, BLANKET GROUP #1,1.)Input Blanket Limit,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal1"").Value, 3, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLimit1"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-302,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimInput1, BLANKET GROUP #1,1.)Input Blanket Limit,SettxtLimInput1(),rule-302,,,,,,
,PFPolicyInput.aspx,,txtLimInput1, BLANKET GROUP #1,1.)Input Blanket Limit,SetupPagePresentationBlanlet(),rule-302,,,,,,
,PFPolicyInput.aspx,,txtLimInput1, BLANKET GROUP #1,1.)Input Blanket Limit,SetupPropertyPolicyInputControl(),rule-302,,,,,,
rule-303,PFPolicyInput.aspx,SettxtLimInput2,txtLimInput2, BLANKET GROUP #2,1.)Input Blanket Limit,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal2"").Value, 3, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim2"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-303,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimInput2, BLANKET GROUP #2,1.)Input Blanket Limit,SettxtLimInput2(),rule-303,,,,,,
,PFPolicyInput.aspx,,txtLimInput2, BLANKET GROUP #2,1.)Input Blanket Limit,SetupPagePresentationBlanlet(),rule-303,,,,,,
,PFPolicyInput.aspx,,txtLimInput2, BLANKET GROUP #2,1.)Input Blanket Limit,SetupPropertyPolicyInputControl(),rule-303,,,,,,
rule-304,PFPolicyInput.aspx,SettxtLimInput3,txtLimInput3, BLANKET GROUP #3,1.)Input Blanket Limit,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal3"").Value, 3, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim3"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-304,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimInput3, BLANKET GROUP #3,1.)Input Blanket Limit,SettxtLimInput3(),rule-304,,,,,,
,PFPolicyInput.aspx,,txtLimInput3, BLANKET GROUP #3,1.)Input Blanket Limit,SetupPagePresentationBlanlet(),rule-304,,,,,,
,PFPolicyInput.aspx,,txtLimInput3, BLANKET GROUP #3,1.)Input Blanket Limit,SetupPropertyPolicyInputControl(),rule-304,,,,,,
rule-305,PFPolicyInput.aspx,SettxtLimInput4,txtLimInput4, BLANKET GROUP #4,1.)Input Blanket Limit,"                If Mid(_oLobData.Policy.Input(""PfBlktTotVal4"").Value, 3, 1) = ""1"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim4"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-305,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimInput4, BLANKET GROUP #4,1.)Input Blanket Limit,SettxtLimInput4(),rule-305,,,,,,
,PFPolicyInput.aspx,,txtLimInput4, BLANKET GROUP #4,1.)Input Blanket Limit,SetupPagePresentationBlanlet(),rule-305,,,,,,
,PFPolicyInput.aspx,,txtLimInput4, BLANKET GROUP #4,1.)Input Blanket Limit,SetupPropertyPolicyInputControl(),rule-305,,,,,,
rule-306,PFPolicyInput.aspx,SettxtLimVal1,txtLimVal1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Value,"                If _oLobData.Policy.Input(""PfBlktTyp1"").Value.Trim = ""5"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLimit1"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-306,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimVal1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Value,SettxtLimVal1(),rule-306,,,,,,
,PFPolicyInput.aspx,,txtLimVal1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Value,SetupPagePresentationBlanlet(),rule-306,,,,,,
,PFPolicyInput.aspx,,txtLimVal1, BLANKET GROUP #1,1.)Blanket Limit for Time Element Rated By Value,SetupPropertyPolicyInputControl(),rule-306,,,,,,
rule-307,PFPolicyInput.aspx,SettxtLimVal2,txtLimVal2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Value,"                If _oLobData.Policy.Input(""PfBlktTyp2"").Value.Trim = ""5"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim2"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-307,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimVal2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Value,SettxtLimVal2(),rule-307,,,,,,
,PFPolicyInput.aspx,,txtLimVal2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Value,SetupPagePresentationBlanlet(),rule-307,,,,,,
,PFPolicyInput.aspx,,txtLimVal2, BLANKET GROUP #2,1.)Blanket Limit for Time Element Rated By Value,SetupPropertyPolicyInputControl(),rule-307,,,,,,
rule-308,PFPolicyInput.aspx,SettxtLimVal3,txtLimVal3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Value,"                If _oLobData.Policy.Input(""PfBlktTyp3"").Value.Trim = ""5"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim3"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-308,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimVal3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Value,SettxtLimVal3(),rule-308,,,,,,
,PFPolicyInput.aspx,,txtLimVal3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Value,SetupPagePresentationBlanlet(),rule-308,,,,,,
,PFPolicyInput.aspx,,txtLimVal3, BLANKET GROUP #3,1.)Blanket Limit for Time Element Rated By Value,SetupPropertyPolicyInputControl(),rule-308,,,,,,
rule-309,PFPolicyInput.aspx,SettxtLimVal4,txtLimVal4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Value,"                If _oLobData.Policy.Input(""PfBlktTyp4"").Value.Trim = ""5"" Then
                     .Text = BusinessServices.Utility.AddCommas(_oLobData.Policy.Input(""PfBlktLim4"").Value.Trim)
                 Else
                     .Text = String.Empty
                 End If
",rule-309,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLimVal4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Value,SettxtLimVal4(),rule-309,,,,,,
,PFPolicyInput.aspx,,txtLimVal4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Value,SetupPagePresentationBlanlet(),rule-309,,,,,,
,PFPolicyInput.aspx,,txtLimVal4, BLANKET GROUP #4,1.)Blanket Limit for Time Element Rated By Value,SetupPropertyPolicyInputControl(),rule-309,,,,,,
rule-310,PFPolicyInput.aspx,settxtLossFreeYears,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","Class_Variable:        Private _bDisableMod2 As Boolean = False
                 If _bDisableMod2 = True Then
                     .Visible = False
                 Else
                     Visible = True
                 End If
",rule-310,,direct_rule,,,,
rule-310.1,PFPolicyInput.aspx,SetControlsPolicyInformation,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_sEffDate) Then
                 setddlLossFreeYr()
             Else
                 settxtLossFreeYears()
             End If
",rule-310,,Function_Invocation_Rule,,,,
,PFPolicyInput.aspx,,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SetControlsPolicyInformation(),rule-310,,,,,,
rule-311,PFPolicyInput.aspx,SaveFormPolicyInformationData,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            If _oCOLobShared.IsLFCEffDate(_oLobData.Attributes.Common.PolicyEffectiveDate) Then
                 _oLobData.Policy.Input(""PfMiscMod2"").Value = ddlLossFreeYr.SelectedValue.Trim()
             Else
                 _oLobData.Policy.Input(""PfMiscMod2"").Value = txtLossFreeYears.Text.Trim()
             End If
",rule-311,,direct_rule,,,,
,PFPolicyInput.aspx,,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SaveFormPolicyInformationData(),rule-311,,,,,,
,PFPolicyInput.aspx,,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)",SaveFormData(),rule-311,,,,,,
rule-311.1,PFPolicyInput.aspx,SaveData,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-311,,Function_Invocation_Rule,,,,
rule-311.2,PFPolicyInput.aspx,SaveData,txtLossFreeYears, PROPERTY POLICY INFORMATION,"1.)Loss Free Years
2.)From the current policy inception date select the number of consecutive years the risk has been loss free (0, 1, 2, 3)","            Select Case sActionPassed
                 Case ACTION_SAVE_NAV_AWAY
                     SaveAllData(sActionPassed)
                     If _oLobData.Policy.Input(""PfBlanket"").Value.CL_EqualsYesAbbreviation Then
                         _oLobShared.SetBlktType(_oLobData, _oValidationResults)
                     End If
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         CommitCrimeEltePacData()
                         ClearICAndSCAttributes()
                         With _oCOData
                             Const LOB_INPUT_MODE As String = ""StSLobInputMode""
                             Const LOB_STATUS_SAVE As String = ""S""
                             If .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value.Equals(LOB_STATUS_SAVE, StringComparison.CurrentCultureIgnoreCase) = False Then
                                 AOLobDetailsDataCapture(_oCOData, Common.getLineOfBusiness(LOB.LineOfBusiness.Property))
                             End If
                             .StatusRecords(STATUS_PF)(LOB_INPUT_MODE).Value = LOB_STATUS_SAVE
                             .SetSession()
                             .Commit()
                         End With
                         Session.SetVariables()
                         Success = True
                     End If
                 Case ACTION_WALK_THRU
                     SaveAllData(sActionPassed)
                     If _oValidationResults.ErrorCount > 0 Then
                         AddErrorsToPage(_oValidationResults)
                     Else
                         Success = True
                         CommitCrimeEltePacData()
                     End If
             End Select
",rule-311,,Function_Invocation_Rule,,,,
