ME:CDIPIMNT XKSTYPE:PGM XKSMODE:S                                          
DEFINE DATA                                                                
GLOBAL USING INDGDA                                                        
LOCAL USING CDLDA                                                          
LOCAL USING CDSELPDA                                                       
LOCAL USING STDASTN                                                        
LOCAL USING STDASTN1                                                       
LOCAL USING CDILIMNT                                                       
LOCAL USING CDILDEST                                                       
LOCAL USING CDIANUMB                                                       
LOCAL USING INDALSE1                            
LOCAL USING STDASCOM                            
LOCAL USING STDAMAIL                             
LOCAL USING STDA0500                             
LOCAL                                                                      
1 #MAX              (P3)                                                   
1 #I                (P3)                                                   
1 #LINES-USED       (P3)   INIT <0>              
1 #USBL_TRK_PRF     (A1)                                                   
1 #OPEN-FIELDS      (A1)                         
1 #CCCR-USER-ID     (I4)                         
1 #UPD-OVERFLW-TRKS (A1)                         
1 #OVFLW-WARNING    (A1)                         
1 #CCCR-ADD         (A1)                                                   
1 #CCCR-PRESENT     (A1)                                                   
1 #ACTION-AUDT      (A1)                                                   
1 #CDIFLLS-IND      (A1) INIT <'N'>              
1 #TTERROR          (L)  INIT <FALSE>            
1 #FROM-CDI-AUDIT   (L)                          
1 #MORE-SPOT        (L)                                                    
1 #MORE-PULL        (L)                          
1 #COMMIT_VER       (L)                                                    
1 #SEND-EMAIL-3     (L)                          
1 #SEND-EMAIL-4     (L)                          
1 #CHANGE           (L)                                                    
1 #CCCR-EXCP        (L)                                                    
1 #CCCR-UPD         (L)                                                    
1 #MAX-PRF-CHGD     (L)                          
1 REDEFINE #MAX-PRF-CHGD                         
  2 #B              (B1)                         
1 #SVC-GRP-EXISTS   (L)                                                    
1 REDEFINE #SVC-GRP-EXISTS                                                 
  2 #SVC-EXISTS     (A1)                                                   
1 #TEAM-TRK-EXIST-FLG(L)                         
1 REDEFINE #TEAM-TRK-EXIST-FLG                                             
  2 #TEAM-TRK-EXIST (B1)                                                   
1 #CCCR-CV          (C)    INIT <(AD=P CD=GR)>   
1 #EXCS-CARS-CV     (C)                                                    
1 #EXCS-FEET-CV     (C)                                                    
1 #CDI_EXP_DT-CV    (C)   INIT <(AD=U CD=GR)>    
1 #CLOSE-CV         (C)                          
1 #CV               (C)   INIT <(AD=U CD=GR)>                              
1 #CUST-CV          (C)   INIT <(AD=U CD=GR)>    
1 #ZTS-CV           (C)   INIT <(AD=U CD=GR)>    
1 #EXISTS1         (P2)                                      
1 #CDI-AUDIT-KEY-ADD   (A60)                     
1 REDEFINE #CDI-AUDIT-KEY-ADD                                              
  2 #CDI-AUDIT-KEY     (A29)                                               
  2 #CDI-AUDT_CRET_TS  (A26)                                               
  2 #CDI-AUDIT-OPTION  (A5)                                                
1 #LSE-ZTS          (A6)                         
1 REDEFINE #LSE-ZTS                                                        
  2 #LSE-ZTS-TRK    (A4)                                                   
  2 #LSE-ZTS-SPT    (A2)                         
1 #SAVE-ZTS         (A6)                         
1 #WK-ZTS           (A6)                                                   
1 REDEFINE #WK-ZTS                                                         
  2 #TRK            (A4)                                                   
1 #ZTS-6            (A6)                                                   
1 #CUST-633         (A12)                                                  
1 #DEST-333         (A9)                                                   
1 #DEST-ST          (A2)                                                   
1 #SV-CUST          (A12)                        
1 #SV-DEST          (A9)                                                   
1 #SV-ST            (A2)                                                   
1 #SV-ZTS           (A6)                                                   
1 #MODE             (A10)                                                  
1 #TABLE            (50)                                                   
  2 #TAB-REC        (A24)                                                  
  2 REDEFINE #TAB-REC                                                      
    3 #UPD-ZTS      (A6)                                                   
    3 #TRK-PRF      (A1)                                                   
    3 #ZTS-CHKD     (A1)                                                   
    3 #UPDATE       (A1)                                                   
    3 #TRK_LSE_CARS (P3)  
    3 #TRK_LSE_LGTH (P5)                                                   
    3 #USBL_TRK_CARS(P3)  
    3 #USBL_TRK_FEET(P5)                                                   
    3 #MAX_TRK_CARS (P3)                                                   
    3 #MAX_TRK_FEET (P5)                                                   
1 #READ-DIV         (A3)                         
1 #SPOT-TIME        (A4/3)                       
1 #PULL-TIME        (A4/3)                                                 
1 #ALL-SPOTS-1      (A4)                                                   
1 #ALL-PULLS-1      (A4)                                                   
1 #ALL-SPOTS-2      (A4)                                                   
1 #ALL-PULLS-2      (A4)                                                   
1 #ALL-SPOTS-3      (A4)                                                   
1 #ALL-PULLS-3      (A4)                                                   
1 STDASLAL-OUTPUT                                                          
  2 CNT             (P3)                                                   
  2 OUT-ARR         (250)                                                  
    3 ROAD          (A4)                                                   
    3 DIV           (A3)                                                   
    3 NAME          (A50)                                                  
    3 STN_333       (A9)                                                   
    3 STN_ST        (A2)                                                   
    3 TSO_333       (A9)                                                   
    3 TSO_ST        (A2)                                                   
    3 DFO_333       (A9)                                                   
    3 DFO_ST        (A2)                                                   
1 #POP-INPUT        (A3)  INIT <'NO '>                                     
1 #CCCR-FULLNAME    (A152)                       
1 REDEFINE #CCCR-FULLNAME                                                  
  2 #CCCR-LOCAL-CONTACT  (A41)                                             
  2 REDEFINE #CCCR-LOCAL-CONTACT                                           
    3 FILLER        (A38)                                                  
    3 #TRUNC-CNCT   (A3)                                                   
  2 #EXTRA-CNCT     (A111)                                                 
1 #VC-PHN           (A20)                                                  
1 REDEFINE #VC-PHN                                                         
  2 #CCCR-VC        (A15)                                                  
  2 REDEFINE #CCCR-VC                                                      
    3 FILLER        (A12)                                                  
    3 #TRUNC        (A3)                                                   
  2 #EXTRA          (A5)                                                   
1 #CCCR-FAX         (A15)                        
1 #NOTF-TEL-SWITCH  (A1)                         
1 #WARN-OVF-TRK     (L)                          
1 #OVF-TRK-CNT      (N2)                         
1 #OVF-TRK-FLG      (L)                          
1 #FAX-NUMB         (A15)                                                  
1 #CUST-NTFY-PSWD   (A4)                         
1 #LOG-LINE         (A48)                        
1 REDEFINE #LOG-LINE                                                       
  2 FILLER           21X                                                   
  2 #LOG-ST         (A2)                         
1 #USER-ID          (A8)                                                   
1 #CDIFLLS          (A78)                         
1 #FLLS             (A71)                         
1 REDEFINE #FLLS                                                           
  2 CUST_633        (A12)                                                  
  2 DEST_333        (A9)                                                   
  2 DEST_ST         (A2)                                                   
  2 ZTS             (A6)                                                   
  2 N-CUST          (A12)                                                  
  2 N-DEST          (A9)                                                   
  2 N-ST            (A2)                                                   
  2 N-ZTS           (A6)                                                   
  2 USER            (A8)                                                   
  2 CO-ABBR         (A4)                                                   
  2 ACTION          (A1)                                                   
1 #NABRJE01                                                                
  2 #JCL-PGM        (A8)                                                   
  2 REDEFINE #JCL-PGM                                                      
    3 #JCL-2        (A2)                                                   
  2 REDEFINE #JCL-PGM                                                      
    3 #JCL-3        (A3)                                                   
  2 #USER           (A7)                                                   
  2 #LIBRARY-ID     (A8)                                                   
  2 #PROGRAM-ID     (A8)                                                   
  2 #USER-LOGON-ID  (A8)                                                   
  2 #USER-PASSWORD  (A8)                                                   
  2 #ASSOC-PRTR-ID  (A8)                                                   
  2 #PRINTER-OUTPUT (A1)                                                   
  2 #RETURN         (N3)                                                   
1 #SSI_ARR          (99)                         
  2 CUST_633        (A12)                                                  
  2 DEST_333        (A9)                                                   
  2 DEST_ST         (A2)                                                   
  2 PRTY_NUMB       (A3)                                                   
  2 CAREOF_633_NME  (A12)                                                  
1 #CCCR-FOUND-T        (A1)                         
1 #USER-FOUND-T        (A1)                                                
1 #CCCR-SWITCH         (L)           INIT<FALSE>                           
1 #CCCR-DFO-333        (A9)          INIT<'CCCRFAX  '>                     
1 #CUST-NTFY-PSWD-T    (A4/500)                                            
1 #UN-SUBS-TIMESTMP-T  (A26/500)                                           
1 #CCCR-USER-ID-T      (I4/500)                                            
1 #NOTF-FAX-NUMB-T     (A15/500)                                           
1 #VC-PHN-T            (A20/500)                                           
1 #EXTN-T              (A8/500)                                            
1 #CCCR-FNAME-T        (A50/500)                                           
1 #CCCR-MNAME-T        (A50/500)                                           
1 #CCCR-LNAME-T        (A50/500)                                           
1 #CCCR-USER-EML-T     (A80/500)                                           
1 #CUST-NTFY-PSWD-TEMP (A4/500)                                            
1 #SUB-TYPE-T          (A2)                                                
1 #SUBS-FOUND-T        (A1/500)                                            
1 #ROW-COUNT           (N3)                                                
1 #IPOWER-ID-T         (A8/500)                                            
1 #PROCESS-FLAG-T      (A8)          INIT<'CDIINFO '>                      
1 #DATE-L           (A8)                                                   
1 #TIME-L           (A10)                                                  
1 #TIME_ZONE-L      (P1)                         
1 #CURR-DT          (A10)                        
1 #CDI_EXP_DT       (A10)                                                  
1 REDEFINE #CDI_EXP_DT                                                     
  2 #CDI-YYYY       (A4)                                                   
  2 #CDI-1          (A1)                                                   
  2 #CDI-MM-DD      (A5)                                                   
1 #LST-ACS-DT       (A10)                                                  
1 REDEFINE #LST-ACS-DT                                                     
  2 #ACS-YYYY       (A4)                                                   
  2 #ACS-1          (A1)                                                   
  2 #ACS-MM         (A2)                                                   
  2 #ACS-2          (A1)                                                   
  2 #ACS-DD         (A2)                                                   
1 #ORIG-EXP-DT      (A10)                                                  
1 REDEFINE #ORIG-EXP-DT                                                    
  2 #ORIG-YYYY      (A4)                                                   
  2 #ORIG-1         (A1)                                                   
  2 #ORIG-MM        (A2)                                                   
  2 #ORIG-2         (A1)                                                   
  2 #ORIG-DD        (A2)                                                   
1 #TEMP-DT          (A10)                                                  
1 REDEFINE #TEMP-DT                                                        
  2 #TEMP-YYYY      (A4)                                                   
  2 #TEMP-1         (A1)                                                   
  2 #TEMP-MM        (A2)                                                   
  2 #TEMP-2         (A1)                                                   
  2 #TEMP-DD        (A2)                                                   
1 #DOING-RESTORE    (L)                                                    
1 #TEMP-CUST-633    (A12)                                
1 #TEMP-DEST-333    (A9)                                                   
1 #TEMP-DEST-ST     (A2)                                 
1 #CCCR-EXISTS      (A1)                         
1 #DIV-CD           (A03)                                                  
1 #CUST-FULL        (A35)                                                  
1 #EMAIL-ADDR       (A50)                                                  
1 #TEMP-ZTS         (A6)                                                   
1 #CCCR-633         (A12)                                                  
1 #CCCR-STN-333     (A9)                                                   
1 #CCCR-STN-ST      (A2)                                                   
1 #CCCR-NOTF-TEL-NUM (A15)                                                 
1 CCCR-CDI VIEW OF OS-TCCCR_CDI_INFO                                       
  2 CCCR_CUST_633                                                          
  2 STN_333                                                                
  2 STN_ST                                                                 
  2 ZTS                                                                    
  2 CCCR_USER_ID                                                           
  2 CO_ABBR                                      
1 CM-TDEST_TEAM_TRK_CAP VIEW OF CM-TDEST_TEAM_TRK_CAP                      
  2 USBL_TRK_PRF                                                           
  2 USBL_TRK_CARS                                                          
  2 USBL_TRK_FEET                               
1 OS-VCCCR_NOTF_SUBSC VIEW OF OS-TCCCR_NOTF_SUBSC 
  2 CCCR_CUST_633                                                          
  2 STN_333                                                                
  2 STN_ST                                                                 
  2 CO_ABBR                                                                
  2 CUST_NTFY_PSWD                                                         
  2 CSS_SUBSC_TYP                                                          
  2 CCCR_USER_ID                                                           
  2 STN_333_UNSUBSC_TS                                                     
  2 N@STN_333_UNSUBSC_TS                                                   
  2 CRET_TS                                                                
1 OS-VCCCR_USER_ID VIEW OF OS-TCCCR_USER_ID                                
  2 USER_PHN_NBR                                                           
  2 USER_PHN_EXT                                                           
  2 USER_FAX_NBR                                 
  2 CCCR_USER_FNME                                                         
  2 CCCR_USER_MNME                                                         
  2 CCCR_USER_LNME                                                         
  2 CCCR_USER_EML   (A80)                                                  
  2 REDEFINE        CCCR_USER_EML                                          
    3 #CCCR-USER-EML(A49)                                                  
    3 REDEFINE      #CCCR-USER-EML                                         
      4 FILLER      (A46)                                                  
      4 #TRUNC-EML  (A3)                                                   
    3 #EXTRA-EML    (A31)                                                  
1 UPDATE-VIEW-AU VIEW OF CM-TDEST_INST_AU        
  2 CUST_633                                                               
  2 DEST_333                                                               
  2 DEST_ST                                                                
  2 ZTS                                                                    
  2 NOTF_PERSON                                                            
  2 DMRG_TYPE_CD                                                           
  2 OPEN_GATE_FLG                                                          
  2 CP_CD                                                                  
  2 NOTF_CD                                                                
  2 JT_INDS_ROAD                                                           
  2 NOTF_TEL_NUMB                                                          
  2 LD_MTY_NOTF                                                            
  2 TEAM_TRK_FLG                                                           
  2 TRK_LSED_FLG                                                           
  2 DOOR_FLIP_FLG                                                          
  2 DEST_INSTR_CMT                                                         
  2 TRK_LSE_LGTH                                                           
  2 DFO_333                                                                
  2 DFO_ST                                                                 
  2 TSO_333                                                                
  2 WB_RLSE_FLG                                                            
  2 RRTE_MTY_PVT                                                           
  2 BUS_UNIT_CD                                                            
  2 BUS_UNIT_CD2                                                           
  2 CO_ABBR                                                                
  2 EXP_DT                                                                 
  2 EFF_DT                                                                 
  2 VC_TEL_NUMB                                                            
  2 PVT_SWTCH                                                              
  2 WB_ETRN_FLG                                                            
  2 LTRK_AGRM_ID                                                           
  2 LD_MTY_CP                                                              
  2 CP_FORM                                                                
  2 CP_EXCP                                                                
  2 ORD_TRK_EXCP                                                           
  2 AUTO_ORDER                                                             
  2 USBL_TRK_PRF                                                           
  2 USBL_TRK_CARS                                                          
  2 EXCS_CARS                                                              
  2 USBL_TRK_FEET                                                          
  2 EXCS_FEET                                                              
  2 CP_NOTF_PERS                                                           
  2 BNSF_DIV_CD                                                            
  2 MAX_TRK_CARS                                                           
  2 MAX_TRK_FEET                                                           
  2 INV_FMT_CD                                                             
  2 WO_CUTOF_TM_1                                                          
  2 WO_CUTOF_TM_2                                                          
  2 WO_CUTOF_TM_3                                                          
  2 SWFL_FMT_CD                                                            
  2 TRK_LSE_CARS                                                           
  2 JT_ROAD_CD                                                             
  2 NOTF_EMAIL_ID                                                          
  2 ORD_IN_CD                                                              
  2 VCR_EFF_DT                                                             
  2 VCR_EXP_DT                                                             
  2 VCR_PRMT_RLSE                                                          
  2 VCR_TRK_RLSE                                                           
  2 VCR_EXCL_RLSE                                                          
  2 VCR_REJ_RLSE                                                           
  2 VCR_XTWN_RLSE                                                          
  2 VCR_RECIP_RLSE                                                         
  2 VCR_RLD_RLSE                                                           
  2 VCR_CERT_RLSE                                                          
  2 VCR_PVT_RLSE                                                           
  2 VCR_LSEE_RLSE                                                          
  2 VCR_STG_RLSE                                                           
  2 VCR_ACS_CNT                                                            
  2 VCR_MAINT_TS                                                           
  2 VCR_MAINT_ID                                                           
  2 VCR_EXCL_ORD                                                           
  2 CISS_SWTCH_CD                                                          
  2 VCR_UTRN_PRLSE                                                         
  2 DMRG_AAR_RPTG_CD                                                       
  2 AUDT_CRET_ID                                                           
  2 AUDT_CRET_TS                                                           
  2 AUDT_ACTN_CD                                                           
  2 CDI_EXP_DT                                  
  2 CDI_CRET_DT                                 
  2 LF_CUST_ADDR                                
  2 LST_ACS_DT                                                             
  2 CDI_RSTORD_DT                                                          
1 CM-TCUST_SSI VIEW OF CM-TCUST_SSI                                        
  2 CUST_633                                                               
  2 DEST_333                                                               
  2 DEST_ST                                                                
  2 PRTY_NUMB                                                              
  2 CAREOF_633_NME                                                         
1 CM-TSTN-T VIEW OF CM-TSTN                      
  2 TIME_ZONE                                                              
1 OVFL VIEW OF CM-TDEST_OVF_TRKS                                           
  2 ZTS 2 OVF_TRK                                                          
1 CDI-OVF VIEW OF CM-TDEST_INST                  
  2 USBL_TRK_PRF                                                           
  2 TRK_LSE_CARS                                                           
  2 TRK_LSE_LGTH                                                           
  2 USBL_TRK_CARS                                                          
  2 USBL_TRK_FEET                                                          
1 CDI VIEW OF CM-TDEST_INST                                                
  2 USBL_TRK_PRF                                                           
  2 TRK_LSE_CARS                                                           
  2 TRK_LSE_LGTH                                                           
  2 USBL_TRK_CARS                                                          
  2 USBL_TRK_FEET                                
1 CDI_INST VIEW OF CM-TDEST_INST                           
  2 BUS_UNIT_CD2                                                           
  2 VCR_UTRN_PRLSE                                         
1 #WB-RLS-FLG (L)    INIT <FALSE>                                          
1 REDEFINE #WB-RLS-FLG                                                     
  2 #WB-RLS-FLG-B1  (B1)                                 
INDEPENDENT                                      
1 +PREV-PGM         (A8)                                                   
1 +TSXPRESS-FROM-STDWEB-SVC(L)                                             
1 +FROM             (A8)                         
1 +FROM-TMSTP       (A26)                        
END-DEFINE                                                                 

DEFINE WINDOW ADD-WARNING                                                  
  SIZE 14*55                                                               
  BASE  5/15                                                               
  TITLE 'All Spots Updated'                                                
  CONTROL SCREEN                                                           
  FRAMED ON (CD=YE)                                                        
DEFINE WINDOW SSSG-WARNING                       
  SIZE 14*55                                                               
  BASE  5/15                                                               
  TITLE 'SSSG Warning'                                                     
  CONTROL SCREEN                                                           
  FRAMED ON (CD=YE)                              
DEFINE WINDOW DEL-OVFLOWS                                                  
  SIZE 13*50                                                               
  BASE  5/15                                                               
  TITLE 'Overflow Trks Removed'                                            
  CONTROL SCREEN                                                           
  FRAMED ON (CD=YE)                                                        
DEFINE WINDOW ADD-VERIFY                                                   
  SIZE 12*57                                                               
  BASE  5/15                                                               
  TITLE 'Verify If Correct'                                                
  CONTROL SCREEN                                                           
  FRAMED ON (CD=YE)                                                        
DEFINE WINDOW RSET-CISS-INV                                                
  SIZE 13*50                                                               
  BASE  5/15                                                               
  TITLE 'Reset CISS Inv'                                                   
  CONTROL SCREEN                                                           
  FRAMED ON (CD=YE)                                                        
DEFINE WINDOW SSI-DISPLAY                        
  SIZE 20*60                                                               
  BASE  5/15                                                               
  TITLE 'SSI Display'                                                      
  CONTROL SCREEN                                                           
  FRAMED ON (CD=RE)                                                        
DEFINE WINDOW TMTRKS-ENTRY                       
  SIZE 18*60                                                               
  BASE  5/11                                                               
  TITLE 'TMTRKS-ENTRY'                                                     
  CONTROL SCREEN                                                           
  FRAMED ON (CD=RE)                              
FORMAT PS=23 KD=ON LS=133 ZP=OFF                                           
MOVE EDITED *DATX(EM=YYYY-MM-DD) TO #CURR-DT                               
#PROGRAM  := *PROGRAM                                                      
#USER-ID  := *USER                                                         
#CLOSE-CV := (AD=P)                                                        
SELECT 'Y' INTO #OPEN-FIELDS FROM OM-TWOR_CODES                            
  WHERE APPL_SUBSYS_CD= #PROGRAM                                           
    AND CD_NME = #USER-ID                                                  
  <<FETCH FIRST 1 ROW ONLY>>                                               
  #CLOSE-CV := (AD=U CD=GR)                                                
END-SELECT                                                                 
INCLUDE STDC0020 '#PROGRAM'                                                
IF +TSXPRESS-FROM-STDWEB-SVC                                               
  FETCH 'TSXPCDID'                                                         
END-IF                                                                     
PERFORM START-OF-PROGRAM                                                   
COMPRESS #ACTIONS TO #VAL-ACT WITH DELIMITER ','                           
COMPRESS '(' #VAL-ACT ')' TO #VAL-ACT LEAVING NO SPACE                     
RESET #FROM-CDI-AUDIT                            
IF *DATA = 1                                     
  INPUT #CDI-AUDIT-KEY-ADD                                                 
  #KEY := #CDI-AUDIT-KEY                                                   
  RELEASE STACK                                                            
  IF #CDI-AUDIT-OPTION = 'HSTRY'                 
    #CO-ABBR := 'BNSF'                                                     
    #ACTION  := 'D'                                                        
    #FROM-CDI-AUDIT := TRUE                                                
    #DOING-RESTORE := TRUE                                                 
    PERFORM FIND-RECORD-HSTRY                                              
    #ACTION  := 'A'                                                        
    RESET #FROM-CDI-AUDIT                                                  
  ELSE                                                                     
    #CO-ABBR := 'BNSF'                                                     
    #ACTION  := 'D'                                                        
    #FROM-CDI-AUDIT := TRUE                                                
    PERFORM FIND-RECORD                                                    
    RESET #ACTION #FROM-CDI-AUDIT                                          
  END-IF                                         
ELSE                                             
  CM-TDEST_INST.NOTF_CD     := 'F'               
  CM-TDEST_INST.CP_FORM     := 'D'               
  CM-TDEST_INST.INV_FMT_CD  := 'D'               
  CM-TDEST_INST.LD_MTY_NOTF := 'B'               
  CM-TDEST_INST.CP_EXCP     := 'Y'               
  CM-TDEST_INST.SWFL_FMT_CD := 'D'               
  CM-TDEST_INST.ORD_TRK_EXCP:= 'B'               
END-IF                                           
PROG. REPEAT     
  #WARN-CISS-INV := TRUE                         
  #WARN-OVF-TRK  := TRUE                         
  #CCCR-EXCP := FALSE                                                      
  #CCCR-UPD  := FALSE                                                      
  RESET INITIAL #TTERROR                         
  RESET #CUST-NTFY-PSWD #CCCR-ADD #FAX-NUMB OS-VCCCR_NOTF_SUBSC            
    #CCCR-PRESENT                                                          
  NEW-SCREEN. REPEAT   
    
    DECIDE ON FIRST VALUE #PANEL                                           
      VALUES 1 :#MAX-PANELS IGNORE 
      VALUES -999:0 #PANEL := #MAX-PANELS 
      NONE #PANEL := 1                    
    END-DECIDE                                                             
    #LEFT-PROMPT1  := #LEFT-PROMPTS(#PANEL)                                
    #RIGHT-PROMPT1 := #RIGHT-PROMPTS(#PANEL)                               
    PERFORM BEFORE-INPUT                                                   
    DECIDE ON FIRST VALUE #PANEL                                           
      VALUE 1                                                              
        PERFORM  CHECK-AUTOWAYBILL-RELEASE       
        PERFORM  BLANK-LST-USED-DT                                         
        INPUT WITH TEXT MSG-INFO.##MSG USING MAP 'CDIMIMN1'                
        MOVE RIGHT CM-TDEST_INST.ZTS TO CM-TDEST_INST.ZTS                  
        IF CM-TDEST_INST.ZTS NE MASK (NNNNNN) AND                          
            CM-TDEST_INST.ZTS NE MASK (' 'NNNNN)                           
         MOVE LEFT CM-TDEST_INST.ZTS TO CM-TDEST_INST.ZTS 
        END-IF                                                             
      VALUE 2                                                              
        INPUT WITH TEXT MSG-INFO.##MSG USING MAP 'CDIMIMN2'                
      NONE IGNORE                                                          
    END-DECIDE                                                             
    IF #DIRECT-COMMAND NE ' '                                              
      CALLNAT 'NAVAAN01' #DIRECT-COMMAND                                   
    END-IF                                                                 
    IF #PANEL = 1 AND #ACTION = 'M'                                        
      IF #DIV-CV MODIFIED AND #READ-DIV > ' '    
          AND NOT #READ-DIV = CM-TDEST_INST.BNSF_DIV_CD                    
        REINPUT 'Cannot modify Division' (CD=RE)                           
          MARK *CM-TDEST_INST.BNSF_DIV_CD (AD=U CD=RE) ALARM               
      END-IF                                                               
    END-IF                                                                 
    RESET MSG-INFO.##MSG #ROAD-ENTERED                                     
    IF *PF-KEY = 'PA1'                                                     
      #PA1 := TRUE                                                         
    END-IF                                                                 
    CALLNAT 'MSGNB001' +MESSAGE MSG-INFO.##MSG +TIME_ZONE                  
    IF #PA1                                                                
      RESET #PA1                                                           
      ESCAPE TOP                                                           
    END-IF                                                                 
    RESET #SCROLLING                                                       
    IF *PF-KEY = 'PF12' OR #ACTION = '.'                                   
      IF +FROM= 'TSKWB'                          
        ESCAPE BOTTOM(PROG.)                                               
      END-IF                                                               
      IF *COM NE ' '                             
        CALLNAT 'STDNSCOM' STDASCOM                                        
      END-IF                                                               
      IF #OVF-TRK-FLG                            
        PERFORM FORMAT-REFORMAT                                            
        COMPRESS #ACTION 'Action aborted ' INTO MSG-INFO.##MSG             
        #COMMIT := FALSE                                                   
        ESCAPE TOP                                                         
      END-IF                                     
      IF #PANEL = 2                                                        
        #PANEL := 1                                                        
        #SCROLLING := TRUE                                                 
      ELSE                                                                 
        FETCH #PREVIOUS-PROGRAM                                            
      END-IF                                                               
    END-IF                                                                 
    PERFORM AFTER-INPUT                                                    
    PERFORM FIND-LOG-DATE-TIME                   
    DECIDE ON FIRST *PF-KEY                                                
      VALUE 'PF6'                                                          
        IF #PANEL = 1 AND                                                  
            ((CM-TDEST_INST.CP_CD = 'F' OR= 'G')                           
            OR CM-TDEST_INST.NOTF_CD = 'F')                                
          #PANEL := 2                                                      
        ELSE                                                               
          #PANEL := 1                                                      
        END-IF                                                             
      VALUE 'PF9', 'PF11'                                                  
        ASSIGN CDIANUMB.#OPTION   = 'CDINB1'                               
        ASSIGN CDIANUMB.#CUSTOMER-633 = #S-CUST_633                        
        ASSIGN CDIANUMB.#CITY-333 = #S-DEST_CITY_333                       
        ASSIGN CDIANUMB.#STATE    = #S-DEST_ST                             
        CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                               
        IF CDIANUMB.#NUMBER = 0                                            
          REINPUT 'Customer at station must exist in CDI prior to PF9'-    
            '/PF11' (CD=RE) ALARM                                          
        END-IF                                                             
        IF *PF-KEY = 'PF11' AND #TRACK-TYPE = 'S' OR= 'R' OR= 'B'          
          REINPUT 'Overflow tracks are not permitted with Track Types' -   
            ' "S", "R", or "B".' (CD=RE) ALARM                             
        END-IF   
        IF *PF-KEY = 'PF9'                                                 
          CALLNAT 'CDINRPTG' +CO_ABBR                                      
            #KEY-PARM MSG-INFO.##MSG #333-ST +TIME_ZONE #TOTAL-STATIONS    
            CM-TDEST_INST.BNSF_DIV_CD                                      
            CM-TDEST_INST.TRK_LSED_FLG           
        ELSE                                                               
          CALLNAT 'CDINOVFL'                                               
            +CO_ABBR #KEY-PARM MSG-INFO.##MSG #333-ST +TIME_ZONE           
            CM-TDEST_INST.USBL_TRK_PRF                                     
            CM-TDEST_INST.BNSF_DIV_CD                
        END-IF                                                             
        ESCAPE TOP  
      VALUE 'PF5'                                
        IF #S-CUST_633 > ' ' AND #S-DEST_CITY_333 > ' '                    
            AND #S-DEST_ST > ' '                                           
          CALLNAT 'CDINVCRF' +MESSAGE +CO_ABBR #S-CUST_633                 
            #S-DEST_CITY_333 #S-DEST_ST #333-ST +TIME_ZONE                 
        ELSE                                                               
          REINPUT 'Display the record before pressing PF5' (CD=RE) ALARM   
        END-IF                                   
      VALUE 'PF10'                                                         
        CALLNAT 'CDINBLOG' +CO_ABBR #LOG-KEY 
          #333-ST  +TIME_ZONE  #PRINTER                                    
          CDSELPDA DIALOG-INFO MSG-INFO                                    
      VALUE 'PF7'                                   
        IF #KEY.CUST_633 > ' ' AND #KEY.DEST_333 > ' '                     
            AND #KEY.DEST_ST  > ' ' AND #KEY.ZTS      > ' '                
          #CDI-AUDIT-KEY := #KEY                                           
          STACK TOP DATA #CDI-AUDIT-KEY                                    
          FETCH 'CDIPIMNU'                                                 
        ELSE                                                               
          REINPUT 'Display the record before pressing PF7' (CD=RE) ALARM   
        END-IF                                   
      ANY                                                                  
        #SCROLLING := TRUE                                                 
      NONE                                                                 
        IF NOT #SCROLLING AND *PF-KEY NE 'ENTR' THEN                       
          REINPUT 'Invalid program function key' ALARM                     
        END-IF                                                             
    END-DECIDE                                                             
    DECIDE FOR FIRST CONDITION                                             
      WHEN #SCROLLING IGNORE                                               
      WHEN #ACTION = ' '     MSG-INFO.##MSG := 'No action performed'       
      WHEN NONE PERFORM PROCESS-ACTIONS                                    
    END-DECIDE                                                             
    DEFINE SUBROUTINE PROCESS-ACTIONS                                      
    MOVE BY NAME CM-TDEST_INST TO #KEY-STRUCTURE                           
    MOVE BY NAME CM-TDEST_INST TO #DMR-KEY-STRUCTURE 
    RESET #LOOP-CNT                                                        
    IF #CDI-AUDIT-OPTION = 'HSTRY' AND #ACTION = 'A' 
      ASSIGN CDIANUMB.#OPTION   = 'CDINB3'                                 
      ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633               
      ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333                   
      ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST                    
      ASSIGN CDIANUMB.#ZTS-LO   = CM-TDEST_INST.ZTS                        
      CALLNAT 'CDINNUMB'                                                   
        CDIANUMB #CO-ABBR                                                  
      IF CDIANUMB.#NUMBER NE 0 THEN                                        
        #ACTION := 'M'                                                     
      END-IF                                                               
    END-IF                                       
    #MAX-CARS-CV := (AD=U)                       
    #MAX-FEET-CV:= (AD=U)                                                  
    #USBL-TRK-PRF-CV := (AD=U)                                             
    #EXCS-CARS-CV := (AD=U)                                                
    #EXCS-FEET-CV := (AD=U)                      
    IF #ACTION= 'N' OR= 'B' OR= 'D'              
      PERFORM RESET-CAP-FIELDS                                             
    END-IF                                                                 
    DECIDE ON FIRST VALUE #ACTION                                          
      VALUE #NEXT    
        SELECT * INTO VIEW UPDATE-VIEW FROM CM-TDEST_INST                  
          WHERE CO_ABBR = #CO-ABBR                                         
            AND (CUST_633 = #S-CUST_633                                    
            AND DEST_333 = #S-DEST_CITY_333                                
            AND DEST_ST  = #S-DEST_ST                                      
            AND ZTS      > #S-ZTS)                                         
            OR (CUST_633 = #S-CUST_633                                     
            AND DEST_333 = #S-DEST_CITY_333                                
            AND DEST_ST > #S-DEST_ST)                                      
            OR (CUST_633 = #S-CUST_633                                     
            AND DEST_333 > #S-DEST_CITY_333)                               
            OR CUST_633 > #S-CUST_633                                      
          ORDER BY CUST_633,DEST_333,DEST_ST,ZTS                           
          MOVE BY NAME UPDATE-VIEW TO #KEY-STRUCTURE                       
          MOVE BY NAME UPDATE-VIEW TO #DMR-KEY-STRUCTURE 
          MOVE BY NAME UPDATE-VIEW TO CM-TDEST_INST                        
          PERFORM CHECK-CDIFLLS-CUSTOMER         
          PERFORM GET-CCCR-DATA                  
          PERFORM CHECK-TEAM-TRACK               
          #DISPLAYED-KEY := #KEY                                           
          #RECORD-DISPLAYED := TRUE                                        
          #DMR-DISPLAYED := #DMR-KEY             
          #RECORD-DISPLAYED-DMR := TRUE          
          MSG-INFO.##MSG := 'Next instruction displayed'                   
          PERFORM AFTER-READ                                               
          #PANEL := 1                                                      
          ESCAPE BOTTOM (NEW-SCREEN.)                                      
        END-SELECT                                                         
        REINPUT 'End of file reached' MARK 2 ALARM                         
      VALUE #DISPLAY 
        PERFORM FIND-RECORD                                                
        RESET #ACTION                                                      
      VALUE #CLEAR   
        PERFORM CLEAR                                                      
        MSG-INFO.##MSG := 'Screen values cleared successfully'             
      VALUE #BROWSE  
        IF #DFO_ABBR > ' '                                                 
          CALLNAT 'CDINMULT' +MESSAGE +CO_ABBR   
            #KEY-PARM #ACTION MSG-INFO.##MSG #333-ST                       
            +TIME_ZONE #TSO_333 #TSO_ST                                    
            #DFO_333 #DFO_ST #PRINTER #CURS-SEL                            
        ELSE  
          IF #TSO_ABBR = ' '                                               
            RESET #TSO_333 #TSO_ST                                         
          END-IF                                                           
          CALLNAT 'CDINDIVB' +CO_ABBR                                      
            #KEY-PARM #ACTION MSG-INFO.##MSG #333-ST                       
            +TIME_ZONE #TSO_333 #TSO_ST CM-TDEST_INST.BNSF_DIV_CD          
            #PRINTER #CURS-SEL                                             
        END-IF                                                             
        IF #CURS-SEL                                                       
          #ACTION := 'D'                                                   
          #KEY := #KEY-PARM                                                
          MOVE BY NAME #KEY-STRUCTURE TO CM-TDEST_INST                     
          PERFORM FIND-RECORD                                              
          RESET #ACTION                                                    
        END-IF                                                             
        RESET #ACTION                                                      
      VALUE #RECALL  
        MOVE BY NAME UPDATE-VIEW TO CM-TDEST_INST                          
        PERFORM GET-CCCR-DATA                    
        COMPRESS 'Last displayed INSTRUCTION has been recalled'            
          ', Use "' #ADD '" to add' TO MSG-INFO.##MSG LEAVING NO           
        PERFORM AFTER-READ                                                 
        RESET #ACTION                                                      
      VALUES #PURGE,#MODIFY                                                
        IF NOT #RECORD-DISPLAYED OR (#DISPLAYED-KEY NE #KEY                
        AND #ACTION = #PURGE AND #RECORD-DISPLAYED )                       
          PERFORM FIND-RECORD                                              
        ELSE                                                               
          IF #ACTION = #MODIFY AND  #DISPLAYED-KEY NE #KEY                 
            IF #CUST-CV MODIFIED  AND #DEST-CV MODIFIED                    
            AND #ZTS-CV MODIFIED                                           
              REINPUT 'Customer or Dest-st or Zntksp cannot be modified'   
                (CD=RE) MARK *CM-TDEST_INST.CUST_633 (CD=RE AD=U)          
                *#DEST_ABBR (CD=RE AD=U)                                   
                *CM-TDEST_INST.ZTS(CD=RE AD=U) ALARM                       
            END-IF                                                         
            IF #CUST-CV MODIFIED AND #DEST-CV MODIFIED                     
              REINPUT 'Customer or dest-st cannot be modified.'(CD=RE)     
                MARK *CM-TDEST_INST.CUST_633(CD=RE AD=U)                   
                *#DEST_ABBR (CD=RE AD=U)ALARM                              
            END-IF                                                         
            IF #CUST-CV MODIFIED  AND #ZTS-CV MODIFIED                     
           REINPUT 'Customer name or Zntksp cannot be modified.' (CD=RE)   
                MARK *CM-TDEST_INST.CUST_633(CD=RE AD=U)                   
                *CM-TDEST_INST.ZTS(CD=RE AD=U)                             
            END-IF                                                         
            IF #DEST-CV MODIFIED  AND #ZTS-CV MODIFIED                     
              REINPUT 'Dest-st or Zntksp cannot be modified.' (CD=RE)      
                MARK *#DEST_ABBR(CD=RE AD=U)                               
                *CM-TDEST_INST.ZTS(CD=RE AD=U)                             
            END-IF                                                         
            IF #CUST-CV MODIFIED                                           
              REINPUT 'Customer name cannot be modified.' (CD=RE)          
                MARK *CM-TDEST_INST.CUST_633 (CD=RE AD=U)                  
            END-IF                                                         
            IF #DEST-CV MODIFIED                                           
              REINPUT 'Dest-st cannot be modified.' (CD=RE)                
                MARK *#DEST_ABBR (CD=RE AD=U)                              
            END-IF                                                         
            IF #ZTS-CV MODIFIED                                            
              REINPUT 'Zntksp cannot be modified.' (CD=RE)                 
                MARK *CM-TDEST_INST.ZTS (CD=RE AD=U)                       
            END-IF                                                         
            PERFORM UPDATE-EDITS                                           
          END-IF                                                           
          IF #ACTION = #MODIFY AND #DISPLAYED-KEY NE #KEY                  
            #KEY-MODIFIED := TRUE                                          
            MOVE BY NAME UPDATE-VIEW TO #KEY-STRUCTURE                     
            PERFORM CHECK-CDIFLLS-CUSTOMER       
            FIND CM-TDEST_STN_TRK_RNG                                      
              WITH CO_ABBR = #CO-ABBR                                      
               AND CUST_633 = #KEY.CUST_633                                
               AND DEST_333 = #KEY.DEST_333                                
               AND DEST_ST = #KEY.DEST_ST                                  
               AND ZTS = #KEY.ZTS                                          
              CALLNAT 'STDN0040' #CO-ABBR CM-TDEST_INST.DEST_333           
                CM-TDEST_INST.DEST_ST                                      
                CM-TDEST_STN_TRK_RNG.ARR_TRK_NUMB_LOW #BAD-TRK            151 
              IF #BAD-TRK = 'Y'                                            
                REINPUT 'Cannot modify Station, Track range not valid.'    
                  (CD=RE) MARK *#DEST_ABBR (CD=RE AD=U) ALARM              
              END-IF                                                       
              CALLNAT 'STDN0040' #CO-ABBR CM-TDEST_INST.DEST_333           
                CM-TDEST_INST.DEST_ST                                      
                CM-TDEST_STN_TRK_RNG.ARR_TRK_NUMB_HIGH #BAD-TRK            
              IF #BAD-TRK = 'Y'                                            
                REINPUT 'Cannot modify Station, Track range not valid.'    
                  (CD=RE) MARK *#DEST_ABBR (CD=RE AD=U) ALARM              
              END-IF                                                       
            END-FIND                                                       
          END-IF                                                           
          IF #ACTION = #MODIFY AND #DMR-DISPLAYED NE #DMR-KEY              
            #DMR-MODIFIED :=  TRUE               
          END-IF                                                           
          SELECT SINGLE * INTO VIEW UPDATE-VIEW-1 FROM CM-TDEST_INST       
            WHERE CO_ABBR = #CO-ABBR                                       
              AND CUST_633 = #KEY.CUST_633                                 
              AND DEST_333 = #KEY.DEST_333                                 
              AND DEST_ST  = #KEY.DEST_ST                                  
              AND ZTS      = #KEY.ZTS                                      
            RESET #SEND-EMAIL-1 #SEND-EMAIL-2                              
            RESET #SEND-EMAIL-3                  
            RESET #SEND-EMAIL-4                  
            IF #ACTION = #MODIFY                                           
              RESET #DEL_FAX                     
              DECIDE FOR FIRST CONDITION                                   
                WHEN (NOT (UPDATE-VIEW-1.CP_CD = 'F' OR= 'G')              
                AND UPDATE-VIEW-1.NOTF_CD NE 'F')                          
                AND ((CM-TDEST_INST.CP_CD   = 'F' OR = 'G')                
                OR CM-TDEST_INST.NOTF_CD = 'F'  )                          
                  IF NOT(#MOD_FAX)                                         
                    PERFORM NEW-TELEPHONE-NO                               
                    PERFORM FORMAT-REFORMAT                                
                  END-IF                                                   
                  SELECT 'Y' INTO #CCCR-ADD FROM CM-TDEST_INST             
                    WHERE CUST_633      = UPDATE-VIEW-1.CUST_633           
                      AND DEST_333      = UPDATE-VIEW-1.DEST_333           
                      AND DEST_ST       = UPDATE-VIEW-1.DEST_ST            
                      AND CO_ABBR       = #CO-ABBR                         
                      AND NOTF_TEL_NUMB = UPDATE-VIEW-1.NOTF_TEL_NUMB      
                      AND ZTS           <> UPDATE-VIEW-1.ZTS               
                    FETCH FIRST 1 ROW ONLY                                 
                    IF NO RECORDS FOUND                                    
                      #CCCR-EXCP := TRUE                                   
                      ESCAPE BOTTOM                                        
                    END-NOREC                                              
                    #CCCR-UPD := TRUE                                      
                  END-SELECT                                               
                  PERFORM FIND-CURRENT-PASSWORD                            
                WHEN ((UPDATE-VIEW-1.CP_CD   = 'F' OR = 'G')               
                OR UPDATE-VIEW-1.NOTF_CD = 'F')                            
                AND (NOT (CM-TDEST_INST.CP_CD = 'F' OR= 'G')               
                AND CM-TDEST_INST.NOTF_CD NE 'F')                          
                  #DEL_FAX := TRUE                  
                WHEN UPDATE-VIEW-1.NOTF_TEL_NUMB                           
                     NE CM-TDEST_INST.NOTF_TEL_NUMB                        
                AND ((CM-TDEST_INST.CP_CD   = 'F' OR = 'G')                
                OR CM-TDEST_INST.NOTF_CD = 'F')                            
                  IF NOT(#MOD_FAX)                                         
                    PERFORM FORMAT-TIME                                    
                    PERFORM NEW-TELEPHONE-NO                               
                    PERFORM FORMAT-REFORMAT                                
                  END-IF                                                   
                  SELECT 'Y' INTO #CCCR-ADD FROM CM-TDEST_INST             
                    WHERE CUST_633 = UPDATE-VIEW-1.CUST_633                
                      AND DEST_333 = UPDATE-VIEW-1.DEST_333                
                      AND DEST_ST = UPDATE-VIEW-1.DEST_ST                  
                      AND CO_ABBR = #CO-ABBR                               
                      AND NOTF_TEL_NUMB = UPDATE-VIEW-1.NOTF_TEL_NUMB      
                      AND ZTS <> UPDATE-VIEW-1.ZTS                         
                    FETCH FIRST 1 ROW ONLY                                 
                    IF NO RECORDS FOUND                                    
                      #CCCR-UPD := TRUE                                    
                      ESCAPE BOTTOM                                        
                    END-NOREC                                              
                  END-SELECT                                               
                  PERFORM FIND-CURRENT-PASSWORD                            
                  #DEL_FAX := TRUE               
                WHEN #KEY-MODIFIED AND ((CM-TDEST_INST.CP_CD   = 'F'       
                OR = 'G') OR CM-TDEST_INST.NOTF_CD = 'F'  )                
                  #ADD_FAX := TRUE                                         
                  #CCCR-UPD := TRUE              
                  PERFORM FIND-CURRENT-PASSWORD  
                WHEN NONE                                                  
                  IGNORE                                                   
              END-DECIDE                                                   
            END-IF                                                         
            IF #ACTION = #PURGE                                            
              PERFORM OVF-TRK-WARNING            
              ASSIGN #OPTION = 'CHKKBC'                                    
              PERFORM CHECK-KNOWLEDGE-BASED-SYSTEM                         
              IF #KB-CUST-EXIST                                            
                REINPUT 'Customer exist in Knowledge Based System,'        
                  - ' purge from KB first.' (CD=RE) ALARM                  
              ELSE                                                         
                PERFORM CHECK-CDIFLLS-CUSTOMER   
                #SEND-EMAIL-1 := TRUE                                      
              END-IF                                                       
            END-IF                                                         
            IF #ACTION = #MODIFY                                           
              IF NOT (#TRACK-TYPE = 'Y' OR= 'N' OR= 'P') 
              AND UPDATE-VIEW-1.CISS_SWTCH_CD > ' '                        
                INPUT WINDOW = 'RSET-CISS-INV' (IP=OFF)                    
                  / 3X '           **** WARNING ****'  (CD=RE)             
                  / 3X 'The CISS Inv flag will be removed since' (CD=TU)   
                  / 3X 'only valid for Industry Tracks (track  ' (CD=TU)   
                  / 3X 'types "Y", "N", or "P").               ' (CD=TU)   
                  // 3X 'Press ENTER to continue with change   ' (CD=NE)   
                  / 3X 'or'             (CD=NE)                            
                  / 3X 'PF12 to Cancel' (CD=NE)                            
                IF NOT (*PF-KEY = 'ENTR' OR= 'PF12')                       
                  REINPUT                                                  
                    'Please press "Enter" to confirm or PF12 to cancel'    
                    (CD=RE) ALARM                                          
                END-IF                                                     
                IF *PF-KEY = 'PF12'                                        
                  ESCAPE BOTTOM(NEW-SCREEN.)                               
                END-IF                                                     
                RESET CM-TDEST_INST.CISS_SWTCH_CD                          
              END-IF                                                       
              IF NOT (CM-TDEST_INST.PVT_SWTCH = 'Y' OR= 'R')               
              AND CM-TDEST_INST.CISS_SWTCH_CD > ' '                        
                INPUT WINDOW = 'RSET-CISS-INV' (IP=OFF)                    
                  / 3X '           **** WARNING ****'  (CD=RE)             
                  / 3X 'The CISS Inv flag will be removed since' (CD=TU)   
                  / 3X 'only valid with Private Switching codes' (CD=TU)   
                  / 3X '"Y" or "R".                            ' (CD=TU)   
                  // 3X 'Press ENTER to continue with change   ' (CD=NE)   
                  / 3X 'or'             (CD=NE)                            
                  / 3X 'PF12 to Cancel' (CD=NE)                            
                IF NOT (*PF-KEY = 'ENTR' OR= 'PF12')                       
                  REINPUT                                                  
                    'Please press "Enter" to confirm or PF12 to cancel'    
                    (CD=RE) ALARM                                          
                END-IF                                                     
                IF *PF-KEY = 'PF12'                                        
                  ESCAPE ROUTINE                                           
                END-IF                                                     
                RESET CM-TDEST_INST.CISS_SWTCH_CD                          
              END-IF                                    
              IF UPDATE-VIEW-1.OPEN_GATE_FLG                               
                  NE CM-TDEST_INST.OPEN_GATE_FLG                           
                IF CM-TDEST_INST.OPEN_GATE_FLG = 'N' OR = ' '              
                AND UPDATE-VIEW-1.OPEN_GATE_FLG = 'N' OR = ' '             
                  IGNORE                                                   
                ELSE                                                       
                  #SEND-EMAIL-1 := TRUE                                    
                END-IF                                                     
              END-IF                                                       
              IF UPDATE-VIEW-1.AUTO_ORDER                                  
                  NE CM-TDEST_INST.AUTO_ORDER                              
                IF CM-TDEST_INST.AUTO_ORDER = 'N' OR = ' '                 
                AND UPDATE-VIEW-1.AUTO_ORDER = 'N' OR = ' '                
                  IGNORE                                                   
                ELSE                                                       
                  #SEND-EMAIL-1 := TRUE                                    
                END-IF                                                     
              END-IF                                                       
              IF UPDATE-VIEW-1.CP_EXCP                       
                  NE CM-TDEST_INST.CP_EXCP                                 
              OR UPDATE-VIEW-1.SWFL_FMT_CD                                 
                  NE CM-TDEST_INST.SWFL_FMT_CD                             
              OR UPDATE-VIEW-1.ORD_TRK_EXCP                                
                  NE CM-TDEST_INST.ORD_TRK_EXCP                            
              OR #SAVE-TRACK-TYPE NE #TRACK-TYPE                           
              OR #SAVE-MAX-CARS   NE #MAX-CARS                             
              OR #SAVE-MAX-FEET   NE #MAX-FEET                             
              OR UPDATE-VIEW-1.MAX_TRK_CARS                                
                  NE CM-TDEST_INST.MAX_TRK_CARS                            
              OR UPDATE-VIEW-1.MAX_TRK_FEET                                
                  NE CM-TDEST_INST.MAX_TRK_FEET                            
              OR UPDATE-VIEW-1.USBL_TRK_PRF                                
                  NE CM-TDEST_INST.USBL_TRK_PRF                            
              OR UPDATE-VIEW-1.INV_FMT_CD           
                  NE CM-TDEST_INST.INV_FMT_CD       
              OR UPDATE-VIEW-1.CP_FORM              
                  NE CM-TDEST_INST.CP_FORM          
              OR UPDATE-VIEW-1.PVT_SWTCH            
                  NE CM-TDEST_INST.PVT_SWTCH        
              OR UPDATE-VIEW-1.CISS_SWTCH_CD        
                  NE CM-TDEST_INST.CISS_SWTCH_CD    
              OR UPDATE-VIEW-1.CUST_633             
                  NE CM-TDEST_INST.CUST_633         
              OR UPDATE-VIEW-1.DEST_333             
                  NE CM-TDEST_INST.DEST_333         
              OR UPDATE-VIEW-1.DEST_ST              
                  NE CM-TDEST_INST.DEST_ST          
              OR UPDATE-VIEW-1.ZTS                  
                  NE CM-TDEST_INST.ZTS              
              OR UPDATE-VIEW-1.LTRK_AGRM_ID         
                  NE CM-TDEST_INST.LTRK_AGRM_ID     
              OR UPDATE-VIEW-1.NOTF_TEL_NUMB        
                  NE CM-TDEST_INST.NOTF_TEL_NUMB                           
              OR UPDATE-VIEW-1.VC_TEL_NUMB                                 
                  NE CM-TDEST_INST.VC_TEL_NUMB                             
              OR UPDATE-VIEW-1.CP_NOTF_PERS                                
                  NE CM-TDEST_INST.CP_NOTF_PERS                            
              OR UPDATE-VIEW-1.NOTF_PERSON                                 
                  NE CM-TDEST_INST.NOTF_PERSON      
                #SEND-EMAIL-1 := TRUE                                      
              END-IF                                                       
            END-IF                                                         
            IF (#ACTION = #MODIFY OR= #PURGE)                              
            AND (UPDATE-VIEW-1.TRK_LSED_FLG = 'R' OR = 'B' OR = 'S'        
            OR CM-TDEST_INST.TRK_LSED_FLG = 'R' OR = 'B' OR = 'S')         
              ASSIGN #SEND-EMAIL-2 = TRUE                                  
            END-IF                               
            IF (#ACTION = #MODIFY                
            AND ((#SAVE-TRACK-TYPE = 'T' AND #TRACK-TYPE NE 'T')           
            OR  (#SAVE-TRACK-TYPE NE 'T' AND #TRACK-TYPE = 'T'))           
            OR (#ACTION = #PURGE AND #TRACK-TYPE = 'T'))                   
              ASSIGN #SEND-EMAIL-3 = TRUE                                  
            END-IF                                                         
            IF (#ACTION = #MODIFY                
            AND ((#SAVE-TRACK-TYPE = 'Y' AND #TRACK-TYPE NE 'Y')           
            OR  (#SAVE-TRACK-TYPE NE 'Y' AND #TRACK-TYPE = 'Y'))           
            OR (#ACTION = #PURGE AND #TRACK-TYPE = 'Y'))                   
              ASSIGN #SEND-EMAIL-4 = TRUE                                  
            END-IF                                                         
          END-SELECT                                                       
          IF #ACTION = #MODIFY                  
          AND (#TRACK-TYPE = 'T'                 
          AND NOT (CM-TDEST_INST.BNSF_DIV_CD = 'MRL'))                     
            PERFORM CHECK-MODIFY-TEAM-TRK        
            IF #TTERROR                          
              ESCAPE BOTTOM(NEW-SCREEN.)         
            END-IF                               
          END-IF                                 
          PERFORM CONFIRM-NOTES                                            
          IF NOT #COMMIT                                                   
            ESCAPE BOTTOM(NEW-SCREEN.)                                     
          END-IF                                                           
          IF #DEL_FAX OR #ADD_FAX                                          
            PERFORM CHECK-FOR-PHONE-NO                                     
          END-IF                                                           
          IF #SEND-EMAIL-1                                 
            ASSIGN #OPTION = 'CHANGE'                                      
            IF #ACTION = 'M'                            
            AND (UPDATE-VIEW-1.CUST_633 ^= CM-TDEST_INST.CUST_633          
            OR UPDATE-VIEW-1.DEST_333 ^= CM-TDEST_INST.DEST_333            
            OR UPDATE-VIEW-1.DEST_ST ^= CM-TDEST_INST.DEST_ST              
            OR UPDATE-VIEW-1.ZTS ^= CM-TDEST_INST.ZTS)   
              #ACTION := 'P'                                               
              #SV-CUST := CM-TDEST_INST.CUST_633                           
              #SV-DEST := CM-TDEST_INST.DEST_333             
              #SV-ST := CM-TDEST_INST.DEST_ST                
              #SV-ZTS := CM-TDEST_INST.ZTS                   
              CM-TDEST_INST.CUST_633 := UPDATE-VIEW-1.CUST_633             
              CM-TDEST_INST.DEST_333 := UPDATE-VIEW-1.DEST_333 
              CM-TDEST_INST.DEST_ST := UPDATE-VIEW-1.DEST_ST 
              CM-TDEST_INST.ZTS := UPDATE-VIEW-1.ZTS         
              #FLLS.CUST_633    := UPDATE-VIEW-1.CUST_633    
              #FLLS.DEST_333    := UPDATE-VIEW-1.DEST_333                  
              #FLLS.DEST_ST     := UPDATE-VIEW-1.DEST_ST                   
              #FLLS.ZTS         := UPDATE-VIEW-1.ZTS                       
              #FLLS.N-CUST      := #SV-CUST                                
              #FLLS.N-DEST      := #SV-DEST                                
              #FLLS.N-ST        := #SV-ST                                  
              #FLLS.N-ZTS       := #SV-ZTS                                 
              #FLLS.USER        := *USER                                   
              #FLLS.CO-ABBR     := #CO-ABBR                                
              #FLLS.ACTION      := 'M'                                     
              COMPRESS 'M:' #FLLS.CUST_633 ':' #FLLS.DEST_333 ':'          
                #FLLS.DEST_ST ':' #FLLS.ZTS ':' #FLLS.N-CUST ':'           
                #FLLS.N-DEST ':' #FLLS.N-ST ':' #FLLS.N-ZTS ':'            
                #FLLS.USER INTO #CDIFLLS LEAVING NO                        
              
              PERFORM SEND-EMAIL-CHANGES 
              #ACTION := 'A'                                               
              CM-TDEST_INST.CUST_633 := #SV-CUST                           
              CM-TDEST_INST.DEST_333 := #SV-DEST             
              CM-TDEST_INST.DEST_ST := #SV-ST                
              CM-TDEST_INST.ZTS := #SV-ZTS                   
              RESET UPDATE-VIEW-1 #SAVE-TRACK-TYPE #SAVE-MAX-CARS          
                #SAVE-MAX-FEET                                             
              PERFORM SEND-EMAIL-CHANGES 
              #ACTION := 'M'                                               
              IF #INDALSE1.#EXISTS               
                PERFORM KICK-OFF-CDIFLLS-UPDATE                            
              END-IF                             
            ELSE                                        
              PERFORM SEND-EMAIL-CHANGES                                   
            END-IF                                      
          END-IF                                                           
          IF #SEND-EMAIL-2                                 
            ASSIGN #OPTION = 'LEASED'                                      
            PERFORM SEND-EMAIL-CHANGES                                     
          END-IF                                                           
          IF #SEND-EMAIL-3                 
            ASSIGN #OPTION = 'TEAMTK'                                      
            PERFORM SEND-EMAIL-CHANGES                                     
          END-IF                                                           
          IF #SEND-EMAIL-4                    
            ASSIGN #OPTION = 'LSEDTK'                                      
            PERFORM SEND-EMAIL-CHANGES                                     
          END-IF                                                           
          RESET #DEL-OVFL-TRKS                                             
          IF NOT (UPDATE-VIEW.TRK_LSED_FLG = 'S' OR= 'R' OR= 'B') 
          AND (CM-TDEST_INST.TRK_LSED_FLG = 'S' OR= 'R' OR= 'B')           
          AND #TOTL-OVFLW-TRKS > 0                                         
            INPUT WINDOW = 'DEL-OVFLOWS' (IP=OFF)                          
              / 3X '           **** WARNING ****'  (CD=RE)                 
              / 3X 'All overflow tracks for this track will' (CD=TU)       
              / 3X 'automatically be removed since leased  ' (CD=TU)       
              / 3X 'tracks cannot have overflow tracks.' (CD=TU)           
              // 3X 'Press ENTER to continue' (CD=NE)                      
              / 3X 'or'             (CD=NE)                                
              / 3X 'PF12 to Cancel' (CD=NE)                                
            IF NOT (*PF-KEY = 'ENTR' OR= 'PF12')                           
              REINPUT                                                      
                'Please press "Enter" to confirm or PF12 to cancel'        
                (CD=RE) ALARM                                              
            END-IF                                                         
            IF *PF-KEY = 'PF12'                                            
              ESCAPE BOTTOM(NEW-SCREEN.)                                   
            END-IF                                                         
            #DEL-OVFL-TRKS := TRUE                                         
          END-IF   
          FIND(1) UPDATE-VIEW-1                                            
            WITH CO_ABBR = #CO-ABBR                                        
             AND CUST_633 = #KEY.CUST_633                                  
             AND DEST_333 = #KEY.DEST_333                                  
             AND DEST_ST  = #KEY.DEST_ST                                   
             AND ZTS      = #KEY.ZTS                                       
            IF #ACTION = 'P'                                               
              #ACTION-AUDT := 'P'                                          
              PERFORM STORE-AUDIT                                          
            END-IF                                                         
            PERFORM BEFORE-ET                                              
            IF #LOOP-CNT > 200                                             
              PERFORM CLEAR                                                
              ESCAPE BOTTOM (NEW-SCREEN.)                                  
            END-IF                                                         
            #UPDATE-PERFORMED := TRUE                                      
            IF #ACTION = #MODIFY AND #KEY-MODIFIED                         
              PERFORM STORE-DEST-INST                                      
            END-IF                                                         
            IF #ACTION = #PURGE OR #KEY-MODIFIED OR #DEL-OVFL-TRKS         
              IF #ACTION = #PURGE                
                #FLLS.CUST_633    := CM-TDEST_INST.CUST_633                
                #FLLS.DEST_333    := CM-TDEST_INST.DEST_333                
                #FLLS.DEST_ST     := CM-TDEST_INST.DEST_ST                 
                #FLLS.ZTS         := CM-TDEST_INST.ZTS                184     
                #FLLS.N-CUST      := ' '                                   
                #FLLS.N-DEST      := ' '                                   
                #FLLS.N-ST        := ' '                                   
                #FLLS.N-ZTS       := ' '                                   
                #FLLS.USER        := *USER                                 
                #FLLS.CO-ABBR     := #CO-ABBR                              
                #FLLS.ACTION      := 'P'                                   
                COMPRESS 'P:' #FLLS.CUST_633 ':' #FLLS.DEST_333 ':'        
                  #FLLS.DEST_ST ':' #FLLS.ZTS ':' #FLLS.USER               
                  INTO #CDIFLLS LEAVING NO                                 
                PERFORM KICK-OFF-CDIFLLS-UPDATE                            
              END-IF                             
              CALLNAT 'CDINOVFM' UPDATE-VIEW.CUST_633                      
                UPDATE-VIEW.DEST_333 UPDATE-VIEW.DEST_ST                   
                UPDATE-VIEW.ZTS CM-TDEST_INST.CUST_633                     
                CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST               
                CM-TDEST_INST.ZTS CM-TDEST_INST.CO_ABBR                    
                #DATE-L #TIME-L #ACTION #DEL-OVFL-TRKS                     
              PERFORM SYNC-CCCR-PASSWORD                     
              IF NOT #DEL-OVFL-TRKS                       
                MSG-INFO.##MSG := 'Instruction purged successfully'        
              END-IF                                                       
              #OPTION := 'DELCMT'               
              PERFORM CHECK-KNOWLEDGE-BASED-SYSTEM                         
              PERFORM READ-SSI           
            END-IF                                                         
            IF #ACTION = #MODIFY                                           
              IF #KEY-MODIFIED                                             
                MOVE BY NAME CM-TDEST_INST TO #KEY-STRUCTURE               
              ELSE                                                         
                MOVE BY NAME CM-TDEST_INST TO UPDATE-VIEW-1                
                MOVE EDITED *DATX (EM=YYYY-MM-DD) TO    
                                          UPDATE-VIEW-1.LST_ACS_DT         
                UPDATE-VIEW-1.N@EXP_DT := UPDATE-VIEW-1.N@EFF_DT := 0      
                IF UPDATE-VIEW-1.EXP_DT = ' '                              
                  UPDATE-VIEW-1.N@EXP_DT := -1                             
                END-IF                                                     
                IF UPDATE-VIEW-1.EFF_DT = ' '                              
                  UPDATE-VIEW-1.N@EFF_DT := -1                             
                END-IF                                                     
                IF UPDATE-VIEW-1.USBL_TRK_PRF ^= 'C'   
                OR UPDATE-VIEW-1.OPEN_GATE_FLG ^= 'N'                      
                  UPDATE-VIEW-1.ORD_IN_CD := ' '                           
                END-IF                                                     
                IF UPDATE-VIEW-1.BUS_UNIT_CD2 =            
                   'CC' OR= 'US' OR= 'UT' OR= 'VH'                         
                  UPDATE-VIEW-1.VCR_UTRN_PRLSE := 'Y'                      
                END-IF                                     
                UPDATE 
                IF #CDI-AUDIT-OPTION  =  'HSTRY'                           
                  PERFORM RESTORE-HISTORY                                  
                END-IF                                                     
                #ACTION-AUDT := #ACTION             
                PERFORM STORE-AUDIT                 
                IF #UPD-OVERFLW-TRKS = 'Y'     
                  PERFORM UPDATE-OVERFLW-TRKS  
                END-IF                         
                IF #SAVE-TRACK-TYPE ^= #TRACK-TYPE  
                  IF #TRACK-TYPE = 'T'                                     
                    IGNORE                                                 
                  ELSE                                                     
                    CALLNAT 'CDINTEAM' CM-TDEST_INST.CUST_633              
                      CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST         
                      CM-TDEST_INST.ZTS CM-TDEST_INST.TRK_LSED_FLG         
                  END-IF                                                   
                END-IF                              
              END-IF                                                       
              CALLNAT 'CDINCSSI' CM-TDEST_INST.CUST_633                    
                CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST               
                CM-TDEST_INST.ZT CM-TDEST_INST.TEAM_TRK_FLG                
              IF (UPDATE-VIEW.USBL_TRK_CARS ^=                             
                  CM-TDEST_INST.USBL_TRK_CARS                              
              OR  UPDATE-VIEW.USBL_TRK_FEET ^=                             
                  CM-TDEST_INST.USBL_TRK_FEET                              
              OR  UPDATE-VIEW.EXCS_CARS ^= CM-TDEST_INST.EXCS_CARS         
              OR  UPDATE-VIEW.EXCS_FEET ^= CM-TDEST_INST.EXCS_FEET         
              OR UPDATE-VIEW.USBL_TRK_PRF ^= CM-TDEST_INST.USBL_TRK_PRF    
              OR UPDATE-VIEW.MAX_TRK_CARS ^= CM-TDEST_INST.MAX_TRK_CARS    
              OR UPDATE-VIEW.MAX_TRK_FEET ^= CM-TDEST_INST.MAX_TRK_FEET    
              OR UPDATE-VIEW.CP_EXCP ^= CM-TDEST_INST.CP_EXCP              
              OR UPDATE-VIEW.ORD_TRK_EXCP ^= CM-TDEST_INST.ORD_TRK_EXCP    
              OR UPDATE-VIEW.WO_CUTOF_TM_1 ^=                              
                 CM-TDEST_INST.WO_CUTOF_TM_1                               
              OR UPDATE-VIEW.WO_CUTOF_TM_2 ^=                              
                 CM-TDEST_INST.WO_CUTOF_TM_2                               
              OR UPDATE-VIEW.WO_CUTOF_TM_3 ^=                              
                 CM-TDEST_INST.WO_CUTOF_TM_3)                              
              AND NOT (#TRACK-TYPE = 'S' OR= 'R' OR= 'B')   
                PERFORM CALL-UPDT-MAX-ROUTINE                              
              END-IF                                                       
              PERFORM SYNC-CCCR-PASSWORD                     
              IF NOT (CM-TDEST_INST.TRK_LSED_FLG = 'R' OR ='S' OR ='B')    
                CALLNAT 'STDNSLAL' CM-TDEST_INST.CO_ABBR                   
                  'STNROAD '                                               
                  CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST             
                  STDASLAL-OUTPUT                                          
                IF STDASLAL-OUTPUT.ROAD(1)    NE 'SW'                      
                  CALLNAT 'OS1NSGEX' CM-TDEST_INST.DEST_333                
                    CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS                
                    CM-TDEST_INST.CO_ABBR #SVC-GRP-EXISTS                  
                  IF  #SVC-EXISTS <> 'X'                                   
                    INPUT WINDOW = 'SSSG-WARNING' (IP=OFF)                 
                      / 3X '             **** WARNING ****'  (CD=RE)       
                     / 3X 'This customer location''s ZTS was not found '   
                      (CD=TU)                                              
                     / 3X 'in SSSG.Please notify Service Design of this'   
                      (CD=TU)                                              
                      / 3X 'CDI addition to update SSSG if necessary.'     
                      (CD=TU)                                              
                      / 3X 'Press ENTER to continue.' (CD=NE)              
                    IF NOT (*PF-KEY = 'ENTR')                              
                      REINPUT 'please press enter to continue'             
                        (CD=RE) ALARM                                      
                    END-IF                                                 
                  END-IF                                                   
                END-IF                                                     
              END-IF                              
              MSG-INFO.##MSG := 'Instruction modified successfully'        

              IF #CDI-AUDIT-OPTION  NE ' '                                 
                #CDI-AUDIT-OPTION := ' '                                   
              END-IF                                                       
            END-IF                                 
          END-FIND                                                         
        END-IF 
        CM-TDEST_INST.CDI_EXP_DT := '2050-12-31' 
      VALUE #ADD   
        #ZTS := CM-TDEST_INST.ZTS                                          
        COMPRESS #ZT '00' INTO #ZTS-LO LEAVE NO                            
        COMPRESS #ZT '99' INTO #ZTS-HI LEAVE NO                            
        ASSIGN CDIANUMB.#OPTION   = 'CDICHK'       
        ASSIGN CDIANUMB.#CUSTOMER-633 =  CM-TDEST_INST.CUST_633            
        ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333                 
        ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST                  
        CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                               
        IF CDIANUMB.#NUMBER > 0                                            
          REINPUT 'CDI cannot be added. CDI already exists for '-          
            '633/333/state/track.'                                         
            (CD=RE) MARK *#ACTION (CD=RE AD=U) ALARM                       
        END-IF                                                             
        ASSIGN CDIANUMB.#OPTION   = 'OWNLSE'              
        ASSIGN CDIANUMB.#CUSTOMER-633 =  CM-TDEST_INST.CUST_633            
        ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333                 
        ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST                  
        CM-TDEST_INST.LD_MTY_CP := 'B'                                     
        CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                               
        IF CDIANUMB.#NUMBER > 0                                            
          REINPUT 'CDI cannot be added, OWNER/LESSEE record exist'         
            (CD=RE) MARK *#ACTION (CD=RE AD=U) ALARM                       
        END-IF                                                             
        ASSIGN CDIANUMB.#OPTION   = 'CDINB2'                               
        CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                               
        ASSIGN #NO-OF-SPOTS = CDIANUMB.#NUMBER                             
        IF #NO-OF-SPOTS GE 1                      
        AND NOT (#TRACK-TYPE = 'S' OR= 'R' OR= 'B')    
          INPUT WINDOW = 'ADD-WARNING' (IP=OFF)                            
            / 3X '             **** WARNING ****'  (CD=RE)                 
            / 3X 'All existing spots for customer, station, and' (CD=TU)   
            / 3X 'ZT will be automatically updated with the Max' (CD=TU)   
            / 3X 'Spot Capacity Cars/Feet, Excess Cars/Feet, ' (CD=TU)     
            / 3X 'Max Spot Preference, and Cutoff times entered' (CD=TU)   
            / 3X 'on this ZTS.' (CD=TU)                                    
            // 3X 'Press ENTER to continue' (CD=NE)                        
            / 3X 'or'             (CD=NE)                                  
            / 3X 'PF12 to Cancel' (CD=NE)                                  
          IF NOT (*PF-KEY = 'ENTR' OR= 'PF12')                             
            REINPUT 'Please press "Enter" to confirm or PF12 to cancel'    
              (CD=RE) ALARM                                                
          END-IF                                                           
          IF *PF-KEY = 'PF12'                                              
            ESCAPE BOTTOM(NEW-SCREEN.)                                     
          END-IF                                                           
        END-IF                                                             
        PERFORM CISS-INV-WARNING                       
        PERFORM SET-DEFAULT-STRT-STOP                  
        PERFORM UPDATE-EDITS                                               
        PERFORM CONFIRM-NOTES                                              
        IF NOT #COMMIT                                                     
          ESCAPE BOTTOM(NEW-SCREEN.)                                       
        END-IF                                                             
        PERFORM BEFORE-ET                                                  
        IF #LOOP-CNT > 200                                                 
          PERFORM CLEAR                                                    
          ESCAPE BOTTOM (NEW-SCREEN.)                                      
        END-IF                                                             
        PERFORM STORE-DEST-INST                                            
        MOVE BY NAME CM-TDEST_INST TO CM-TDEST_STN_RPTGS                   
        CM-TDEST_STN_RPTGS.ARR_333 := CM-TDEST_INST.DEST_333               
        CM-TDEST_STN_RPTGS.ARR_ST  := CM-TDEST_INST.DEST_ST                
        #TOTAL-STATIONS := 1                                               
        CALLNAT 'CDINSRPT' CM-TDEST_STN_RPTGS                              
        #ACTION-AUDT := #ACTION                    
        IF #CDI-AUDIT-OPTION  =  'HSTRY'         
          PERFORM RESTORE-HISTORY                                          
        END-IF                                                             
        PERFORM STORE-AUDIT                        
        IF NOT (CM-TDEST_INST.TRK_LSED_FLG = 'R' OR ='S' OR ='B')          
          CALLNAT 'STDNSLAL' CM-TDEST_INST.CO_ABBR                         
            'STNROAD ' CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST        
            STDASLAL-OUTPUT                                                
          IF STDASLAL-OUTPUT.ROAD(1) NE 'SW'                               
            CALLNAT 'OS1NSGEX' CM-TDEST_INST.DEST_333                      
              CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS                      
              CM-TDEST_INST.CO_ABBR #SVC-GRP-EXISTS                        
            IF #SVC-EXISTS <> 'X'                                          
              INPUT WINDOW = 'SSSG-WARNING' (IP=OFF)                       
                / 3X '             **** WARNING ****'  (CD=RE)             
                / 3X 'This customer location''s ZTS was not found '        
                (CD=TU)                                                    
                / 3X 'in SSSG.Please notify Service Design of this'        
                (CD=TU)                                                    
                / 3X 'CDI addition to update SSSG if neccasary ' (CD=TU)   
                / 3X 'Press ENTER to continue' (CD=NE)                     
              IF NOT (*PF-KEY = 'ENTR')                                    
                REINPUT 'PLEASE PRESS "ENTER" TO CONTINUE'                 
                  (CD=RE) ALARM                                            
              END-IF                                                       
            END-IF                                                         
          END-IF                                                           
        END-IF                                       
        IF #NO-OF-SPOTS  > 1  
        AND NOT (#TRACK-TYPE = 'S' OR= 'R' OR= 'B')    
          PERFORM CALL-UPDT-MAX-ROUTINE                                    
        END-IF                                                             
        IF #NO-OF-SPOTS = 0               
          ASSIGN #OPTION = 'ADDTSK'       
          PERFORM CHECK-KNOWLEDGE-BASED-SYSTEM                             
        END-IF                                                             
        ASSIGN #OPTION = 'CHANGE'                                          
        RESET                                                              
          UPDATE-VIEW-1.OPEN_GATE_FLG UPDATE-VIEW-1.CP_EXCP                
          UPDATE-VIEW-1.ORD_TRK_EXCP  UPDATE-VIEW-1.USBL_TRK_PRF           
          UPDATE-VIEW-1.MAX_TRK_CARS  UPDATE-VIEW-1.MAX_TRK_FEET           
          UPDATE-VIEW-1.SWFL_FMT_CD   UPDATE-VIEW-1.AUTO_ORDER             
          UPDATE-VIEW-1.DMRG_TYPE_CD               
          UPDATE-VIEW-1.INV_FMT_CD                 
          UPDATE-VIEW-1.CP_FORM                    
          UPDATE-VIEW-1.PVT_SWTCH                  
          UPDATE-VIEW-1.CISS_SWTCH_CD              
          UPDATE-VIEW-1.ORD_IN_CD                  
          UPDATE-VIEW-1.LTRK_AGRM_ID               
          UPDATE-VIEW-1.NOTF_TEL_NUMB         
          UPDATE-VIEW-1.VC_TEL_NUMB                                        
          UPDATE-VIEW-1.CP_NOTF_PERS                                       
          UPDATE-VIEW-1.NOTF_PERSON           
        RESET #SAVE-TRACK-TYPE #SAVE-MAX-CARS #SAVE-MAX-FEET               
        PERFORM SEND-EMAIL-CHANGES                                         
        IF CM-TDEST_INST.TRK_LSED_FLG = 'R' OR = 'B' OR = 'S'              
          ASSIGN #OPTION = 'LEASED'                                        
          PERFORM SEND-EMAIL-CHANGES                                       
        END-IF                                                             
        IF #TRACK-TYPE = 'T'                 
          ASSIGN #OPTION = 'TEAMTK'                                        
          PERFORM SEND-EMAIL-CHANGES                                       
        END-IF                                                             
        IF #TRACK-TYPE = 'Y'                
          ASSIGN #OPTION = 'LSEDTK'                                        
          PERFORM SEND-EMAIL-CHANGES                                       
        END-IF                                                             
        #UPDATE-PERFORMED := TRUE                                          
        IF #CHANGE                                  
          MSG-INFO.##MSG := 'The capacity values have ' -                  
            'automatically been populated with TMTRKS values.'             
        ELSE                                        
          MSG-INFO.##MSG := 'Instruction added successfully'               
          IF #CDI-AUDIT-OPTION NE ' '               
            #CDI-AUDIT-OPTION := ' '                                       
          END-IF                                    
        END-IF                                      
        CM-TDEST_INST.CDI_EXP_DT := '2050-12-31' 
      ANY                                                                  
        IF #UPDATE-PERFORMED THEN                                          
          #OPTION := 'UPDCMT'                                              
          PERFORM CHECK-KNOWLEDGE-BASED-SYSTEM                             
          CALLNAT 'STDN0501'                                               
          PERFORM UPDATE-DMR                               
          PERFORM FETCH-SSI                                
          CALLNAT 'CDINCSSI' CM-TDEST_INST.CUST_633                        
            CM-TDEST_INST.DEST_333                                         
            CM-TDEST_INST.DEST_ST                                          
            CM-TDEST_INST.ZT                                               
            CM-TDEST_INST.TEAM_TRK_FLG                                     
          PERFORM CLEAR                                                    
        END-IF                                                             
        #PANEL := 1                                                        
        ESCAPE BOTTOM(NEW-SCREEN.)                                         
      NONE                                                                 
        REINPUT 'Invalid action code:1:',#ACTION MARK *#ACTION ALARM       
    END-DECIDE                                                             
    END-SUBROUTINE 
    DEFINE SUBROUTINE SET-DEFAULT-STRT-STOP                                
    OY-TIND_FAX_CUST.WKDY_STRT_TM := OY-TIND_FAX_CUST.WKEND_STRT_TM        
      := OY-TIND_FAX_CUST.HLDY_STRT_TM := '0001'                           
    OY-TIND_FAX_CUST.WKDY_STOP_TM := OY-TIND_FAX_CUST.WKEND_STOP_TM        
      := OY-TIND_FAX_CUST.HLDY_STOP_TM := '2359'                           
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE CLEAR                                                
    #SV-DIV-CD   := CM-TDEST_INST.BNSF_DIV_CD                              
    #CDIFLLS-IND := 'N'                          
    RESET #ACTION    #RECORD-DISPLAYED #UPDATE-PERFORMED CM-TDEST_INST     
      #EFF-DT-MM     #EFF-DT-DD    #EFF-DT-YYYY #EXP-DT-MM #EXP-DT-DD      
      #EXP-DT-YYYY   #DMR-MODIFIED #RECORD-DISPLAYED-DMR #CCCR-FAX         
    MOVE BY NAME #KEY-STRUCTURE TO CM-TDEST_INST                           
    CM-TDEST_INST.BNSF_DIV_CD := #SV-DIV-CD                                
    RESET #CCCR-FULLNAME #CCCR-USER-EML OS-VCCCR_USER_ID 
      #VC-PHN #CCCR-CV #INDALSE1                
    PERFORM RESET-CAP-FIELDS         
    PERFORM AFTER-SCREEN-CLEAR                                             
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE RESET-CAP-FIELDS  
    RESET CM-TDEST_INST.MAX_TRK_FEET CM-TDEST_INST.EXCS_CARS               
      CM-TDEST_INST.EXCS_FEET #MAX-CARS #MAX-FEET                          
      CM-TDEST_INST.MAX_TRK_CARS CM-TDEST_INST.MAX_TRK_FEET                
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE FIND-RECORD                                          
    RESET INITIAL #CDI_EXP_DT-CV #ORIG-EXP-DT      
      #READ-DIV                                    
    FIND-UPDATE.                                                           
    SELECT SINGLE * INTO VIEW UPDATE-VIEW FROM CM-TDEST_INST               
        WHERE CO_ABBR = #CO-ABBR                                           
          AND CUST_633 = #KEY.CUST_633                                     
          AND DEST_333 = #KEY.DEST_333                                     
          AND DEST_ST  = #KEY.DEST_ST                                      
          AND ZTS      = #KEY.ZTS                                          
      IF NO RECORDS FOUND                                                  
        ##MSG := 'Instruction does not exist'                              
        IF #FROM-CDI-AUDIT                          
          ESCAPE ROUTINE                                                   
        END-IF                                      
        ESCAPE BOTTOM (NEW-SCREEN.)                                        
      END-NOREC                                                            
      MOVE BY NAME UPDATE-VIEW TO CM-TDEST_INST                            
      PERFORM GET-CCCR-DATA                           
      MOVE BY NAME CM-TDEST_INST TO #KEY-STRUCTURE                         
      MOVE BY NAME CM-TDEST_INST TO #DMR-KEY-STRUCTURE      
      PERFORM CHECK-CDIFLLS-CUSTOMER             
      #DISPLAYED-KEY        := #KEY                                        
      #DMR-DISPLAYED        := #DMR-KEY                     
      #RECORD-DISPLAYED := #RECORD-DISPLAYED-DMR := TRUE                   
      #HOLD-SOA         :=  CM-TDEST_INST.OPEN_GATE_FLG 
      #SAVE-MAX-TRK-FEET:=  CM-TDEST_INST.MAX_TRK_FEET                     
      DECIDE ON FIRST #ACTION                                              
        VALUE #DISPLAY    MSG-INFO.##MSG := 'Instruction Displayed'        
        VALUE #NEXT       MSG-INFO.##MSG := 'Next Instruction Displayed'   
        VALUE #MODIFY     MSG-INFO.##MSG := 'Enter Changes'                
        VALUE #PURGE MSG-INFO.##MSG:= 'Press enter to purge'               
        ANY PERFORM AFTER-READ                                             
        NONE        MSG-INFO.##MSG := 'Problem with program logic'         
      END-DECIDE                                                           
      #ORIG-EXP-DT:= CM-TDEST_INST.CDI_EXP_DT 
      IF CM-TDEST_INST.CDI_EXP_DT LT #CURR-DT 
        MOVE (AD=U CD=YE) TO #CDI_EXP_DT-CV   
      END-IF                                  
    END-SELECT                                                             
    IF #ACTION = #DISPLAY OR = #NEXT            
      CALLNAT 'STDN0260' #CO-ABBR #DEST_ABBR #S-DEST_CITY_333 #S-DEST_ST   
      CALLNAT 'OS1NSPPL' CM-TDEST_INST.ZTS #S-DEST_CITY_333 #S-DEST_ST     
        #CO-ABBR #SPOT-TIME(*) #MORE-SPOT                                  
        #PULL-TIME(*) #MORE-PULL                                           
      #ALL-SPOTS-1 := #SPOT-TIME(1)                                        
      #ALL-SPOTS-2 := #SPOT-TIME(2)                                        
      #ALL-SPOTS-3 := #SPOT-TIME(3)                                        
      #ALL-PULLS-1 := #PULL-TIME(1)                                        
      #ALL-PULLS-2  := #PULL-TIME(2)                                       
      #ALL-PULLS-3  := #PULL-TIME(3)                                       
    END-IF                                         
    IF #ACTION = #DISPLAY OR = #NEXT              
      PERFORM CHECK-TEAM-TRACK                                             
    END-IF                                                                 
    IF UPDATE-VIEW.BNSF_DIV_CD NE CM-TDEST_INST.BNSF_DIV_CD                
    OR UPDATE-VIEW.TSO_333 ^= #TSO_333              
    OR UPDATE-VIEW.TSO_ST ^= #TSO_ST                                       
    OR UPDATE-VIEW.DFO_333 ^= #DFO_333                                     
    OR UPDATE-VIEW.DFO_ST ^= #DFO_ST                
    AND NOT (#ACTION = #MODIFY OR = #PURGE)                                
      UPDT-DIV-DFO-TSO.BNSF_DIV_CD := CM-TDEST_INST.BNSF_DIV_CD            
      UPDT-DIV-DFO-TSO.TSO_333 := #TSO_333              
      UPDT-DIV-DFO-TSO.TSO_ST := #TSO_ST                                   
      UPDT-DIV-DFO-TSO.DFO_333 := #DFO_333                                 
      UPDT-DIV-DFO-TSO.DFO_ST := #DFO_ST                
      UPDATE UPDT-DIV-DFO-TSO SET *                                        
        WHERE CO_ABBR = #CO-ABBR                                           
          AND CUST_633 = #KEY.CUST_633                                     
          AND DEST_333 = #KEY.DEST_333                                     
          AND DEST_ST  = #KEY.DEST_ST                                      
          AND ZTS      = #KEY.ZTS                                          
    END-IF                                                                 
    #READ-DIV:= CM-TDEST_INST.BNSF_DIV_CD  
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE FIND-RECORD-HSTRY       
    FIND-UPDATE1.                                                          
    SELECT SINGLE * INTO VIEW UPDATE-VIEW-AU FROM CM-TDEST_INST_AU         
        WHERE CO_ABBR = #CO-ABBR      AND CUST_633 = #KEY.CUST_633         
        AND  DEST_333 = #KEY.DEST_333 AND DEST_ST  = #KEY.DEST_ST          
        AND  ZTS      = #KEY.ZTS   AND AUDT_CRET_TS = #CDI-AUDT_CRET_TS    
      IF NO RECORDS FOUND                                                  
        ##MSG := 'Instruction does not exist'                              
        IF #FROM-CDI-AUDIT                          
          ESCAPE ROUTINE                                                   
        END-IF                                      
        ESCAPE BOTTOM (NEW-SCREEN.)                                        
      END-NOREC                                                            
      MOVE BY NAME UPDATE-VIEW-AU TO CM-TDEST_INST                         
      PERFORM GET-CCCR-DATA                           
      MOVE BY NAME CM-TDEST_INST TO #KEY-STRUCTURE                         
      MOVE BY NAME CM-TDEST_INST TO #DMR-KEY-STRUCTURE      
      #DISPLAYED-KEY        := #KEY                                        
      #DMR-DISPLAYED        := #DMR-KEY                     
      #RECORD-DISPLAYED := #RECORD-DISPLAYED-DMR := TRUE                   
      #HOLD-SOA         :=  CM-TDEST_INST.OPEN_GATE_FLG 
      #SAVE-MAX-TRK-FEET:=  CM-TDEST_INST.MAX_TRK_FEET                     
      MSG-INFO.##MSG := 'Instruction Displayed from history'               
    END-SELECT                                                             
    IF #ACTION = #DISPLAY OR = #NEXT           
      CALLNAT 'STDN0260' #CO-ABBR #DEST_ABBR #S-DEST_CITY_333 #S-DEST_ST   
      CALLNAT 'OS1NSPPL' CM-TDEST_INST.ZTS #S-DEST_CITY_333 #S-DEST_ST     
        #CO-ABBR #SPOT-TIME(*) #MORE-SPOT                                  
        #PULL-TIME(*) #MORE-PULL                                           
      #ALL-SPOTS-1 := #SPOT-TIME(1)                                        
      #ALL-SPOTS-2 := #SPOT-TIME(2)                                        
      #ALL-SPOTS-3 := #SPOT-TIME(3)                                        
      #ALL-PULLS-1 := #PULL-TIME(1)                                        
      #ALL-PULLS-2 := #PULL-TIME(2)                                        
      #ALL-PULLS-3 := #PULL-TIME(3)                                        
    END-IF                                           
    IF #ACTION = #DISPLAY OR = #NEXT                
      PERFORM CHECK-TEAM-TRACK                                             
    END-IF                                                                 
    IF UPDATE-VIEW.BNSF_DIV_CD NE CM-TDEST_INST.BNSF_DIV_CD                
    OR UPDATE-VIEW.TSO_333 ^= #TSO_333              
    OR UPDATE-VIEW.TSO_ST ^= #TSO_ST                                       
    OR UPDATE-VIEW.DFO_333 ^= #DFO_333                                     
    OR UPDATE-VIEW.DFO_ST ^= #DFO_ST                
    AND NOT (#ACTION = #MODIFY OR = #PURGE)                                
      UPDT-DIV-DFO-TSO.BNSF_DIV_CD := CM-TDEST_INST.BNSF_DIV_CD            
      UPDT-DIV-DFO-TSO.TSO_333 := #TSO_333              
      UPDT-DIV-DFO-TSO.TSO_ST := #TSO_ST                                   
      UPDT-DIV-DFO-TSO.DFO_333 := #DFO_333                                 
      UPDT-DIV-DFO-TSO.DFO_ST := #DFO_ST                
      UPDATE UPDT-DIV-DFO-TSO SET *                                        
        WHERE CO_ABBR = #CO-ABBR      AND CUST_633 = #KEY.CUST_633         
        AND  DEST_333 = #KEY.DEST_333 AND DEST_ST  = #KEY.DEST_ST          
        AND  ZTS      = #KEY.ZTS                                           
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE AFTER-READ                                           
    SELECT SINGLE * INTO VIEW CM-TSTN FROM CM-TSTN                         
        WHERE CO_ABBR = #CO-ABBR AND STN_333 = CM-TDEST_INST.DEST_333      
        AND STN_ST  = CM-TDEST_INST.DEST_ST                                
      #TSO_333 := CM-TSTN.TSO_333                                          
      #TSO_ST  := CM-TSTN.TSO_ST                                           
      #DFO_333 := CM-TSTN.DFO_333                                          
      #DFO_ST  := CM-TSTN.DFO_ST                                           
      #DEST_ABBR := CM-TSTN.STN_ABBR                                       
      CM-TDEST_INST.BNSF_DIV_CD := CM-TSTN.BNSF_DIV_CD                     
    END-SELECT                                                             
    RESET #DFO_ABBR #TSO_ABBR STDASTN                                      
    STDASTN.STN_333 := #DFO_333                                            
    STDASTN.STN_ST  := #DFO_ST                                             
    PERFORM GET-STN-ABBR                
    #DFO_ABBR := STDASTN.STN_ABBR                                          
    RESET STDASTN                                                          
    STDASTN.STN_333 := #TSO_333                                            
    STDASTN.STN_ST  := #TSO_ST                                             
    PERFORM GET-STN-ABBR                
    #TSO_ABBR := STDASTN.STN_ABBR                                          
    IF #ACTION = 'R'                                                       
      ESCAPE ROUTINE                                                       
    END-IF                                                                 
    RESET OY-TIND_FAX_CUST                                                 
    SELECT SINGLE * INTO VIEW OY-TIND_FAX_CUST FROM OY-TIND_FAX_CUST       
      WHERE CUST_633    = CM-TDEST_INST.CUST_633                           
        AND DEST_ST     = CM-TDEST_INST.DEST_ST                            
        AND DEST_333    = CM-TDEST_INST.DEST_333                           
        AND NOTF_TEL_NUMB = CM-TDEST_INST.NOTF_TEL_NUMB                    
    END-SELECT                                                             
    PERFORM FORMAT-TIME        
    ASSIGN CDIANUMB.#OPTION   = 'RPTGS'                                    
    ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633                 
    ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333                     
    ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST                      
    ASSIGN CDIANUMB.#ZTS-LO   = CM-TDEST_INST.ZTS                          
    CALLNAT 'CDINNUMB'                                                     
      CDIANUMB #CO-ABBR                                                    
    #TOTAL-STATIONS := CDIANUMB.#NUMBER                                    
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE BEFORE-INPUT                                         
    IF #PANEL = 1                                                          
      SET KEY PF6 NAMED 'Fax'                                              
    ELSE                                                                   
      SET KEY PF6 NAMED 'CDI'                                              
    END-IF                                                                 
    IF CM-TDEST_INST.TEAM_TRK_FLG = 'Y'                                    
      #TRACK-TYPE := 'T'                                                   
      IF #ACTION = #DISPLAY OR = #NEXT OR = #MODIFY   
        PERFORM CHECK-TEAM-TRACK                                           
      END-IF                                                               
    ELSE                                                                   
      #TRACK-TYPE := CM-TDEST_INST.TRK_LSED_FLG                            
    END-IF                                                                 
    IF #MAX-CARS = 0 AND #MAX-FEET = 0                                     
      IF #TRACK-TYPE = 'S' OR= 'R' OR= 'B'        
        #MAX-CARS := CM-TDEST_INST.TRK_LSE_CARS                            
        #MAX-FEET := CM-TDEST_INST.TRK_LSE_LGTH                            
      ELSE                                                                 
        #MAX-CARS := CM-TDEST_INST.USBL_TRK_CARS                           
        #MAX-FEET := CM-TDEST_INST.USBL_TRK_FEET                           
      END-IF                                                               
    END-IF                                                                 
    ASSIGN #SAVE-TRACK-TYPE = #TRACK-TYPE                                  
    ASSIGN #SAVE-MAX-CARS   = #MAX-CARS                                    
    ASSIGN #SAVE-MAX-FEET   = #MAX-FEET                                    
    ASSIGN #SAVE-AUTO-ORDER = CM-TDEST_INST.AUTO_ORDER                     
    ASSIGN #SAVE-PVT-SWTCH  = CM-TDEST_INST.PVT_SWTCH      
    PERFORM CHECK-FOR-OVERFLOW-TRKS                                        
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE AFTER-INPUT                                          
    IF #ACTION = 'A' OR= 'M' OR= 'B' OR= 'D' OR= 'P'                       
    OR ( *PF-KEY='PF10' AND #PANEL=1)    
      DECIDE FOR EVERY CONDITION                                           
        WHEN (#DFO_ABBR = ' ' AND CM-TDEST_INST.BNSF_DIV_CD = ' '          
        AND #ACTION = 'B')                                                 
        OR (#DFO_ABBR = ' ' AND #ACTION ^= 'B')                            
          REINPUT 'Marked field is required.' (CD=RE)                      
            MARK *#DFO_ABBR(CD=RE AD=U) ALARM                              
        WHEN #TSO_ABBR NE ' '                                              
          FIND (1) CM-TSTN WITH STN_ABBR = #TSO_ABBR                       
            AND CO_ABBR = #CO-ABBR                                         
            IF NO RECORDS FOUND                                            
              REINPUT 'Invalid TSO abbreviation.' (CD=RE)                  
                MARK *#TSO_ABBR(CD=RE AD=U) ALARM                          
            END-NOREC                                                      
            CM-TDEST_INST.TSO_333 := #TSO_333 := CM-TSTN.TSO_333           
            CM-TDEST_INST.TSO_ST  := #TSO_ST  := CM-TSTN.TSO_ST            
            CM-TDEST_INST.DFO_333 := #DFO_333 := CM-TSTN.DFO_333           
            CM-TDEST_INST.DFO_ST  := #DFO_ST  := CM-TSTN.DFO_ST            
            #TSO_ABBR := CM-TSTN.STN_ABBR                                  
          END-FIND                                                         
        WHEN CM-TDEST_INST.BNSF_DIV_CD NE ' '                              
          ASSIGN CDIANUMB.#OPTION   = 'STN'                                
          ASSIGN CDIANUMB.#BNSF-DIV-CD = CM-TDEST_INST.BNSF_DIV_CD         
          CALLNAT 'CDINNUMB'                                               
            CDIANUMB #CO-ABBR                                              
          IF #NUMBER = 0                                                   
            REINPUT 'Invalid Division code.' (CD=RE)                       
              MARK *CM-TDEST_INST.BNSF_DIV_CD (CD=RE AD=U) ALARM           
          END-IF                                                           
  WHEN (CM-TDEST_INST.CUST_633 <> ' '                                      
   AND #DEST_ABBR <> ' ' AND                                               
       (#ACTION = 'A' OR #ACTION = 'M'))                                   
   SELECT STN_333, STN_ST                                                  
     INTO #TEMP-DEST-333, #TEMP-DEST-ST                                    
     FROM CM-TSTN                                                          
     WHERE STN_ABBR = #DEST_ABBR                                           
    <<FETCH FIRST 1 ROW ONLY>>                                             
   END-SELECT                                                              
     SELECT 1 INTO #EXISTS1 FROM CM-TCUSTOMER                              
         WHERE CUST_633 = CM-TDEST_INST.CUST_633                           
         AND CUST_CITY_333 = #TEMP-DEST-333                                
         AND CUST_ST = #TEMP-DEST-ST                                       
         <<FETCH FIRST 1 ROW ONLY>>                                        
       IF NO RECORDS FOUND                                                 
         REINPUT 'Please enter a Valid customer.' (CD=RE)                  
         MARK *CM-TDEST_INST.CUST_633 (CD=RE AD=U)                         
              *#DEST_ABBR (CD=RE AD=U) ALARM                               
       END-NOREC                                                           
     END-SELECT                                                            
        WHEN #DEST_ABBR NE ' '                    
          FIND(1) CM-TSTN WITH STN_ABBR = #DEST_ABBR                       
            AND CO_ABBR = #CO-ABBR                                         
            IF NO RECORDS FOUND                                            
              REINPUT 'Invalid destination abbreviation.' (CD=RE)          
                MARK *#DEST_ABBR(CD=RE AD=U) ALARM                         
            END-NOREC                                                      
            CM-TDEST_INST.DEST_333 := CM-TSTN.STN_333                      
            CM-TDEST_INST.DEST_ST  := CM-TSTN.STN_ST                       
            CM-TDEST_INST.TSO_333  := #TSO_333 := CM-TSTN.TSO_333          
            CM-TDEST_INST.TSO_ST   := #TSO_ST  := CM-TSTN.TSO_ST           
            CM-TDEST_INST.DFO_333  := #DFO_333 := CM-TSTN.DFO_333          
            CM-TDEST_INST.DFO_ST   := #DFO_ST  := CM-TSTN.DFO_ST           
            CM-TDEST_INST.BNSF_DIV_CD := CM-TSTN.BNSF_DIV_CD               
            #R260_JCT := CM-TSTN.JCT_260        
            IF #TSO_ABBR = ' '                                             
              RESET STDASTN                                                
              STDASTN.STN_333 := #TSO_333                                  
              STDASTN.STN_ST  := #TSO_ST                                   
              PERFORM GET-STN-ABBR               
              #TSO_ABBR := STDASTN.STN_ABBR                                
            END-IF                                                         
          END-FIND                                                         
        WHEN #TSO_ABBR = ' ' AND #ACTION NE 'B'                            
          REINPUT 'Marked field is required.' (CD=RE)                      
            MARK *#TSO_ABBR(CD=RE AD=U) ALARM                              
        WHEN (CM-TDEST_INST.BNSF_DIV_CD = ' ' AND #DFO_ABBR = ' '          
        AND #ACTION = 'B')                                                 
        OR (CM-TDEST_INST.BNSF_DIV_CD = ' ' AND #ACTION ^= 'B')            
          REINPUT 'Marked field is required.' (CD=RE)                      
            MARK *CM-TDEST_INST.BNSF_DIV_CD (CD=RE AD=U) ALARM             
        WHEN #DFO_ABBR NE ' ' AND #TSO_ABBR = ' ' AND #DEST_ABBR = ' '     
          RESET STDASTN                                                    
          STDASTN.STN_ABBR := #DFO_ABBR                                    
          PERFORM GET-STN-ABBR                 
          IF STDASTN.STN_333 = ' '                                         
            REINPUT 'Invalid RFO abbreviation.' (CD=RE)                    
              MARK *#DFO_ABBR(CD=RE AD=U) ALARM                            
          END-IF                                                           
          CM-TDEST_INST.DFO_333 := #DFO_333 := STDASTN.STN_333             
          CM-TDEST_INST.DFO_ST  := #DFO_ST  := STDASTN.STN_ST              
          RESET #TSO_333 #TSO_ST                                           
        WHEN #DEST_ABBR EQ ' '                                             
          RESET CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST               
        WHEN NONE IGNORE                                                   
      END-DECIDE                                                           
      IF #ACTION = 'A' OR= 'M'   
        PERFORM VALIDATE-EXP-DT               
        IF NOT (CM-TDEST_INST.WB_ETRN_FLG = 'N' OR= 'Y')                   
          REINPUT 'Must be "Y" or "N".' (CD=RE)                            
            MARK *CM-TDEST_INST.WB_ETRN_FLG (CD=RE AD=U) ALARM             
        END-IF                                                             
        IF CM-TDEST_INST.BUS_UNIT_CD  = ' '   
          REINPUT 'Pri Busn Unt required (see Help for values)' (CD=RE)    
            MARK *CM-TDEST_INST.BUS_UNIT_CD   (CD=RE AD=U) ALARM           
        END-IF                                                             
        IF CM-TDEST_INST.BUS_UNIT_CD = 'AG' OR='AU' OR='BP' OR='CH'        
        OR='CM' OR='CO' OR='CP' OR='DI' OR='FB' OR='FP' OR='GP' OR='GR'    
        OR='GV' OR='II' OR='IM' OR='IP' OR='MA' OR='ME' OR='MO' OR='PC'    
        OR='PP' OR='WS'                                                    
          IGNORE                                                           
        ELSE                                                               
          REINPUT 'Invalid Pri Busn Unt (see Help for values)' (CD=RE)     
            MARK *CM-TDEST_INST.BUS_UNIT_CD   (CD=RE AD=U) ALARM           
        END-IF                                                             
        IF CM-TDEST_INST.BUS_UNIT_CD2 = ' '   
          REINPUT 'Facility Type required (see Help for values)' (CD=RE)   
            MARK *CM-TDEST_INST.BUS_UNIT_CD2  (CD=RE AD=U) ALARM           
        END-IF                                                             
        IF CM-TDEST_INST.BUS_UNIT_CD2 = 'AP' OR='BK' OR='CC' OR='CL'       
        OR='FN' OR='RF' OR='SL' OR='NU' OR='TS' OR='US' OR='UT' OR='VH'    
          IGNORE                                                           
        ELSE                                                               
          REINPUT 'Invalid Facility Type (see Help for values)' (CD=RE)    
            MARK *CM-TDEST_INST.BUS_UNIT_CD2  (CD=RE AD=U) ALARM           
        END-IF                                                             
        IF NOT (CM-TDEST_INST.DOOR_FLIP_FLG = 'N' OR= 'Y')                 
          REINPUT 'Must be "Y" or "N".' (CD=RE)                            
            MARK *CM-TDEST_INST.DOOR_FLIP_FLG (CD=RE AD=U) ALARM           
        END-IF                                                             
        MOVE RIGHT CM-TDEST_INST.ZTS TO CM-TDEST_INST.ZTS                  
        IF CM-TDEST_INST.ZTS = MASK (NNNNNN)                               
        OR CM-TDEST_INST.ZTS = MASK (' 'NNNNN)                             
        OR CM-TDEST_INST.ZTS = MASK ('  'NNNN)                             
        OR CM-TDEST_INST.ZTS = MASK ('   'NNN)                             
        OR CM-TDEST_INST.ZTS = MASK ('    'NN)                             
        OR CM-TDEST_INST.ZTS = MASK ('     'N)                             
          IF CM-TDEST_INST.BUS_UNIT_CD2 = 'FN'                             
            REINPUT 'ZnTkSp cannot contain numbers for Foreign '-          
              'Customer CDIs' (CD=RE)                                      
              MARK *CM-TDEST_INST.ZTS (CD=RE AD=U)                         
              *CM-TDEST_INST.BUS_UNIT_CD2 (CD=RE AD=U) ALARM               
          END-IF                                                           
        END-IF                                                             
        IF CM-TDEST_INST.ZTS NE MASK (NNNNNN)                              
        AND CM-TDEST_INST.ZTS NE MASK (' 'NNNNN)                           
        AND CM-TDEST_INST.ZTS NE MASK ('  'NNNN)                           
        AND CM-TDEST_INST.ZTS NE MASK ('   'NNN)                           
        AND CM-TDEST_INST.ZTS NE MASK ('    'NN)                           
        AND CM-TDEST_INST.ZTS NE MASK ('     'N)                           
         MOVE LEFT CM-TDEST_INST.ZTS TO CM-TDEST_INST.ZTS 
          IF CM-TDEST_INST.ZTS =                                           
              MASK(AAAAAA) OR = MASK(AAAAA' ')                             
            REINPUT 'Interchg point can"t be over 4 characters'(CD=RE)     
              MARK *CM-TDEST_INST.ZTS (CD=RE AD=U) ALARM                   
          ELSE                                                             
            IF CM-TDEST_INST.ZTS = MASK(AAAA'  ')                          
            OR= MASK(AAA'   ') OR= MASK(AA'    ') OR= MASK(A'     ')       
              #ROAD := CM-TDEST_INST.ZTS                                   
              ASSIGN CDIANUMB.#OPTION   = 'ICPT'                           
              ASSIGN CDIANUMB.#R260-JCT = #R260_JCT                        
              #ROAD-ENTERED := TRUE                                        
            END-IF  
          END-IF                                                           
        ELSE                                                               
          MOVE RIGHT CM-TDEST_INST.ZTS TO CM-TDEST_INST.ZTS                
          IF CM-TDEST_INST.ZTS ^= MASK(.NNNNN)        
            REINPUT 'ZnTkSp need to have least 5 characters' (CD=RE)       
              MARK *CM-TDEST_INST.ZTS (CD=RE AD=U) ALARM                   
          ELSE                                                             
            IF CM-TDEST_INST.ZTS EQ MASK (XX) ' 0'                         
              IGNORE                                                       
            ELSE                                                           
              IF CM-TDEST_INST.ZTS EQ MASK (XX) '00'                       
                REINPUT 'Zone cannot be blank or zero' (CD=RE)             
                  MARK *CM-TDEST_INST.ZTS (CD=RE AD=U) ALARM               
              END-IF                                                       
            END-IF                                                         
          END-IF                                                           
        END-IF                                                             
      END-IF                    
    END-IF                                                                 
    MOVE BY NAME CM-TDEST_INST TO OY-TIND_FAX_CUST                         
    MOVE BY NAME CM-TDEST_INST TO #KEY-STRUCTURE                           
    IF #ACTION = 'M' AND *PF-KEY = 'PF6' AND #PANEL = 1                    
    AND ((CM-TDEST_INST.CP_CD = 'F' OR= 'G')                               
    OR CM-TDEST_INST.NOTF_CD = 'F')                                        
      #MOD_FAX := TRUE                                                     
    END-IF                                                                 
    IF *PF-KEY='PF10' AND #PANEL=1             
      IF CM-TDEST_INST.CUST_633 = ' ' AND #DEST_ABBR = ' '                 
        REINPUT 'Log function requires input at lease one of the '-        
          'fields' (CD=RE)                                                 
          MARK *CM-TDEST_INST.CUST_633 (CD=RE AD=U)                        
          *#DEST_ABBR (CD=RE AD=U) ALARM                                   
      ELSE                                                                 
        PERFORM LOG-VALIDATION                                             
        IF NOT #FOUND                                                      
          REINPUT 'No LOG data available for this ZTS'                     
            MARK *CM-TDEST_INST.CUST_633 (CD=RE AD=U)                      
            *#DEST_ABBR (CD=RE AD=U)                                       
            *CM-TDEST_INST.ZTS (CD=RE AD=U) ALARM                          
        ELSE                                                               
          PERFORM ASSIGN-KEYS                                              
        END-IF                                                             
      END-IF                                                               
    ELSE                                                                   
      IF *PF-KEY='PF10' AND #PANEL=2                                       
        PERFORM ASSIGN-KEYS                                                
      END-IF                                                               
    END-IF                              
    IF #ACTION = 'M'                                                       
    AND *PF-KEY = 'ENTR'                        
    AND CM-TDEST_INST.USBL_TRK_PRF > ' '        
      PERFORM CHK-FOR-OVERFLW-TRKS              
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE UPDATE-EDITS                                         
    IF #ACTION = #MODIFY                                                   
      ASSIGN CDIANUMB.#OPTION   = 'CUSTNB'                                 
      ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633               
      ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333                   
      ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST                    
      CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                                 
      IF #NUMBER      = 0                                                  
        REINPUT 'Customer does not exist at the station.' (CD=RE)          
          MARK *CM-TDEST_INST.CUST_633(CD=RE AD=U) ALARM                   
      END-IF                                                               
    END-IF                                                                 
    IF NOT #ROAD-ENTERED                                                   
      CALLNAT 'STDN0040' #CO-ABBR CM-TDEST_INST.DEST_333                   
        CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZT #BAD-TRK                    
      IF #BAD-TRK = 'Y'                                                    
        REINPUT 'Track does not exist at the station.'                     
          (CD=RE) MARK *CM-TDEST_INST.ZTS(CD=RE AD=U) ALARM                
      END-IF                                                               
      IF NOT (CM-TDEST_INST.TRK_LSED_FLG = 'S' OR= 'R' OR= 'B')            
      AND NOT (CM-TDEST_INST.BUS_UNIT_CD2 = 'BK')          
        CALLNAT 'SRINCMTL' CM-TDEST_INST.CUST_633 #CM                      
        IF NOT #CM                                                         
          IF #TRACK-TYPE NE 'X'                        
            ASSIGN CDIANUMB.#OPTION   = 'TRKNBR'                           
            ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333             
            ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST              
            ASSIGN CDIANUMB.#TRK-NBR  = CM-TDEST_INST.ZT                   
            CALLNAT 'CDINNUMB'                                             
              CDIANUMB #CO-ABBR                                            
            IF #NUMBER = 0                                                 
              REINPUT 'Track must be Leased, Team, or Industry.'           
                (CD=RE) MARK *CM-TDEST_INST.ZTS(CD=RE AD=U) ALARM          
            END-IF                                    
          END-IF                                                           
        END-IF                                                             
      END-IF                                                               
    END-IF                                                                 
    IF (CM-TDEST_INST.DMRG_AAR_RPTG_CD NE 'Y'        
    AND CM-TDEST_INST.DMRG_AAR_RPTG_CD NE 'N')   
      REINPUT 'AAR Rptg Flag must be "Y" or "N"'      
        (CD=RE) MARK *CM-TDEST_INST.DMRG_AAR_RPTG_CD(CD=RE AD=U) ALARM     
    END-IF                                                                 
    IF CM-TDEST_INST.OPEN_GATE_FLG = 'N'                                   
    AND CM-TDEST_INST.CP_CD = 'G'                        
      REINPUT                                                              
        'CP CODE INVALID FOR ORDER IN CUSTOMER' (CD=RE)                    
        MARK *CM-TDEST_INST.CP_CD (CD=RE AD=U) ALARM                       
    END-IF                                                                 
    IF #ACTION = 'A' OR ( #ACTION = 'M' AND #DISPLAYED-KEY NE #KEY )       
      ASSIGN CDIANUMB.#OPTION   = 'CDINB3'                                 
      ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633               
      ASSIGN CDIANUMB.#CITY-333 = CM-TDEST_INST.DEST_333                   
      ASSIGN CDIANUMB.#STATE    = CM-TDEST_INST.DEST_ST                    
      ASSIGN CDIANUMB.#ZTS-LO   = CM-TDEST_INST.ZTS                        
      CALLNAT 'CDINNUMB'                                                   
        CDIANUMB                                                           
        #CO-ABBR                                                           
      IF CDIANUMB.#NUMBER NE 0 THEN                                        
        REINPUT 'Instruction already exists.' (CD=RE)                      
          MARK 2 (CD=RE AD=U) ALARM                                        
      END-IF                                                               
    END-IF                                                                 
    IF  #ACTION = #ADD                           
        AND (#TRACK-TYPE = 'T'                       
        AND NOT (CM-TDEST_INST.BNSF_DIV_CD = 'MRL')) 
      PERFORM CHECK-ADD-TEAM-TRK                 
      IF #TTERROR                                
        ESCAPE BOTTOM(NEW-SCREEN.)               
      END-IF                                     
    END-IF                                       
    IF #ACTION = 'A' AND NOT(#MOD_FAX) AND                                 
    ((CM-TDEST_INST.CP_CD = 'F' OR= 'G') OR CM-TDEST_INST.NOTF_CD = 'F')   
      #CCCR-EXCP := TRUE                                     
      PERFORM NEW-TELEPHONE-NO                                             
    END-IF                                                                 
    IF #ACTION = 'M' AND #MAX-TRK-FEET-CV MODIFIED                         
    AND #SAVE-MAX-TRK-FEET NE CM-TDEST_INST.MAX_TRK_FEET                   
      IF #SECURITY-MSG NE ' '                                              
        REINPUT WITH #SECURITY-MSG (CD=RE)                                 
          MARK *CM-TDEST_INST.MAX_TRK_FEET (CD=RE AD=U) ALARM              
      END-IF                                                               
    END-IF                                                                 
    IF #ACTION = 'M' AND #AUTO-ORDER-CV MODIFIED                           
    AND #SAVE-AUTO-ORDER NE CM-TDEST_INST.AUTO_ORDER                       
      IF #SECURITY-MSG NE ' '                                              
        REINPUT WITH #SECURITY-MSG (CD=RE)                                 
          MARK *CM-TDEST_INST.AUTO_ORDER (CD=RE AD=U) ALARM                
      END-IF                                                               
    END-IF                                                                 
    PERFORM FORMAT-REFORMAT      
    IF (CM-TDEST_INST.OPEN_GATE_FLG = 'B'OR= 'L' OR= 'E'                   
    AND CM-TDEST_INST.AUTO_ORDER = 'N' OR = ' ')                           
    OR (CM-TDEST_INST.OPEN_GATE_FLG = 'N'                                  
    AND NOT (CM-TDEST_INST.AUTO_ORDER = 'N' OR = ' '))                     
      PERFORM SPOT-VS-AUTO        
      IF NOT #COMMIT_VER                                                   
        ESCAPE BOTTOM(NEW-SCREEN.)                                         
      END-IF                                                               
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE VALIDATE-EXP-DT       
    IF NOT CM-TDEST_INST.CDI_EXP_DT= MASK(YYYY'-'MM'-'DD)                  
      REINPUT 'Invalid date; should be in MM DD YYYY format' (CD=RE)       
        MARK *CM-TDEST_INST.#CDI-EXP-DT-MM (AD=U CD=RE)                    
        *#CDI-EXP-DT-DD (AD=U CD=RE)                                       
        *#CDI-EXP-DT-YYYY(AD=U CD=RE) ALARM                                
    END-IF                                                                 
    IF CM-TDEST_INST.CDI_EXP_DT = #ORIG-EXP-DT                             
    OR #ORIG-EXP-DT > #CURR-DT                                             
      IGNORE                                                               
    ELSE                                                                   
      IF #ACTION = 'A' OR= 'M'                                             
        IF CM-TDEST_INST.CDI_EXP_DT < #ORIG-EXP-DT                         
          COMPRESS #ORIG-MM '-' #ORIG-DD '-' #ORIG-YYYY                    
            INTO ##MSG LEAVING NO                                          
          COMPRESS 'Expired Date prior to original:' ##MSG                 
            INTO ##MSG                                                     
          REINPUT ##MSG (CD=RE)                                            
            MARK *CM-TDEST_INST.#CDI-EXP-DT-MM (AD=U CD=RE)                
            *#CDI-EXP-DT-DD (AD=U CD=RE)                                   
            *#CDI-EXP-DT-YYYY(AD=U CD=RE) ALARM                            
        END-IF                                                             
        IF CM-TDEST_INST.CDI_EXP_DT LT #CURR-DT                            
          REINPUT 'Expired Date prior to current' (CD=RE)                  
            MARK *CM-TDEST_INST.#CDI-EXP-DT-MM (AD=U CD=RE)                
            *#CDI-EXP-DT-DD (AD=U CD=RE)                                   
            *#CDI-EXP-DT-YYYY(AD=U CD=RE) ALARM                            
        END-IF                                                             
      END-IF                                                               
    END-IF                                                                 
    IF #ACTION = 'A'                                                       
      IF NOT CM-TDEST_INST.EXP_DT LE CM-TDEST_INST.CDI_EXP_DT              
        REINPUT                                                            
          'Lease Exp Dt must be less than/equal to Expiration Date'        
          (CD=RE) MARK *CM-TDEST_INST.#EXP-DT-MM (AD=U CD=RE)              
          *#EXP-DT-DD (AD=U CD=RE) *#EXP-DT-YYYY(AD=U CD=RE)               
          *CM-TDEST_INST.#CDI-EXP-DT-MM (AD=U CD=RE)                       
          *CM-TDEST_INST.#CDI-EXP-DT-DD (AD=U CD=RE)                       
          *CM-TDEST_INST.#CDI-EXP-DT-YYYY (AD=U CD=RE) ALARM               
      END-IF                                                               
    END-IF                                                                 
    END-SUBROUTINE                          
    DEFINE SUBROUTINE BEFORE-ET                                            
    IF #MOD_FAX OR #ADD_FAX                                                
      RESET UPDATE-FAX_CUST                                                
      FIND(1) UPDATE-FAX_CUST                                              
        WITH CUST_633      = CM-TDEST_INST.CUST_633                        
         AND DEST_ST       = CM-TDEST_INST.DEST_ST                         
         AND DEST_333      = CM-TDEST_INST.DEST_333                        
         AND NOTF_TEL_NUMB = CM-TDEST_INST.NOTF_TEL_NUMB                   
        IF NO RECORDS FOUND                                                
          PERFORM INSERT-PASSWORD                                          
          IF #LOOP-CNT > 200                                               
            RESET #MOD_FAX #ADD_FAX                                        
            ESCAPE ROUTINE                                                 
          ELSE                                                             
            ESCAPE BOTTOM                                                  
          END-IF                                                           
        END-NOREC                                                          
        IF #ACTION = #ADD                        
          PERFORM ADD-CCCR-CDI-INFO                                        
        END-IF                                   
        IF #MOD_FAX                                                        
          IF OY-TIND_FAX_CUST.HLDY_STOP_TM =         
              MASK(NNNN'    ')                                             
            PERFORM FORMAT-TIME                                            
          END-IF                                     
          MOVE BY NAME OY-TIND_FAX_CUST TO UPDATE-FAX_CUST                 
          CALLNAT 'STDN0284' UPDATE-FAX_CUST.WKDY_STRT_TM                  
            UPDATE-FAX_CUST.N@WKDY_STRT_TM 'S->DB2' 
          CALLNAT 'STDN0284' UPDATE-FAX_CUST.WKDY_STOP_TM                  
            UPDATE-FAX_CUST.N@WKDY_STOP_TM 'S->DB2'                        
          CALLNAT 'STDN0284' UPDATE-FAX_CUST.WKEND_STRT_TM                 
            UPDATE-FAX_CUST.N@WKEND_STRT_TM 'S->DB2'                       
          CALLNAT 'STDN0284' UPDATE-FAX_CUST.WKEND_STOP_TM                 
            UPDATE-FAX_CUST.N@WKEND_STOP_TM 'S->DB2'                       
          CALLNAT 'STDN0284' UPDATE-FAX_CUST.HLDY_STRT_TM                  
            UPDATE-FAX_CUST.N@HLDY_STRT_TM 'S->DB2'                        
          CALLNAT 'STDN0284' UPDATE-FAX_CUST.HLDY_STOP_TM                  
            UPDATE-FAX_CUST.N@HLDY_STOP_TM 'S->DB2' 
          UPDATE 
          PERFORM FORMAT-TIME                       
        END-IF                                                             
      END-FIND                                                             
    END-IF                                                                 
    PERFORM DELETE-STN                                                     
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE AFTER-SCREEN-CLEAR                                   
    RESET OY-TIND_FAX_CUST #TOTAL-STATIONS #DEST_ABBR #KEY-MODIFIED        
      #ADD_FAX #MOD_FAX #DMR-MODIFIED                
    CM-TDEST_INST.CO_ABBR := +CO_ABBR                                      
    RESET STDASTN                                                          
    STDASTN.STN_333 := CM-TDEST_INST.DEST_333                              
    STDASTN.STN_ST  := CM-TDEST_INST.DEST_ST                               
    PERFORM GET-STN-ABBR                           
    #DEST_ABBR := STDASTN.STN_ABBR                                         
    MOVE EDITED *DATX(EM=YYYY-MM-DD) TO #CDI_EXP_DT 
    ASSIGN #CDI-YYYY:= '2050'                       
    IF #CDI-MM-DD= '02/29'                          
      #CDI-MM-DD:= '02/28'                        
    END-IF                                          
    CM-TDEST_INST.CDI_EXP_DT := #CDI_EXP_DT         
    MOVE (AD=U CD=GR) TO #CDI_EXP_DT-CV             
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE DELETE-STN                                           
    IF #ACTION = 'P'                                                       
      IF #KEY-MODIFIED                                                     
        MOVE BY NAME UPDATE-VIEW TO #KEY-STRUCTURE                         
      END-IF                                                               
      ASSIGN CDIANUMB.#OPTION   = 'DELRPT'                                 
      ASSIGN CDIANUMB.#CUSTOMER-633 = #KEY.CUST_633                        
      ASSIGN CDIANUMB.#CITY-333 = #KEY.DEST_333                            
      ASSIGN CDIANUMB.#STATE    = #KEY.DEST_ST                             
      ASSIGN CDIANUMB.#ZTS-LO   = #KEY.ZTS                                 
      CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                                 
      IF #KEY-MODIFIED                                                     
        MOVE BY NAME CM-TDEST_INST TO #KEY-STRUCTURE                       
      END-IF                                                               
      ASSIGN CDIANUMB.#OPTION   = 'CDINB4'                                 
      ASSIGN CDIANUMB.#CUSTOMER-633 = UPDATE-VIEW-1.CUST_633               
      ASSIGN CDIANUMB.#CITY-333 = UPDATE-VIEW-1.DEST_333                   
      ASSIGN CDIANUMB.#STATE    = UPDATE-VIEW-1.DEST_ST                    
      ASSIGN CDIANUMB.#TEL-NBR  = UPDATE-VIEW-1.NOTF_TEL_NUMB              
      CALLNAT 'CDINNUMB' CDIANUMB #CO-ABBR                                 
      IF CDIANUMB.#NUMBER = 1           
        PERFORM DELETE-FAX                                                 
      END-IF                                                               
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE DELETE-FAX         
    PERFORM FIND-CURRENT-PASSWORD                                          
    IF NOT #CCCR-EXCP                                                      
        AND NOT #CCCR-UPD                                                  
        AND NOT #CCCR-ADD = 'Y'                                            
      CALLNAT 'STDNCNTR'   +CO_ABBR #CCCR-DFO-333 #CCCR-SWITCH             
      IF #CCCR-SWITCH                                                      
        IF (UPDATE-VIEW-1.CP_CD <> 'F' AND UPDATE-VIEW-1.CP_CD <> 'G'      
        AND UPDATE-VIEW-1.NOTF_CD <> 'F')                                  
          #CUST-NTFY-PSWD-T(1) := #CUST-NTFY-PSWD                          
          CALLNAT 'YIMNCDIX' UPDATE-VIEW-1.CUST_633                        
            UPDATE-VIEW-1.DEST_333 UPDATE-VIEW-1.DEST_ST                   
            UPDATE-VIEW-1.ZTS +CO_ABBR 'CDIPIMNT' #CUST-NTFY-PSWD-T(*)     
            #CCCR-FOUND-T #USER-FOUND-T                                    
            #CCCR-USER-ID-T(*) #NOTF-FAX-NUMB-T(*)                         
            #VC-PHN-T(*) #EXTN-T(*)                                        
            #UN-SUBS-TIMESTMP-T(*) #CCCR-FNAME-T(*) #CCCR-MNAME-T(*)       
            #CCCR-LNAME-T(*) #CCCR-USER-EML-T(*)                           
            #CUST-NTFY-PSWD-TEMP(*)                                        
            #SUB-TYPE-T                                                    
            #SUBS-FOUND-T(*)                                               
            #ROW-COUNT                                                     
            #IPOWER-ID-T(*)                                                
            'SUBDELTE'                                                     
        END-IF                                                             
      ELSE                                                                 
        DELETE FROM OS-TCCCR_NOTF_SUBSC                                    
          WHERE CCCR_CUST_633 = UPDATE-VIEW-1.CUST_633                     
            AND STN_333 = UPDATE-VIEW-1.DEST_333                           
            AND STN_ST = UPDATE-VIEW-1.DEST_ST                             
            AND CO_ABBR = +CO_ABBR                                         
            AND CUST_NTFY_PSWD = #CUST-NTFY-PSWD                           
            AND (UPDATE-VIEW-1.CP_CD <> 'F'                                
            AND UPDATE-VIEW-1.CP_CD <> 'G'                                 
            AND UPDATE-VIEW-1.NOTF_CD <> 'F')                              
            AND STN_333_UNSUBSC_TS IS NULL                                 
      END-IF                                      
    END-IF                                                                 
    CALLNAT 'SRINFAXD' +CO_ABBR UPDATE-VIEW-1.CUST_633                     
      UPDATE-VIEW-1.DEST_333    UPDATE-VIEW-1.DEST_ST                      
      UPDATE-VIEW-1.NOTF_TEL_NUMB                                          
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE NEW-TELEPHONE-NO                                     
    IF *PF-KEY = 'ENTR'                                                    
      INPUT WITH TEXT MSG-INFO.##MSG USING MAP 'CDIMIMN2'                  
      IF *PF-KEY = 'PF12'                                                  
        IF OY-TIND_FAX_CUST.DMRG_RPT_LATA NE ' '                           
        AND OY-TIND_FAX_CUST.SORT_CD NE ' '                                
        AND OY-TIND_FAX_CUST.WKDY_STRT_TM NE ' '                           
        AND OY-TIND_FAX_CUST.WKDY_STOP_TM NE ' '                           
        AND OY-TIND_FAX_CUST.WKEND_STRT_TM NE ' '                          
        AND OY-TIND_FAX_CUST.WKEND_STOP_TM NE ' '                          
        AND OY-TIND_FAX_CUST.HLDY_STRT_TM NE ' '                           
        AND OY-TIND_FAX_CUST.HLDY_STOP_TM NE ' '                           
          #PANEL := 1                                                      
        ELSE                                                               
          REINPUT 'Please enter ALL Fax field information before '-        
            'return to previous screen' (CD=RE)                            
        END-IF                                                             
      ELSE                                                                 
        IF *PF-KEY NE 'ENTR'                                               
          REINPUT 'The enter key is the only key allowed.'(CD=RE)          
        END-IF                                                             
      END-IF                                                               
      #ADD_FAX := TRUE                                                     
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE CHECK-FOR-PHONE-NO                                   
    ASSIGN CDIANUMB.#OPTION   = 'CDINB5'                                   
    ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633                 
    ASSIGN CDIANUMB.#CITY-333 = UPDATE-VIEW-1.DEST_333                     
    ASSIGN CDIANUMB.#STATE    = UPDATE-VIEW-1.DEST_ST                      
    ASSIGN CDIANUMB.#TEL-NBR  = UPDATE-VIEW-1.NOTF_TEL_NUMB                
    CALLNAT 'CDINNUMB'                                                     
      CDIANUMB #CO-ABBR                                                    
    IF CDIANUMB.#NUMBER = 1                                                
      PERFORM DELETE-FAX                                                   
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE STORE-DEST-INST                                      
    CM-TDEST_INST.N@EFF_DT := CM-TDEST_INST.N@EXP_DT := 0                  
    IF CM-TDEST_INST.EFF_DT = ' '                                          
      CM-TDEST_INST.N@EFF_DT := -1                                         
    END-IF                                                                 
    IF CM-TDEST_INST.EXP_DT = ' '                                          
      CM-TDEST_INST.N@EXP_DT := -1                                         
    END-IF                                                                 
    CM-TDEST_INST.CO_ABBR := +CO_ABBR                                      
    IF #CDI-AUDIT-OPTION = 'HSTRY'                                         
      MOVE EDITED *DATX(EM=YYYY-MM-DD) TO CM-TDEST_INST.CDI_RSTORD_DT      
      MOVE '0001-01-01' TO CM-TDEST_INST.LST_ACS_DT                        
    ELSE                                                                   
      MOVE EDITED *DATX(EM=YYYY-MM-DD) TO CM-TDEST_INST.CDI_CRET_DT        
      MOVE '0001-01-01' TO CM-TDEST_INST.LST_ACS_DT                        
      MOVE '0001-01-01' TO CM-TDEST_INST.CDI_RSTORD_DT                     
    END-IF                                                                 
    MOVE BY NAME CM-TDEST_INST TO #PARM-DEST-INST  
    CALLNAT 'CDINSTOR' #PARM-DEST-INST             
    CTI.                                                   
    SELECT  * INTO VIEW CDI_INST                                           
      FROM  CM-TDEST_INST                                                  
      WHERE CO_ABBR = CM-TDEST_INST.CO_ABBR                                
      AND  CUST_633 = CM-TDEST_INST.CUST_633                               
      AND  DEST_333 = CM-TDEST_INST.DEST_333                               
      AND  DEST_ST  = CM-TDEST_INST.DEST_ST                                
      AND  ZTS      = CM-TDEST_INST.ZTS                                    
      << FETCH FIRST 1 ROWS ONLY >>                                        
      IF NO RECORD FOUND                                                   
        ESCAPE BOTTOM                                                      
      END-NOREC                                                            
      IF CDI_INST.BUS_UNIT_CD2 = 'CC' OR= 'US' OR= 'UT' OR= 'VH'           
        CDI_INST.VCR_UTRN_PRLSE := 'Y'                                     
        UPDATE (CTI.)                                                      
      END-IF                                                               
    END-SELECT                                             
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE FORMAT-REFORMAT                                      
    PERFORM FORMAT-TIME                                                    
    CALLNAT 'INDN0282' OY-TIND_FAX_CUST.WKDY_STRT_TM                       
      OY-TIND_FAX_CUST.N@WKDY_STRT_TM                                      
    CALLNAT 'INDN0282' OY-TIND_FAX_CUST.WKDY_STOP_TM                       
      OY-TIND_FAX_CUST.N@WKDY_STOP_TM                                      
    CALLNAT 'INDN0282' OY-TIND_FAX_CUST.WKEND_STRT_TM                      
      OY-TIND_FAX_CUST.N@WKEND_STRT_TM                                     
    CALLNAT 'INDN0282' OY-TIND_FAX_CUST.WKEND_STOP_TM                      
      OY-TIND_FAX_CUST.N@WKEND_STOP_TM                                     
    CALLNAT 'INDN0282' OY-TIND_FAX_CUST.HLDY_STRT_TM                       
      OY-TIND_FAX_CUST.N@HLDY_STRT_TM                                      
    CALLNAT 'INDN0282' OY-TIND_FAX_CUST.HLDY_STOP_TM                       
      OY-TIND_FAX_CUST.N@HLDY_STOP_TM                                      
    IF OY-TIND_FAX_CUST.WKDY_STRT_TM NE MASK(00-23'.'00-59'.'00-59)        
      OY-TIND_FAX_CUST.WKDY_STRT_TM := '0001'                              
    END-IF                                                                 
    IF OY-TIND_FAX_CUST.WKDY_STOP_TM NE MASK(00-23'.'00-59'.'00-59)        
      OY-TIND_FAX_CUST.WKDY_STOP_TM := '2359'                              
    END-IF                                                                 
    IF OY-TIND_FAX_CUST.WKEND_STRT_TM NE MASK (00-23'.'00-59'.'00-59)      
      OY-TIND_FAX_CUST.WKEND_STRT_TM := '0001'                             
    END-IF                                                                 
    IF OY-TIND_FAX_CUST.WKEND_STOP_TM NE MASK (00-23'.'00-59'.'00-59)      
      OY-TIND_FAX_CUST.WKEND_STOP_TM := '2359'                             
    END-IF                                                                 
    IF OY-TIND_FAX_CUST.HLDY_STRT_TM NE MASK (00-23'.'00-59'.'00-59)       
      OY-TIND_FAX_CUST.HLDY_STRT_TM := '0001'                              
    END-IF                                                                 
    IF OY-TIND_FAX_CUST.HLDY_STOP_TM NE MASK (00-23'.'00-59'.'00-59)       
      OY-TIND_FAX_CUST.HLDY_STOP_TM := '2359'                              
    END-IF                                                                 
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE FORMAT-TIME                                          
    CALLNAT 'STDN0282' OY-TIND_FAX_CUST.HLDY_STRT_TM                       
    CALLNAT 'STDN0282' OY-TIND_FAX_CUST.HLDY_STOP_TM                       
    CALLNAT 'STDN0282' OY-TIND_FAX_CUST.WKDY_STRT_TM                       
    CALLNAT 'STDN0282' OY-TIND_FAX_CUST.WKDY_STOP_TM                       
    CALLNAT 'STDN0282' OY-TIND_FAX_CUST.WKEND_STRT_TM                      
    CALLNAT 'STDN0282' OY-TIND_FAX_CUST.WKEND_STOP_TM                      
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE BLANK-LST-USED-DT                                    
IF CM-TDEST_INST.LST_ACS_DT = '0001-01-01'                                 
   OR CM-TDEST_INST.LST_ACS_DT NE MASK (YYYY'-'MM'-'DD)                    
   #ACS-YYYY := '    '                                                     
   #ACS-MM := '  '                                                         
   #ACS-DD := '  '                                                         
ELSE                                                                       
   #ACS-YYYY := CM-TDEST_INST.#LST-USED-DT-YYYY                            
   #ACS-MM := CM-TDEST_INST.#LST-USED-DT-MM                                
   #ACS-DD := CM-TDEST_INST.#LST-USED-DT-DD                                
END-IF                                                                     
END-SUBROUTINE                                                             
    DEFINE SUBROUTINE LOG-VALIDATION                                       
    RESET #FOUND                                                           
    DECIDE FOR FIRST CONDITION                                             
      WHEN (CM-TDEST_INST.CUST_633 NE ' ' AND #DEST_ABBR NE ' '            
      AND CM-TDEST_INST.ZTS NE ' ')                                        
        FIND NUMBER OH-TCDI_LOG WITH CO_ABBR = #CO-ABBR                    
         AND CUST_633 = CM-TDEST_INST.CUST_633                             
         AND DEST_333 = CM-TDEST_INST.DEST_333                             
         AND DEST_ST = CM-TDEST_INST.DEST_ST                               
         AND ZTS = CM-TDEST_INST.ZTS                                       
        IF *NUMBER > 0                                                     
          #FOUND := TRUE                                                   
        END-IF                                                             
      WHEN NONE                                                            
        IGNORE                                                             
    END-DECIDE                                                             
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE ASSIGN-KEYS                                          
    MOVE BY NAME CM-TDEST_INST TO #LOG-KEY-STRU                            
    RESET #LOG-KEY.SEQ                                                     
    END-SUBROUTINE                                                         
    DEFINE SUBROUTINE CONFIRM-NOTES                                        
    RESET #NOTE1 #NOTE2 #NOTE3 #NOTE4 #NOTE5 #NOTE6 #NOTE7 #NOTE8          
      #NOTE9 #NOTE10                                                       
    #INPUT-MAP := TRUE                                                     
    IF #ACTION = 'M'                                    
    AND (UPDATE-VIEW-1.CUST_633 ^= CM-TDEST_INST.CUST_633                  
    OR UPDATE-VIEW-1.DEST_333 ^= CM-TDEST_INST.DEST_333  
    OR UPDATE-VIEW-1.DEST_ST ^= CM-TDEST_INST.DEST_ST    
    OR UPDATE-VIEW-1.ZTS ^= CM-TDEST_INST.ZTS)           
      DECIDE FOR EVERY CONDITION                        
        WHEN UPDATE-VIEW-1.CUST_633 ^= CM-TDEST_INST.CUST_633              
          COMPRESS 'CUST NAME CHG' UPDATE-VIEW-1.CUST_633 INTO #NOTE10     
        WHEN UPDATE-VIEW-1.DEST_333 ^= CM-TDEST_INST.DEST_333              
        OR UPDATE-VIEW-1.DEST_ST ^= CM-TDEST_INST.DEST_ST                  
          COMPRESS 'STATION CHG' UPDATE-VIEW-1.DEST_333 INTO #LOG-LINE     
          #LOG-ST := UPDATE-VIEW-1.DEST_ST                                 
          #NOTE9 := #LOG-LINE                                              
        WHEN UPDATE-VIEW-1.ZTS ^= CM-TDEST_INST.ZTS                        
          COMPRESS 'ZTS CHG' UPDATE-VIEW-1.ZTS INTO #NOTE8                 
        WHEN NONE                                                          
          IGNORE                                                           
      END-DECIDE                                        
    END-IF                                              
    CALLNAT 'CDINLGNT'                                                     
      CM-TDEST_INST.CO_ABBR CM-TDEST_INST.CUST_633                         
      CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS       
      #ACTION #DEST_ABBR #DATE-L #TIME-L #NOTE1 #NOTE2 #NOTE3 #NOTE4       
      #NOTE5 #NOTE6 #NOTE7 #NOTE8 #NOTE9 #NOTE10 #INPUT-MAP                
    IF *PF-KEY = 'PF12'                                                    
      PERFORM FORMAT-REFORMAT                                              
      COMPRESS #ACTION 'Action aborted ' INTO MSG-INFO.##MSG               
      #COMMIT := FALSE                                                     
    END-IF                                                                 
    IF *PF-KEY = 'ENTR'                                                    
      #COMMIT := TRUE                                                      
    END-IF                                                                 
    END-SUBROUTINE                                                         
  END-REPEAT 
END-REPEAT 
DEFINE SUBROUTINE START-OF-PROGRAM                                         
#SYSTEM  := 'CDI'                                                          
#PRINTER := +ASSOC_PRTR_ID                                                 
#CO-ABBR := +CO_ABBR                                                       
COMPRESS +CO_ABBR +PGM_ABBR INTO #333-ST                                   
PERFORM CLEAR                                                              
INCLUDE CCSETSTD 
SET KEY PF6 NAMED 'Fax' PF9 NAMED 'Stns' PF10 NAMED 'Log'                  
  PF5 NAMED 'VCR'                                   
  PF11 NAMED 'OvTrk'                                
  PF7  NAMED 'AUDT'                                 
RESET STDASTN #DFO_ABBR                                                    
STDASTN.STN_333 := +DFO_333                                                
STDASTN.STN_ST  := +DFO_ST                                                 
PERFORM GET-STN-ABBR                                
#DFO_ABBR       := STDASTN.STN_ABBR                                        
RESET STDASTN #TSO_ABBR                                                    
STDASTN.STN_333 := +TSO_333                                                
STDASTN.STN_ST  := +TSO_ST                                                 
PERFORM GET-STN-ABBR                
#TSO_ABBR := STDASTN.STN_ABBR                                              
#DFO_333  := +DFO_333                                                      
#DFO_ST   := +DFO_ST                                                       
#TSO_333  := +TSO_333                                                      
#TSO_ST   := +TSO_ST                                                       
ASSIGN STDASTN1.STN_333 = #TSO_333                                         
ASSIGN STDASTN1.STN_ST  = #TSO_ST                                          
ASSIGN STDASTN1.CO_ABBR = #CO-ABBR                                         
CALLNAT 'STDNSTN1' STDASTN1                                                
ASSIGN CM-TDEST_INST.BNSF_DIV_CD = STDASTN1.BNSF_DIV_CD                    
CALL 'ZCSYSID' #PARM                                                       
COMPUTE #ZCSYSID-RETURN-CD = RET('ZCSYSID')                                
MOVE 'CDISSPOT' TO #PROGRAM2                                               
MOVE *INIT-USER TO #USER-ID2                                               
CALL 'MSCKACF2' #ACCESS-TYPE                                               
  #USER-ID2 #RESOURCE-TYPE #PROGRAM2 #RETURN-CODE #REASON-CODE             
  #SECURITY-MSG                                                            
IF #RETURN-CODE = 0                                                        
  RESET #SECURITY-MSG                                                      
END-IF                                                                     
ASSIGN #CP-EXCP-CV   = #SWFL-FMT-CV                
  = #ORD-TRK-EXCP-CV = #TRK-TYPE-CV                                        
  = #MAX-CARS-CV     = #MAX-FEET-CV                                        
  = #USBL-TRK-PRF-CV = #MAX-TRK-CARS-CV = #CISS-INV-CV      
  = #MAX-TRK-FEET-CV = #AUTO-ORDER-CV                                      
  = #EXCS-CARS-CV = #EXCS-FEET-CV = (AD=U)                                 
SELECT 'Y' INTO #NOTF-TEL-SWITCH FROM OH-TRPT_CNTR 
  WHERE DFO_333 = 'NOTFTEL'                                                
    AND DFO_ST  = 'XX'                                                     
    AND RPT_TYP = 'SWITCH'                                                 
END-SELECT                                                                 
END-SUBROUTINE                                                             
DEFINE SUBROUTINE INSERT-PASSWORD                                          
CALLNAT 'CDINCFAX' OY-TIND_FAX_CUST.CUST_633 #DEST_ABBR                    
  OY-TIND_FAX_CUST.NOTF_TEL_NUMB #LOOP-CNT MSG-INFO.##MSG                  
  OY-TIND_FAX_CUST.CUST_NTFY_PSW                                           
IF #LOOP-CNT > 200                                                         
  ESCAPE ROUTINE                                                           
END-IF                                                                     
IF #ACTION = #ADD                                
  RESET #CCCR-EXISTS                                                       
  PERFORM CHECK-CCCR-EXISTS                                                
  IF #CCCR-EXISTS = 'N'                                                    
    PERFORM GET-DIVISION                                                   
  ELSE                                                                     
    CALLNAT 'CDINSTRF' OY-TIND_FAX_CUST                                    
  END-IF                                                                   
ELSE                                             
  CALLNAT 'CDINSTRF' OY-TIND_FAX_CUST        
END-IF                                           
IF NOT #CCCR-EXCP                         
  CALLNAT 'STDNCNTR'   +CO_ABBR #CCCR-DFO-333 #CCCR-SWITCH                 
  IF #CCCR-SWITCH                                                          
    IF #CCCR-ADD = 'Y'                                                     
      #CUST-NTFY-PSWD-T(1) := #CUST-NTFY-PSWD                              
      #CUST-NTFY-PSWD-TEMP(1) := OY-TIND_FAX_CUST.CUST_NTFY_PSW            
      CALLNAT 'YIMNCDIX' OY-TIND_FAX_CUST.CUST_633                         
        OY-TIND_FAX_CUST.DEST_333 OY-TIND_FAX_CUST.DEST_ST                 
        CM-TDEST_INST.ZTS +CO_ABBR 'CDIPIMNT' #CUST-NTFY-PSWD-T(*)         
        #CCCR-FOUND-T #USER-FOUND-T                                        
        #CCCR-USER-ID-T(*) #NOTF-FAX-NUMB-T(*)                             
        #VC-PHN-T(*) #EXTN-T(*)                                            
        #UN-SUBS-TIMESTMP-T(*) #CCCR-FNAME-T(*) #CCCR-MNAME-T(*)           
        #CCCR-LNAME-T(*) #CCCR-USER-EML-T(*) #CUST-NTFY-PSWD-TEMP(*)       
        #SUB-TYPE-T #SUBS-FOUND-T(*) #ROW-COUNT                            
        #IPOWER-ID-T(*)                                                    
        'SUBADDT '                                                         
    END-IF                                                                 
    IF #CCCR-UPD                                                           
    AND (UPDATE-VIEW-1.CP_CD = 'F' OR UPDATE-VIEW-1.CP_CD = 'G'            
    OR UPDATE-VIEW-1.NOTF_CD = 'F')                                        
      #CUST-NTFY-PSWD-T(1) := #CUST-NTFY-PSWD                              
      #CUST-NTFY-PSWD-TEMP(1) := OY-TIND_FAX_CUST.CUST_NTFY_PSW            
      CALLNAT 'YIMNCDIX' OY-TIND_FAX_CUST.CUST_633                         
        OY-TIND_FAX_CUST.DEST_333                                          
        OY-TIND_FAX_CUST.DEST_ST   CM-TDEST_INST.ZTS +CO_ABBR              
        'CDIPIMNT' #CUST-NTFY-PSWD-T(*)                                    
        #CCCR-FOUND-T #USER-FOUND-T                                        
        #CCCR-USER-ID-T(*) #NOTF-FAX-NUMB-T(*)                             
        #VC-PHN-T(*) #EXTN-T(*)                                            
        #UN-SUBS-TIMESTMP-T(*) #CCCR-FNAME-T(*) #CCCR-MNAME-T(*)           
        #CCCR-LNAME-T(*) #CCCR-USER-EML-T(*) #CUST-NTFY-PSWD-TEMP(*)       
        #SUB-TYPE-T #SUBS-FOUND-T(*) #ROW-COUNT                            
        #IPOWER-ID-T(*)                                                    
        'SUBUPDTE'                                                         
    END-IF                                                                 
  ELSE                                                                     
    IF #CCCR-ADD = 'Y'                                                     
      SELECT * INTO VIEW OS-TCCCR_NOTF_SUBSC FROM OS-TCCCR_NOTF_SUBSC      
        WHERE CCCR_CUST_633 = OY-TIND_FAX_CUST.CUST_633                    
          AND STN_333       = OY-TIND_FAX_CUST.DEST_333                    
          AND STN_ST        = OY-TIND_FAX_CUST.DEST_ST                     
          AND CO_ABBR       = +CO_ABBR                                     
          AND CUST_NTFY_PSWD = #CUST-NTFY-PSWD                             
        IF NO RECORDS FOUND                                                
          RESET OS-TCCCR_NOTF_SUBSC                                        
          ESCAPE BOTTOM                                                    
        END-NOREC                                                          
        MOVE BY NAME OS-TCCCR_NOTF_SUBSC TO OS-VCCCR_NOTF_SUBSC            
        SELECT 'Y' INTO #CCCR-PRESENT FROM OS-TCCCR_NOTF_SUBSC             
          WHERE CCCR_CUST_633 = OY-TIND_FAX_CUST.CUST_633                  
            AND STN_333       = OY-TIND_FAX_CUST.DEST_333                  
            AND STN_ST        = OY-TIND_FAX_CUST.DEST_ST                   
            AND CO_ABBR       = +CO_ABBR                                   
            AND CUST_NTFY_PSWD = OY-TIND_FAX_CUST.CUST_NTFY_PSW            
            AND CSS_SUBSC_TYP = OS-VCCCR_NOTF_SUBSC.CSS_SUBSC_TYP          
            AND CCCR_USER_ID  = OS-VCCCR_NOTF_SUBSC.CCCR_USER_ID           
          IF NO RECORDS FOUND                                              
            OS-TCCCR_NOTF_SUBSC.CUST_NTFY_PSWD :=                          
              OY-TIND_FAX_CUST.CUST_NTFY_PSW                               
            IF OS-TCCCR_NOTF_SUBSC.STN_333_UNSUBSC_TS = ' '                
              OS-TCCCR_NOTF_SUBSC.N@STN_333_UNSUBSC_TS := -1               
            END-IF                                                         
            STORE OS-TCCCR_NOTF_SUBSC                                      
          END-NOREC                                                        
        END-SELECT                                                         
      END-SELECT                                                           
    END-IF                                                                 
    IF #CCCR-UPD                                                           
      SELECT * INTO VIEW OS-TCCCR_NOTF_SUBSC FROM OS-TCCCR_NOTF_SUBSC      
        WHERE CCCR_CUST_633 = OY-TIND_FAX_CUST.CUST_633                    
          AND STN_333       = OY-TIND_FAX_CUST.DEST_333                    
          AND STN_ST        = OY-TIND_FAX_CUST.DEST_ST                     
          AND CO_ABBR       = +CO_ABBR                                     
          AND CUST_NTFY_PSWD = #CUST-NTFY-PSWD                             
          AND (UPDATE-VIEW-1.CP_CD = 'F' OR UPDATE-VIEW-1.CP_CD = 'G'      
          OR UPDATE-VIEW-1.NOTF_CD = 'F')                                  
        IF NO RECORDS FOUND                                                
          RESET OS-TCCCR_NOTF_SUBSC                                        
          ESCAPE BOTTOM                                                    
        END-NOREC                                                          
        OS-TCCCR_NOTF_SUBSC.CUST_NTFY_PSWD :=                              
           OY-TIND_FAX_CUST.CUST_NTFY_PSW                                  
        UPDATE                                                             
      END-SELECT                                                           
    END-IF                                                                 
  END-IF                                            
END-IF                                              
END-SUBROUTINE                                                             
DEFINE SUBROUTINE FETCH-SSI                                                
IF #ACTION = #PURGE OR = #ADD                                              
  #TEMP-CO-ABBR   := +CO_ABBR                                              
  #DIRECT-COMMAND := 'SSI '                                                
  COMPRESS #DIRECT-COMMAND #TEMP-CO-ABBR INTO #DIRECT-COMMAND              
  COMPRESS #DIRECT-COMMAND ',' 'B' ','                                     
    #KEY.CUST_633 ',' #KEY.DEST_333 ','                                    
    #KEY.DEST_ST INTO #DIRECT-COMMAND LEAVING NO SPACE                     
  CALLNAT 'NAVAAN01' #DIRECT-COMMAND                                       
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE UPDATE-DMR                      
IF (#ACTION = #MODIFY AND #KEY-MODIFIED)                                   
OR (#ACTION = #PURGE OR = #ADD) OR #DMR-MODIFIED                           
  IF #ACTION = #MODIFY AND #KEY-MODIFIED                                   
    #TMP-KEY := #DISPLAYED-KEY                 
    CALLNAT 'CDINC162' #TMP-KEY.CUST_633       
      #TMP-KEY.DEST_333 #TMP-KEY.DEST_ST #TMP-KEY.#TMP-ZT                  
  END-IF                                                                   
  MOVE BY NAME CM-TDEST_INST TO #TMP-STRUCTURE 
  CALLNAT 'CDINC162' #TMP-KEY.CUST_633         
    #TMP-KEY.DEST_333 #TMP-KEY.DEST_ST #TMP-KEY.#TMP-ZT                    
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE GET-STN-ABBR                    
STDASTN.CO_ABBR := +CO_ABBR                                                
CALLNAT 'STDNSTN' STDASTN                                                  
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CALL-UPDT-MAX-ROUTINE                                    
CALLNAT 'CDINUSBL' CM-TDEST_INST.CO_ABBR                                   
  CM-TDEST_INST.CUST_633 CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST      
  CM-TDEST_INST.ZTS CM-TDEST_INST.USBL_TRK_CARS                            
  CM-TDEST_INST.USBL_TRK_FEET CM-TDEST_INST.USBL_TRK_PRF                   
  CM-TDEST_INST.EXCS_CARS CM-TDEST_INST.EXCS_FEET                          
  CM-TDEST_INST.MAX_TRK_CARS CM-TDEST_INST.MAX_TRK_FEET                    
  CM-TDEST_INST.CP_EXCP CM-TDEST_INST.ORD_TRK_EXCP                         
  CM-TDEST_INST.WO_CUTOF_TM_1 CM-TDEST_INST.WO_CUTOF_TM_2                  
  CM-TDEST_INST.WO_CUTOF_TM_3                                              
END-SUBROUTINE                                                             
DEFINE SUBROUTINE SEND-EMAIL-CHANGES                                       
IF ((UPDATE-VIEW-1.USBL_TRK_PRF                 
  NE CM-TDEST_INST.USBL_TRK_PRF)                                           
OR (UPDATE-VIEW-1.OPEN_GATE_FLG                                            
  NE CM-TDEST_INST.OPEN_GATE_FLG))                                         
AND (CM-TDEST_INST.USBL_TRK_PRF NE 'C'                                     
OR CM-TDEST_INST.OPEN_GATE_FLG NE 'N')                                     
  CM-TDEST_INST.ORD_IN_CD := ' '                                           
END-IF                                                                     
CALLNAT 'CDINIMNT'                                                         
  #OPTION UPDATE-VIEW-1.OPEN_GATE_FLG #SAVE-TRACK-TYPE #SAVE-MAX-CARS      
  #SAVE-MAX-FEET UPDATE-VIEW-1.CP_EXCP UPDATE-VIEW-1.ORD_TRK_EXCP          
  UPDATE-VIEW-1.USBL_TRK_PRF UPDATE-VIEW-1.MAX_TRK_CARS                    
  UPDATE-VIEW-1.MAX_TRK_FEET UPDATE-VIEW-1.SWFL_FMT_CD                     
  UPDATE-VIEW-1.AUTO_ORDER                                                 
  UPDATE-VIEW-1.DMRG_TYPE_CD                    
  UPDATE-VIEW-1.INV_FMT_CD                      
  UPDATE-VIEW-1.CP_FORM                         
  UPDATE-VIEW-1.PVT_SWTCH                       
  UPDATE-VIEW-1.ORD_IN_CD                       
  UPDATE-VIEW-1.CISS_SWTCH_CD                   
  UPDATE-VIEW-1.LTRK_AGRM_ID                    
  UPDATE-VIEW-1.NOTF_TEL_NUMB                   
  UPDATE-VIEW-1.VC_TEL_NUMB                     
  UPDATE-VIEW-1.CP_NOTF_PERS                    
  UPDATE-VIEW-1.NOTF_PERSON                     
  CM-TDEST_INST.CUST_633 CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST      
  CM-TDEST_INST.ZTS CM-TDEST_INST.OPEN_GATE_FLG #TRACK-TYPE #MAX-CARS      
  #MAX-FEET CM-TDEST_INST.CP_EXCP CM-TDEST_INST.ORD_TRK_EXCP               
  CM-TDEST_INST.USBL_TRK_PRF CM-TDEST_INST.MAX_TRK_CARS                    
  CM-TDEST_INST.MAX_TRK_FEET CM-TDEST_INST.SWFL_FMT_CD                     
  CM-TDEST_INST.AUTO_ORDER                                                 
  CM-TDEST_INST.DMRG_TYPE_CD                    
  CM-TDEST_INST.INV_FMT_CD                      
  CM-TDEST_INST.CP_FORM                         
  CM-TDEST_INST.PVT_SWTCH                       
  CM-TDEST_INST.ORD_IN_CD                       
  CM-TDEST_INST.CISS_SWTCH_CD                   
  CM-TDEST_INST.LTRK_AGRM_ID                    
  CM-TDEST_INST.NOTF_TEL_NUMB                   
  CM-TDEST_INST.VC_TEL_NUMB                     
  CM-TDEST_INST.CP_NOTF_PERS                    
  CM-TDEST_INST.NOTF_PERSON                     
  +MESSAGE #ACTION #DATE-L #TIME-L #NOTE1 #NOTE2 #NOTE3 #NOTE4 #NOTE5      
  #NOTE6 #NOTE7 #NOTE8 #NOTE9 #NOTE10                                      
  CM-TDEST_INST.BNSF_DIV_CD                            
  CDSELPDA DIALOG-INFO MSG-INFO                                            
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-KNOWLEDGE-BASED-SYSTEM                             
ASSIGN #NO-OF-TRACKS = 1                                                   
CALLNAT 'CDINIMN1'                                                         
  #OPTION #ACTION #KEY-MODIFIED CM-TDEST_INST.CUST_633                     
  CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS           
  CM-TDEST_INST.BNSF_DIV_CD UPDATE-VIEW.CUST_633 UPDATE-VIEW.DEST_333      
  UPDATE-VIEW.DEST_ST UPDATE-VIEW.ZTS #CO-ABBR #KB-CUST-EXIST              
  #NO-OF-TRACKS CDSELPDA DIALOG-INFO MSG-INFO                              
END-SUBROUTINE                                                             
DEFINE SUBROUTINE READ-SSI                    

CALLNAT 'CDINSSIW' CM-TDEST_INST.CUST_633 CM-TDEST_INST.DEST_333           
CM-TDEST_INST.DEST_ST                                    
END-SUBROUTINE                                                             
DEFINE SUBROUTINE SPOT-VS-AUTO                                             
IF CM-TDEST_INST.OPEN_GATE_FLG = 'B'OR= 'L' OR= 'E' 
AND CM-TDEST_INST.AUTO_ORDER = 'N' OR = ' '         
  INPUT WINDOW = 'ADD-VERIFY'                                              
    / '***************************************************' (CD=TU)        
    / 'This CDI Instruction is currently "Spot On Arrival"' (CD=TU)        
    / 'but the "Auto Order" process is not turned on.' (CD=TU)             
    // 'Is This Correct?' (CD=TU) #POP-INPUT (AD=MUT CD=GR)                
    '(YES,NO)' (CD=TU)                                                     
    / '***************************************************' (CD=TU)        
ELSE                                              
  INPUT WINDOW = 'ADD-VERIFY'                                              
    / '*******************************************************' (CD=TU)    
    / 'This CDI Instruction is currently not "Spot On' (CD=TU)             
    / 'Arrival" but the "Auto Order" process is turned on.' (CD=TU)        
    // 'Is This Correct?' (CD=TU) #POP-INPUT (AD=MUT CD=GR)                
    '(YES,NO)' (CD=TU)                                                     
    / '***************************************************' (CD=TU)        
END-IF                                            
IF NOT (#POP-INPUT = 'YES' OR= 'NO ' OR= ' NO')                            
  REINPUT 'INPUT MUST BE YES OR NO' (CD=RE) ALARM                          
END-IF                                                                     
IF #POP-INPUT = 'NO' OR *PF-KEY = 'PF12'                                   
  COMPRESS #ACTION 'Action Aborted By User' INTO MSG-INFO.##MSG            
  #COMMIT_VER := FALSE                                                     
ELSE                                                                       
  IF NOT *PF-KEY = 'ENTR'                                                  
    REINPUT 'Please press "Enter" to confirm' (CD=RE) ALARM                
  ELSE                                                                     
    #COMMIT_VER := TRUE                                                    
    #POP-INPUT := 'NO '                                                    
  END-IF                                                                   
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CISS-INV-WARNING                          
IF #WARN-CISS-INV                                                          
  RESET #WARN-CISS-INV                                                     
  SELECT SINGLE 1 INTO #CISS-INV-FLG-CNT FROM CM-TDEST_INST                
    WHERE CO_ABBR = #CO-ABBR                                               
      AND CUST_633 = CDIANUMB.#CUSTOMER-633                                
      AND DEST_333 = CDIANUMB.#CITY-333                                    
      AND DEST_ST = CDIANUMB.#STATE                                        
      AND CISS_SWTCH_CD = 'Y'                                              
      <<FETCH FIRST 1 ROW ONLY>>                                           
    ESCAPE BOTTOM                                                          
  END-SELECT                                                               
  IF #CISS-INV-FLG-CNT > 0                                                 
    REINPUT 'Warning: Customer has tracks with CISS Inv turned on. ' -     
      'Press enter to continue.'                                           
  END-IF                                                                   
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE OVF-TRK-WARNING                  
IF #WARN-OVF-TRK                                                           
  RESET #WARN-OVF-TRK                                                      
  SELECT SINGLE 1 INTO #OVF-TRK-CNT FROM CM-TDEST_OVF_TRKS                 
    WHERE CO_ABBR = #CO-ABBR                                               
      AND CUST_633 = CDIANUMB.#CUSTOMER-633                                
      AND DEST_333 = CDIANUMB.#CITY-333                                    
      AND DEST_ST = CDIANUMB.#STATE                                        
      AND OVF_TRK = SUBSTR(CM-TDEST_INST.ZTS,1,4)                          
    <<FETCH FIRST 1 ROW ONLY>>                                             
    ESCAPE BOTTOM                                                          
  END-SELECT                                                               
  IF #OVF-TRK-CNT > 0                                                      
    #OVF-TRK-FLG := TRUE                                                   
    REINPUT 'Confirm needed: Track will be purged as Overflow track ' -    
      'on other CDIs'                                                      
  END-IF                                                                   
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-TEAM-TRACK            
RESET #TEAM-TRK-EXIST-FLG                                                  
IF CM-TDEST_INST.TEAM_TRK_FLG = 'Y'                                        
  SELECT SINGLE * INTO VIEW CM-TDEST_TEAM_TRK_CAP                          
    FROM CM-TDEST_TEAM_TRK_CAP                                             
    WHERE DEST_333 = CM-TDEST_INST.DEST_333                                
      AND DEST_ST = CM-TDEST_INST.DEST_ST                                  
      AND SUBSTR(ZTS,1,4) = SUBSTR( CM-TDEST_INST.ZTS,1,4)                 
      AND CO_ABBR = #CO-ABBR                                               
    <<FETCH FIRST 1 ROW ONLY>>                                             
    IF NO RECORDS FOUND                                                    
      ESCAPE BOTTOM                                                        
    END-NOREC                                                              
    CM-TDEST_INST.USBL_TRK_PRF:= CM-TDEST_TEAM_TRK_CAP.USBL_TRK_PRF        
    #MAX-CARS                 := CM-TDEST_TEAM_TRK_CAP.USBL_TRK_CARS       
    #MAX-FEET                 := CM-TDEST_TEAM_TRK_CAP.USBL_TRK_FEET       
    #TEAM-TRK-EXIST:= 'X'                                                  
    RESET CM-TDEST_INST.EXCS_FEET CM-TDEST_INST.MAX_TRK_FEET               
      CM-TDEST_INST.EXCS_CARS CM-TDEST_INST.MAX_TRK_CARS                   
  END-SELECT                                                               
  RESET CM-TDEST_INST.MAX_TRK_FEET CM-TDEST_INST.MAX_TRK_CARS              
  #MAX-TRK-CARS-CV := (AD=P)                                               
  #MAX-TRK-FEET-CV := (AD=P)                                               
  IF #ACTION <> #ADD                                                       
    IF #TEAM-TRK-EXIST-FLG                                                 
      #MAX-CARS-CV := (AD=P)                                               
      #MAX-FEET-CV:= (AD=P)                                                
      #USBL-TRK-PRF-CV := (AD=P)                                           
      #MAX-TRK-CARS-CV := (AD=P)                                           
      #MAX-TRK-FEET-CV := (AD=P)                                           
      #EXCS-CARS-CV := (AD=P)                                              
      #EXCS-FEET-CV := (AD=P)                                              
    END-IF                                                                 
  END-IF                                                                   
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-ADD-TEAM-TRK                                       
RESET #CHANGE RESET CM-TDEST_TEAM_TRK_CAP                                  
IF CM-TDEST_INST.TEAM_TRK_FLG = 'Y'                                        
  SELECT SINGLE * INTO VIEW CM-TDEST_TEAM_TRK_CAP                          
    FROM CM-TDEST_TEAM_TRK_CAP                                             
    WHERE DEST_333 = CM-TDEST_INST.DEST_333                                
      AND DEST_ST = CM-TDEST_INST.DEST_ST                                  
      AND SUBSTR(ZTS,1,4) = SUBSTR(CM-TDEST_INST.ZTS,1,4)                  
      AND CO_ABBR = #CO-ABBR                                               
    IF NO RECORDS FOUND                                                    
      INPUT WINDOW = 'TMTRKS-ENTRY' (IP=OFF)            
        / 3X '                 **** ERROR ****'  (CD=RE)                   
        // 3X 'A TMTRKS Entry does not exist for this team trk.'(CD=TU)    
        / 3X 'Please add via TMTRKS command' (CD=TU)                       
        // 3X 'Press ENTER to Return' (CD=NE)     
      IF NOT (*PF-KEY = 'ENTR')                                            
        REINPUT 'Please press enter to return'   
          (CD=RE) ALARM                                                    
      ELSE                                       
        #TTERROR := TRUE                         
        ESCAPE BOTTOM                            
      END-IF                                           
    END-NOREC                                                              
    MOVE BY NAME CM-TDEST_TEAM_TRK_CAP TO CM-TDEST_INST                    
    CM-TDEST_INST.EXCS_CARS    := 0                                        
    CM-TDEST_INST.EXCS_FEET    := 0                                        
    IF CM-TDEST_INST.MAX_TRK_CARS < CM-TDEST_TEAM_TRK_CAP.USBL_TRK_CARS    
      CM-TDEST_INST.MAX_TRK_CARS := CM-TDEST_TEAM_TRK_CAP.USBL_TRK_CARS    
    END-IF                                                                 
    IF CM-TDEST_INST.MAX_TRK_FEET < CM-TDEST_TEAM_TRK_CAP.USBL_TRK_FEET    
      CM-TDEST_INST.MAX_TRK_FEET := CM-TDEST_TEAM_TRK_CAP.USBL_TRK_FEET    
    END-IF                                                                 
    #CHANGE := TRUE                                                        
    ESCAPE BOTTOM                                                          
  END-SELECT                                                               
END-IF                                                                     
END-SUBROUTINE                                     
DEFINE SUBROUTINE CHECK-MODIFY-TEAM-TRK                                    
RESET #CHANGE                                                              
RESET CM-TDEST_TEAM_TRK_CAP                                                
IF CM-TDEST_INST.TEAM_TRK_FLG = 'Y'                                        
  SELECT SINGLE * INTO VIEW CM-TDEST_TEAM_TRK_CAP                          
    FROM CM-TDEST_TEAM_TRK_CAP                                             
    WHERE DEST_333 = CM-TDEST_INST.DEST_333                                
      AND DEST_ST = CM-TDEST_INST.DEST_ST                                  
      AND SUBSTR(ZTS,1,4) = SUBSTR(CM-TDEST_INST.ZTS,1,4)                  
      AND CO_ABBR = #CO-ABBR                                               
    IF NO RECORDS FOUND                                                    
      INPUT WINDOW = 'TMTRKS-ENTRY' (IP=OFF)                               
        / 3X '                 **** ERROR ****'  (CD=RE)                   
       // 3X 'A TMTRKS Entry Does not Exist for this Team Track.'(CD=TU)   
        / 3X 'Please Add via TMTRKS Command' (CD=TU)                       
        // 3X 'Press ENTER to return' (CD=NE)     
      IF NOT (*PF-KEY = 'ENTR')                                            
        REINPUT 'Please press enter to return'   
          (CD=RE) ALARM                                                    
      ELSE                                       
        #TTERROR := TRUE                         
        ESCAPE BOTTOM                            
      END-IF                                           
    END-NOREC                                                              
    MOVE BY NAME CM-TDEST_TEAM_TRK_CAP TO CM-TDEST_INST                    
    CM-TDEST_INST.EXCS_CARS    := 0                                        
    CM-TDEST_INST.EXCS_FEET    := 0                                        
    IF CM-TDEST_INST.MAX_TRK_CARS < CM-TDEST_TEAM_TRK_CAP.USBL_TRK_CARS    
      CM-TDEST_INST.MAX_TRK_CARS := CM-TDEST_TEAM_TRK_CAP.USBL_TRK_CARS    
    END-IF                                                                 
    IF CM-TDEST_INST.MAX_TRK_FEET < CM-TDEST_TEAM_TRK_CAP.USBL_TRK_FEET    
      CM-TDEST_INST.MAX_TRK_FEET := CM-TDEST_TEAM_TRK_CAP.USBL_TRK_FEET    
    END-IF                                                                 
  END-SELECT                                                               
END-IF                                                                     
END-SUBROUTINE                                
DEFINE SUBROUTINE FIND-LOG-DATE-TIME                         
SELECT SINGLE * INTO VIEW CM-TSTN-T FROM CM-TSTN                           
  WHERE CO_ABBR = CM-TDEST_INST.CO_ABBR                                    
    AND STN_333 = CM-TDEST_INST.DEST_333                                   
    AND STN_ST  = CM-TDEST_INST.DEST_ST                                    
  MOVE CM-TSTN-T.TIME_ZONE TO #TIME_ZONE-L                                 
END-SELECT                                                                 
CALLNAT 'DATETIME' #DATE-L #TIME-L #TIME_ZONE-L                            
END-SUBROUTINE                                                             
DEFINE SUBROUTINE FIND-CURRENT-PASSWORD        
SELECT CUST_NTFY_PSW INTO #CUST-NTFY-PSWD FROM OY-TIND_FAX_CUST            
  WHERE CUST_633 = UPDATE-VIEW-1.CUST_633                                  
    AND DEST_333 = UPDATE-VIEW-1.DEST_333                                  
    AND DEST_ST = UPDATE-VIEW-1.DEST_ST                                    
    AND NOTF_TEL_NUMB = UPDATE-VIEW-1.NOTF_TEL_NUMB                        
END-SELECT                                                                 
END-SUBROUTINE                                                             
DEFINE SUBROUTINE SYNC-CCCR-PASSWORD                                       
CALLNAT 'STDNCNTR'   +CO_ABBR #CCCR-DFO-333 #CCCR-SWITCH                   
IF #CCCR-SWITCH                                                            
  #CUST-NTFY-PSWD-T(1) := #CUST-NTFY-PSWD                                  
  CALLNAT 'YIMNCDIX' CM-TDEST_INST.CUST_633                                
    CM-TDEST_INST.DEST_333                                                 
    CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS #CO-ABBR                       
    'CDIPIMNT' #CUST-NTFY-PSWD-T(*)                                        
    #CCCR-FOUND-T #USER-FOUND-T                                            
    #CCCR-USER-ID-T(*) #NOTF-FAX-NUMB-T(*)                                 
    #VC-PHN-T(*) #EXTN-T(*)                                                
    #UN-SUBS-TIMESTMP-T(*) #CCCR-FNAME-T(*) #CCCR-MNAME-T(*)               
    #CCCR-LNAME-T(*) #CCCR-USER-EML-T(*) #CUST-NTFY-PSWD-TEMP(*)           
    #SUB-TYPE-T #SUBS-FOUND-T(*) #ROW-COUNT                                
    #IPOWER-ID-T(*)                                                        
    'SUBUPDT '                                                             
ELSE                                                                       
  SELECT CUST_NTFY_PSWD INTO #CUST-NTFY-PSWD FROM OS-TCCCR_NOTF_SUBSC      
    WHERE CCCR_CUST_633 = CM-TDEST_INST.CUST_633                           
      AND STN_333       = CM-TDEST_INST.DEST_333                           
      AND STN_ST        = CM-TDEST_INST.DEST_ST                            
      AND CO_ABBR       = +CO_ABBR                                         
      AND CUST_NTFY_PSWD > ' '                                             
    IF NO RECORDS FOUND                                                    
      RESET OS-TCCCR_NOTF_SUBSC                                            
      ESCAPE BOTTOM                                                        
    END-NOREC                                                              
    SELECT NOTF_TEL_NUMB INTO #FAX-NUMB FROM OY-TIND_FAX_CUST              
      WHERE CUST_633 = CM-TDEST_INST.CUST_633                              
        AND DEST_ST  = CM-TDEST_INST.DEST_ST                               
        AND DEST_333 = CM-TDEST_INST.DEST_333                              
        AND CUST_NTFY_PSW = #CUST-NTFY-PSWD                                
      IF NO RECORDS FOUND                                                  
        DELETE FROM OS-TCCCR_NOTF_SUBSC                                    
          WHERE CCCR_CUST_633 = CM-TDEST_INST.CUST_633                     
            AND STN_333 = CM-TDEST_INST.DEST_333                           
            AND STN_ST  = CM-TDEST_INST.DEST_ST                            
            AND CO_ABBR = +CO_ABBR                                         
            AND CUST_NTFY_PSWD = #CUST-NTFY-PSWD                           
            AND STN_333_UNSUBSC_TS IS NULL                                 
      END-NOREC                                                            
    END-SELECT                                                             
    RESET #CUST-NTFY-PSWD                                                  
  END-SELECT                                                               
END-IF                                              
END-SUBROUTINE                                  
DEFINE SUBROUTINE GET-CCCR-DATA                       
CALLNAT 'STDNCNTR' #CO-ABBR #CCCR-DFO-333 #CCCR-SWITCH                     
IF #CCCR-SWITCH                                                            
  RESET #CCCR-USER-ID #CCCR-FULLNAME #CCCR-USER-EML OS-VCCCR_USER_ID       
    #VC-PHN #CCCR-CV #CCCR-FAX  #CCCR-FOUND-T #USER-FOUND-T                
    #CCCR-USER-ID-T(*) #NOTF-FAX-NUMB-T(*)  #VC-PHN-T(*) #EXTN-T(*)        
    #UN-SUBS-TIMESTMP-T(*) #CCCR-FNAME-T(*) #CCCR-MNAME-T(*)               
    #CCCR-LNAME-T(*) #CCCR-USER-EML-T(*)    #CUST-NTFY-PSWD-TEMP(*)        
    #SUB-TYPE-T #SUBS-FOUND-T(*) #PROCESS-FLAG-T   := 'CDIINFO '           
  CALLNAT 'YIMNCDIX' CM-TDEST_INST.CUST_633 CM-TDEST_INST.DEST_333         
    CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS #CO-ABBR                       
    'CDIPIMNT' #CUST-NTFY-PSWD-T(*)  #CCCR-FOUND-T #USER-FOUND-T           
    #CCCR-USER-ID-T(*) #NOTF-FAX-NUMB-T(*)  #VC-PHN-T(*) #EXTN-T(*)        
    #UN-SUBS-TIMESTMP-T(*) #CCCR-FNAME-T(*) #CCCR-MNAME-T(*)               
    #CCCR-LNAME-T(*) #CCCR-USER-EML-T(*)    #CUST-NTFY-PSWD-TEMP(*)        
    #SUB-TYPE-T #SUBS-FOUND-T(*) #ROW-COUNT #IPOWER-ID-T(*)                
    #PROCESS-FLAG-T                                                        
  #CCCR-USER-ID    := #CCCR-USER-ID-T(1)                                   
  IF #CCCR-FOUND-T =  'N' OR  #USER-FOUND-T =  'N'                         
    #CCCR-LOCAL-CONTACT := CM-TDEST_INST.CP_NOTF_PERS                      
    #CCCR-USER-EML      := CM-TDEST_INST.NOTF_EMAIL_ID                     
    #VC-PHN             := CM-TDEST_INST.VC_TEL_NUMB                       
    #CCCR-CV            := (CD=RE)                                         
  ELSE                                                                     
    COMPRESS #CCCR-FNAME-T(1) #CCCR-MNAME-T(1) #CCCR-LNAME-T(1)            
      INTO #CCCR-FULLNAME                                                  
    #CCCR-LOCAL-CONTACT := #CCCR-FULLNAME                                  
    IF #EXTRA-CNCT > ' '                                                   
      #TRUNC-CNCT := '...'                                                 
    END-IF                                                                 
    #CCCR-USER-EML := #CCCR-USER-EML-T(1)                                  
    IF #EXTRA-EML > ' '                                                    
      #TRUNC-EML := '...'                                                  
    END-IF                                                                 
    #VC-PHN := #VC-PHN-T(1)                                                
    IF #EXTRA > ' '                                                        
      #TRUNC := '...'                                                      
    END-IF                                                                 
  END-IF                                                                   
  IF #NOTF-TEL-SWITCH = 'Y'                                                
    #CCCR-FAX := #NOTF-FAX-NUMB-T(1)                                       
  END-IF                                                                   
ELSE                                                                       
  RESET #CCCR-USER-ID #CCCR-FULLNAME #CCCR-USER-EML OS-VCCCR_USER_ID       
        #VC-PHN #CCCR-CV                                                   
  CCCR.                                                                    
  SELECT CCCR_USER_ID INTO #CCCR-USER-ID FROM OS-TCCCR_CDI_INFO            
    WHERE CCCR_CUST_633 = CM-TDEST_INST.CUST_633                           
      AND STN_333       = CM-TDEST_INST.DEST_333                           
      AND STN_ST        = CM-TDEST_INST.DEST_ST                            
      AND ZTS           = CM-TDEST_INST.ZTS                                
      AND CO_ABBR       = #CO-ABBR                                         
    FETCH FIRST 1 ROW ONLY                                                 
    IF NO RECORDS FOUND                                                    
      #CCCR-LOCAL-CONTACT := CM-TDEST_INST.CP_NOTF_PERS  
      #CCCR-USER-EML      := CM-TDEST_INST.NOTF_EMAIL_ID                   
      #VC-PHN             := CM-TDEST_INST.VC_TEL_NUMB                     
      #CCCR-CV            := (CD=RE)                     
      ESCAPE BOTTOM(CCCR.)                                                 
    END-NOREC                                                              
    SELECT * INTO VIEW OS-VCCCR_USER_ID FROM OS-TCCCR_USER_ID              
      WHERE CCCR_USER_ID = #CCCR-USER-ID                                   
      IF NO RECORDS FOUND                   
        #CCCR-LOCAL-CONTACT := CM-TDEST_INST.CP_NOTF_PERS                  
        #CCCR-USER-EML      := CM-TDEST_INST.NOTF_EMAIL_ID                 
        #VC-PHN             := CM-TDEST_INST.VC_TEL_NUMB                   
        #CCCR-CV            := (CD=RE)                                     
        ESCAPE BOTTOM(CCCR.)                                               
      END-NOREC                                                            
      COMPRESS OS-VCCCR_USER_ID.CCCR_USER_FNME                             
        OS-VCCCR_USER_ID.CCCR_USER_MNME OS-VCCCR_USER_ID.CCCR_USER_LNME    
        INTO #CCCR-FULLNAME                                                
      #CCCR-LOCAL-CONTACT := #CCCR-FULLNAME                                
      IF #EXTRA-CNCT > ' '                                                 
        #TRUNC-CNCT := '...'                                               
      END-IF                                                               
      #CCCR-USER-EML := OS-VCCCR_USER_ID.CCCR_USER_EML                     
      IF #EXTRA-EML > ' '                                                  
        #TRUNC-EML := '...'                                                
      END-IF                                                               
      #VC-PHN := OS-VCCCR_USER_ID.USER_PHN_NBR                             
      IF #EXTRA > ' '                                                      
        #TRUNC := '...'                                                    
      END-IF                                                               
      IF #NOTF-TEL-SWITCH = 'Y'                     
        #CCCR-FAX := OS-VCCCR_USER_ID.USER_FAX_NBR                         
      END-IF                                                               
    END-SELECT                                                             
  END-SELECT                                                               
  #CCCR-FAX := CM-TDEST_INST.NOTF_TEL_NUMB          
END-IF                                              
END-SUBROUTINE                                   
DEFINE SUBROUTINE STORE-AUDIT                       
#USER-ID := *USER                                                          
CALLNAT 'DMINDSTU' CM-TDEST_INST.CUST_633 CM-TDEST_INST.DEST_333           
  CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS CM-TDEST_INST.CO_ABBR            
  #ACTION-AUDT #USER-ID                                                    
END-SUBROUTINE                                      
DEFINE SUBROUTINE RESTORE-HISTORY                   
CALLNAT 'DMINDRAU' CM-TDEST_INST.CUST_633 CM-TDEST_INST.DEST_333           
  CM-TDEST_INST.DEST_ST CM-TDEST_INST.ZTS CM-TDEST_INST.CO_ABBR            
  #CDI-AUDT_CRET_TS CM-TDEST_INST.DEST_333 CM-TDEST_INST.DEST_ST           
  #DOING-RESTORE                                                           
END-SUBROUTINE                                      
DEFINE SUBROUTINE CHECK-CDIFLLS-CUSTOMER         
#INDALSE1.#EXISTS := FALSE                       
RESET #INDALSE1 #LSE-ZTS                         
#CDIFLLS-IND := 'N'                              
MOVE LEFT CM-TDEST_INST.ZTS TO #LSE-ZTS-TRK                                
IF (#LSE-ZTS-TRK = MASK(AA' ') OR = MASK(AAA' ') OR = MASK(AAAA))          
  RESET #LSE-ZTS-SPT                                                       
ELSE                                                                       
  MOVE RIGHT CM-TDEST_INST.ZTS TO #LSE-ZTS                                 
  #LSE-ZTS-SPT := '00'                                                     
END-IF                                           
ASSIGN #INDALSE1.CUST_633        = CM-TDEST_INST.CUST_633                  
ASSIGN #INDALSE1.DEST_333        = CM-TDEST_INST.DEST_333                  
ASSIGN #INDALSE1.DEST_ST         = CM-TDEST_INST.DEST_ST                   
ASSIGN #INDALSE1.ZTS             = #LSE-ZTS                                
ASSIGN #INDALSE1.LSE_TRK_GRP_ID  = ' '                                     
ASSIGN #INDALSE1.#OTHER-CRITERIA = ' '                                     
ASSIGN #INDALSE1.#USBL-TRK-PRF   = ' ' 
ASSIGN #INDALSE1.CO_ABBR         = #CO-ABBR                                
ASSIGN #INDALSE1.#CALLING-PROG   = 'CDIPIMNT'                              
ASSIGN #INDALSE1.#METHOD         = 'AGMTRNGE'                              
CALLNAT 'INDNLSE1' #INDALSE1                                               
IF #INDALSE1.#EXISTS                            
  #CDIFLLS-IND := 'Y'                            
  IF #INDALSE1.BILLG_BAT_CD = 'N'  
    #CDIFLLS-IND := 'X'                                                    
  END-IF                                         
END-IF                                           
END-SUBROUTINE                                                             
DEFINE SUBROUTINE KICK-OFF-CDIFLLS-UPDATE        
RELEASE STACK                                                              
STACK TOP DATA FORMATTED #CDIFLLS                                          
IF *HOSTNAME = 'XAB1'                                                      
  STACK TOP DATA ' '                                                       
ELSE                                                                       
  STACK TOP DATA 'YI$$001'                                                 
END-IF                                                                     
ASSIGN #JCL-PGM          = 'CDICCSTT'                                      
ASSIGN #USER             = ' '                                             
ASSIGN #LIBRARY-ID       = *LIBRARY-ID                                     
ASSIGN #PROGRAM-ID       = *PROGRAM                                        
ASSIGN #USER-LOGON-ID    = *USER                                           
ASSIGN #USER-PASSWORD    = *USER                                           
ASSIGN #ASSOC-PRTR-ID    = ' '                                             
ASSIGN #PRINTER-OUTPUT   = ' '                                             
ASSIGN #NABRJE01.#RETURN = 0                                               
CALLNAT 'NABRJE01'                                                         
  #JCL-PGM                                                                 
  #USER                                                                    
  #LIBRARY-ID                                                              
  #PROGRAM-ID                                                              
  #USER-LOGON-ID                                                           
  #USER-PASSWORD                                                           
  #ASSOC-PRTR-ID                                                           
  #PRINTER-OUTPUT                                                          
  #NABRJE01.#RETURN                                                        
END-SUBROUTINE                                   
DEFINE SUBROUTINE CHK-FOR-OVERFLW-TRKS           
IF UPDATE-VIEW.USBL_TRK_PRF <> CM-TDEST_INST.USBL_TRK_PRF                  
  PERFORM CHECK-FOR-OVERFLOW-TRKS                                          
  IF #TOTL-OVFLW-TRKS = 0                                                  
    PERFORM CHK-IF-OVF-TRK                                                 
  END-IF                                                                   
  IF #TOTL-OVFLW-TRKS > 0                                                  
    RESET #UPD-OVERFLW-TRKS                                                
    FORMAT KD=OFF                                                          
    SET CONTROL 'WBFL45C10B1/15'                                           
    INPUT                                                                  
      /2T '***' (RE) 'Note: The Max Spot Preference ' (TU) '***' (RE)      
      /2T '***' (RE) 'for' (TU) 'ALL' (NE) 'the tracks associated ' (TU)   
      '***' (RE)                                                           
      /2T '***' (RE) 'with this CDI will be updated.' (TU) '***' (RE)      
      //10T 'Do you wish to Continue?' (NE)                                
      / 16T  ' ' #UPD-OVERFLW-TRKS (AD=MUT CD=GR) '(Y/N)' (YE)             
    IF NOT (#UPD-OVERFLW-TRKS = 'Y' OR= 'N' OR= 'y' OR= 'n')               
      REINPUT 'Only Y/N valid' (CD=RE)                                     
        MARK *#UPD-OVERFLW-TRKS (AD=U CD=RE) ALARM                         
    END-IF                                                                 
    SET CONTROL 'WB'                                                       
    IF #UPD-OVERFLW-TRKS = 'Y'                                             
      RESET #TABLE(*)                                                      
      #MODE        := 'LOAD'     
      PERFORM CALL-STDNZOVF                                                
    ELSE                                                                   
      COMPRESS 'No changes made as'                                        
       'Multiple tracks associated with Max Spot Pref Change' INTO ##MSG   
      ESCAPE TOP                                                           
    END-IF                                                                 
  END-IF                                                                   
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE UPDATE-OVERFLW-TRKS           
#MODE        := 'UPDATE'   
PERFORM CALL-STDNZOVF                                                      
#MODE        := 'LOG'      
PERFORM CALL-STDNZOVF                                                      
RESET #TABLE(*)            
#MODE        := 'LOAD'     
PERFORM CALL-STDNZOVF                                                      
#MODE        := 'VERIFY'   
PERFORM CALL-STDNZOVF                                                      
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CALL-STDNZOVF                                            
+PREV-PGM := *PROGRAM                                                      
CALLNAT 'STDNZOVF'                                                         
  CM-TDEST_INST.CUST_633                                                   
  CM-TDEST_INST.DEST_333                                                   
  CM-TDEST_INST.DEST_ST                                                    
  CM-TDEST_INST.ZTS                                                        
  +CO_ABBR                                                                 
  CM-TDEST_INST.USBL_TRK_PRF                                               
  #MODE                                                                    
  #TABLE (*)                                                               
  #MAX                                                                     
RESET +PREV-PGM                                                            
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-FOR-OVERFLOW-TRKS                                  
RESET #TOTL-OVFLW-TRKS                                                     
ASSIGN CDIANUMB.#OPTION       = 'OVFL'                                     
ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633                     
ASSIGN CDIANUMB.#CITY-333     = CM-TDEST_INST.DEST_333                     
ASSIGN CDIANUMB.#STATE        = CM-TDEST_INST.DEST_ST                      
ASSIGN CDIANUMB.#ZTS-LO       = CM-TDEST_INST.ZTS                          
CALLNAT 'CDINNUMB'                                                         
  CDIANUMB                                                                 
  #CO-ABBR                                                                 
#TOTL-OVFLW-TRKS := CDIANUMB.#NUMBER                                       
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHK-IF-OVF-TRK                                           
ASSIGN CDIANUMB.#CUSTOMER-633 = CM-TDEST_INST.CUST_633                     
ASSIGN CDIANUMB.#CITY-333     = CM-TDEST_INST.DEST_333                     
ASSIGN CDIANUMB.#STATE        = CM-TDEST_INST.DEST_ST                      
#WK-ZTS:= CM-TDEST_INST.ZTS                                                
SELECT SINGLE 1 INTO #TOTL-OVFLW-TRKS FROM CM-TDEST_OVF_TRKS               
  WHERE CO_ABBR  =  +CO_ABBR                                               
    AND CUST_633 =  CM-TDEST_INST.CUST_633                                 
    AND DEST_333 =  CM-TDEST_INST.DEST_333                                 
    AND DEST_ST  =  CM-TDEST_INST.DEST_ST                                  
    AND OVF_TRK  =  #TRK                                                   
END-SELECT                                                                 
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-AUTOWAYBILL-RELEASE      
SELECT 'X' INTO #WB-RLS-FLG-B1                   
  FROM CM-TDMRG_PTRNS                                                      
  WHERE CUST_633 = CM-TDEST_INST.CUST_633                                  
    AND STN_333 = CM-TDEST_INST.DEST_333                                   
    AND STN_ST = CM-TDEST_INST.DEST_ST                                     
    AND DMRG_CASH_CD = 'C'                                                 
    AND CASH_PMT_EDIT IN ('R','B')                                         
    AND CM-TDEST_INST.WB_RLSE_FLG IN ('Y','A') 
  IF NO RECORDS FOUND                                                      
    MOVE (AD=U CD=GR) TO #WB-RLSE-FLG-CV                                   
    ESCAPE BOTTOM                                                          
  END-NOREC                                                                
  MOVE (AD=V CD=RE) TO #WB-RLSE-FLG-CV                                     
END-SELECT                                       
END-SUBROUTINE                                   
DEFINE SUBROUTINE CHECK-CCCR-EXISTS                                        
SELECT 'Y' INTO #CCCR-EXISTS                                               
  FROM OS-TCCCR_CDI_INFO                                                   
  WHERE CCCR_CUST_633 = CM-TDEST_INST.CUST_633                             
    AND STN_333       = CM-TDEST_INST.DEST_333                             
    AND STN_ST        = CM-TDEST_INST.DEST_ST                              
  IF NO RECORDS FOUND                                                      
    #CCCR-EXISTS := 'N'                                                    
    ESCAPE ROUTINE                                                         
  END-NOREC                                                                
END-SELECT                                                                 
END-SUBROUTINE                                                             
DEFINE SUBROUTINE GET-DIVISION                                             
SELECT BNSF_DIV_CD INTO #DIV-CD FROM CM-TSTN                               
 WHERE STN_333 = CM-TDEST_INST.DEST_333                                    
   AND STN_ST  = CM-TDEST_INST.DEST_ST                                     
 <<FETCH FIRST 1 ROW ONLY>>                                                
END-SELECT                                                                 
SELECT CUST_FULL INTO #CUST-FULL FROM CM-TCUSTOMER                         
 WHERE CUST_633  = CM-TDEST_INST.CUST_633                                  
 <<FETCH FIRST 1 ROW ONLY>>                                                
END-SELECT                                                                 
SELECT EMAIL_ADDR INTO #EMAIL-ADDR FROM OY-TRID_REQ_APRV                   
 WHERE CUST_DEST_INSTR_CD = 'DV'                                           
   AND DEPT_ID = #DIV-CD                                                   
 IF NO RECORDS FOUND                                                       
   #MAIL-ID(1) := 'INDXADMIN@BNSF.COM'                                     
   PERFORM SEND-EMAIL                                                      
   ESCAPE BOTTOM                                                           
 END-NOREC                                                                 
 #MAIL-ID(1) := #EMAIL-ADDR                                                
 PERFORM SEND-EMAIL                                                        
END-SELECT                                                                 
END-SUBROUTINE                                                             
DEFINE SUBROUTINE SEND-EMAIL                                               
CALLNAT 'STDN0500'  STDA0500                                               
IF IMS-REGION = 'IMSP1' OR= 'IMSP2' OR= 'IMSP3' OR= 'IMSP4'                
 COMPRESS #DIV-CD '- Please Add Contact to CCCR'                           
   INTO #MAIL-SUBJ                                                         
ELSE                                                                       
 COMPRESS  '(TEST)' #DIV-CD '- Please Add Contact to CCCR'                 
   INTO #MAIL-SUBJ                                                         
END-IF                                                                     
#I := 1                                                                    
#MAIL-LN80(#I) := 'Network Manager, '                                      
ADD 2 TO #I                                                                
COMPRESS 'A new Local Railroad Contact for ' #CUST-FULL 'at'               
CM-TDEST_INST.DEST_333 ',' CM-TDEST_INST.DEST_ST                           
ME:AEIN1594 XKSTYPE:SUB XKSMODE:S                                          
DEFINE DATA                                                                
PARAMETER                                                                  
1 #INPUT                                                                   
  2 CO_ABBR       (A4)                                                     
  2 CUST_633      (A12)                                                    
  2 CAR_INIT      (A4)                                                     
  2 CAR_NUMB      (A10)                                                    
  2 LOAD_EMPTY    (A1)                                                     
  2 EVT_STN_333   (A9)                                                     
  2 EVT_ST        (A2)                                                     
  2 WB_ID         (A26)                                                    
  2 WB_VERSION    (A3)                                                     
  2 CONTENTS      (A7)                                                     
  2 DEST_STN_333  (A9)                                                     
  2 DEST_STN_ST   (A2)                                                     
  2 RAJP          (A4)                                                     
  2 CUST_633_CNSG (A12)                                                    
  2 DEST_ZTS      (A6)                                                     
  2 REDEFINE DEST_ZTS                                                      
    3 DEST_ZT (A4)                                                         
    3 FILLER 2X                                                            
  2 SPL_COND_CD1  (A2)                                                     
  2 SPL_COND_CD2  (A2)                                                     
  2 SPL_COND_CD3  (A2)                                                     
  2 SPL_COND_CD4  (A2)                                                     
  2 GEN_DEST      (A6)                                                     
1 #TRN_TYPE          (A1)                                                  
1 #TRN_SECT          (A1)                                                  
1 #TRN_SYM           (A6)                                                  
1 #TRN_DAY           (A2)                                                  
1 #TRN_PRTY          (A1)                                                  
1 #STN_SEQ_NBR       (P5)                                                  
1 #RELEASE-ERROR     (L)                                                   
1 #PU-DT             (A10)                                                 
1 #PU-TM             (A8)                                                  
1 #PL-DT             (A10)                                                 
1 #PL-TM             (A8)                                                  
1 #CALLING-PROGRAM   (A08)                                                 
LOCAL USING SRIACQP2                                                       
LOCAL USING WOCAERRS                                                       
LOCAL USING WOCAERRR                                                       
LOCAL USING CDPDA-M                                                        
LOCAL USING CDAOBJ                                                         
LOCAL USING STDASTN                                                        
LOCAL USING WOCAADER                                                       
LOCAL                                                                      
1 OW-TWBM VIEW OF OW-TWBM                                                  
  2 EQP_INIT                                                               
  2 EQP_NUMB                                                               
  2 LOAD_EMPTY                                                             
  2 EVT_DT                                                                 
  2 EVT_TIME                                                               
  2 ORIG_333                                                               
  2 ORIG_ST                                                                
  2 WB_REC_TYPE                                                            
  2 WB_STAT_CD                                                             
  2 CUST_633_SHPR                                                          
1 OY-TCAR_INVENTORY VIEW OF OY-TCAR_INVENTORY                              
  2 OP_CITY_333                                                            
  2 OP_ST                                                                  
  2 DEST_333                                                               
  2 DEST_ST                                                                
  2 CO_ABBR                                                                
  2 STN_333                                                                
  2 STN_ST                                                                 
  2 TRK_NUMB                                                               
  2 CUST_SWTCH_CD                                        
  2 CAR_KIND                                                               
  2 CAR_INIT                                                               
  2 CAR_NUMB                                                               
  2 REDEFINE CAR_NUMB                                                      
    3 FILLER  4X                                                           
    3 CAR_NUMB6 (A6)                                     
1 OY-TCAR_HISTORY VIEW OF OY-TCAR_HISTORY                                  
  2 EVST_CD                                                                
  2 PROC_DTTM                                                              
1 CM-TCUST_SSI VIEW OF CM-TCUST_SSI                                        
1 CM-TINPT_ERR_DESC VIEW OF CM-TINPT_ERR_DESC                              
  2 INPT_ERR_NBR                                                           
  2 INPT_ERR_DESC                                                          
1 ACTIVE-BILL VIEW OF OW-TWBM                            
  2 WB_ID                                                                  
  2 WB_VRSN                                                                
  2 MVMT_REV_CODE                                                          
  2 LOAD_EMPTY                                                             
  2 DEST_333                                                               
  2 DEST_ST                                                                
1 OW-VWBMSTOP_INFO VIEW OF OW-TWBMSTOP_INFO                                
  2 STOP_333                                                               
  2 STOP_ST                                                                
1 WORCODES VIEW OF OM-TWOR_CODES                                           
  2 CD_NME                                                                 
  2 REDEFINE CD_NME                                                        
    3 #CAR-KIND   (A4)                                                     
1 #RC-COUNT       (P03)                                                    
1 #CUST_SWTCH_CD (A2)                                                      
1 #AEINBILL       (A9) INIT<'AEINBILL'>                                    
1 #AEIBILL-OFF    (L)                                                      
1 #AEIN1594       (A9) INIT<'AEIN1594'>                                    
1 #AEIRL-OFF      (L)                                                      
1 #REL-DTTM       (A18)                                                    
1 #REL-T          (T)                                                      
1 #HLD-REL-DT     (A10)                                                    
1 #HLD-REL-TM     (A8)                                                     
1 #EVT-DT         (D)                                                      
1 #EVT-TM         (T)                                                      
1 #RL-AFTER-RD (A18)                                                       
1 REDEFINE #RL-AFTER-RD                                                    
  2 #RL-DT (A10)                                                           
  2 #RL-TM (A8)                                                            
1 #MAX-EMAIL-LINES        (N3) CONST <50>                                  
1 SENDLTRPARM                                                              
  2 #MAILID               (A20)                                            
  2 #PASSWORD             (A16)                                            
  2 SERVICE               (A8)  INIT<'SENDLTTR'>                           
  2 SVC-TYPE              (A8)                                             
  2 RETURN-CODE           (N3)                                             
  2 ERROR-AREA                                                             
    3 ERROR-MESSAGES      (5)                                              
      04 ERROR-LINE        (A80)                                           
  2 MAX-LINES             (N3)                                             
  2 LETTER                                                                 
    3 SEND-LINES          (1:#MAX-EMAIL-LINES)                             
      04 ELINE             (A79)                                           
      04 ELINE-FILL        (A1)                                            
1 #ERROR-MSG              (A38)                                            
1 #MAILX                  (P3)                                             
1 #NO                     (A1) INIT<'N'>                                   
1 #BILL                   (A1)                                             
1 #ERR-CD                 (A12)                                            
1 REDEFINE #ERR-CD                                                         
  2 #ERR-CD-2             (A02)                                            
1 #STNUM                  (A6)                                             
1 REDEFINE #STNUM                                                          
  2 #STNUM-BLANK          (A1)                                             
  2 #STNUM-A5             (A5)                                             
1 #SSI                    (L)                                              
1 #SYSTEM                 (A10) CONST<'AEIN1594'>                          
1 #WRITE-LVL              (A1)                                             
1 #SWITCH-EXISTS          (L)                                              
1 #PROGRAM                (A8)  INIT <*PROGRAM>                            
1 #SWITCH-NAME            (A10) INIT <'SRI WRITES'>                        
1 #COMPANY-MATERIAL       (L)                            
1 #AT-STOP-LOCATION       (L)                                              
1 REDEFINE #AT-STOP-LOCATION                                               
  2 #AT-STOP-LOCATION-X   (B1)                                             
1 #AT-DESTINATION         (L)                                              
1 #CKND                   (A4)                                             
1 #CM-RELEASE             (L)                                              
1 #USER-ID                (A8) INIT<'AEI'>                                 
1 #VOID-EVT-CD            (A2) INIT<'AP'>                                  
1 #VOID-EVST-CD           (A2)                                             
1 #CHG-TIME-FLAG          (A1) INIT<'N'>                                   
1 #CHG-DT                 (A6)                                             
1 #CHG-TM                 (A4)                                             
1 #BLANK-ABBR             (A6)                                             
1 #BLANK-MSG              (A4)                                             
1 #MOVE-FLAG              (A1)                                             
1 #TRK_NUMBER             (A4)                                             
1 #STN_ABBR               (A6)                                             
1 #DAT2                   (A6)                                             
1 #TIME2                  (A4)                                             
1 #CCNP                   (A2)                                             
1 #COPY-AP                (A1) INIT <'N'>                                  
1 #ERR-MSG                (A79)                                            
INDEPENDENT                                                                
1 +WRITE-DIAG             (L)                                              
1 +WOCOR-CALLING-PROCESS  (A3)                                             
END-DEFINE                                                                 
+WOCOR-CALLING-PROCESS := 'AEI' 
CALLNAT 'STDNWLVL' #SYSTEM #WRITE-LVL                                      
IF #WRITE-LVL > '0' AND *DEVICE = 'BATCH'                                  
  WRITE 'in' #PROGRAM '=' #WRITE-LVL                                       
END-IF                                                                     
CALLNAT 'AEINCODE' #SYSTEM #SWITCH-NAME #SWITCH-EXISTS                     
IF #SWITCH-EXISTS                                                          
  +WRITE-DIAG := TRUE                                                      
END-IF                                                                     
IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                                  
  WRITE '=' *PROGRAM +WRITE-DIAG                                           
END-IF                                                                     
PERFORM INITIALIZE-SRIACQP2                                                
FIND (1) OY-TCAR_INVENTORY WITH CO_ABBR = SRIACQP2.CO_ABBR                 
    AND CAR_INIT = SRIACQP2.CAR_INIT                                       
    AND CAR_NUMB = SRIACQP2.CAR_NUMB                                       
END-FIND                                                                   
PERFORM CHECK-COMPANY-MATERIAL                                             
IF #CM-RELEASE                                                             
  IF #AT-STOP-LOCATION                                                     
    ASSIGN SRIACQP2.RELS_CD = 'RP'                                         
  ELSE                                                                     
    IF #AT-DESTINATION                                                     
      IGNORE                                                               
    ELSE                                                                   
       PERFORM VOID-PLACEMENT                                              
      ESCAPE ROUTINE                                                       
    END-IF                                                                 
  END-IF                                                                   
END-IF                                                   
FIND OW-TWBM                                                               
    WITH EQP_INIT   = SRIACQP2.CAR_INIT                                    
    AND EQP_NUMB    = SRIACQP2.CAR_NUMB                                    
    AND WB_REC_TYPE = 'W'                                                  
    AND WB_STAT_CD  = 'S'                                                  
    AND CO_ABBR = #INPUT.CO_ABBR                                           
  IF NO RECORDS FOUND                                                      
    MOVE 'E' TO OW-TWBM.LOAD_EMPTY                                         
    CALLNAT 'SRINCRRC' SRIACQP2.CO_ABBR SRIACQP2.CAR_INIT                  
      SRIACQP2.CAR_NUMB SRIACQP2.EVT_STN_333 SRIACQP2.EVT_ST               
      #INPUT.DEST_ZT #CUST_SWTCH_CD SRIACQP2.LOAD_EMPTY                    
      OW-TWBM.LOAD_EMPTY SRIACQP2.RELS_CD                                  
    IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                              
      WRITE #PROGRAM 'came back from SRINCRRC #1'                          
    END-IF                                                                 
    DECIDE FOR FIRST CONDITION                                             
      WHEN #CM-RELEASE                                   
        IF #AT-STOP-LOCATION                                               
          ASSIGN SRIACQP2.RELS_CD = 'RP'                                   
        ELSE                                                               
          IF #AT-DESTINATION                                               
             PERFORM VOID-PLACEMENT                                        
            ESCAPE ROUTINE                                                 
          END-IF                                                           
        END-IF                                           
      WHEN SRIACQP2.RELS_CD = 'RC'                                         
        ASSIGN SRIACQP2.RELS_CD = 'RC'                                     
      WHEN SRIACQP2.RELS_CD = 'CC'                           
        ASSIGN SRIACQP2.RELS_CD = 'CC'                       
      WHEN SRIACQP2.LOAD_EMPTY = 'L'                                       
        ASSIGN SRIACQP2.RELS_CD = 'RE'                                     
      WHEN NONE                                                            
        ASSIGN SRIACQP2.RELS_CD = 'RL'                                     
    END-DECIDE                                                             
    PERFORM REL-EVT-DTTM                                                   
    ESCAPE BOTTOM                                                          
  END-NOREC                                                                
  DECIDE FOR FIRST CONDITION                                               
    WHEN #CM-RELEASE AND #AT-STOP-LOCATION               
      ASSIGN SRIACQP2.RELS_CD = 'RP'                     
    WHEN OW-TWBM.LOAD_EMPTY = 'L'                                          
      IF SRIACQP2.LOAD_EMPTY = 'L'                                         
        IF (OW-TWBM.ORIG_333 = OY-TCAR_INVENTORY.OP_CITY_333 AND           
            OW-TWBM.ORIG_ST = OY-TCAR_INVENTORY.OP_ST)                     
          
          IGNORE                                                           
        ELSE                                                               
          PERFORM CHECK-SSI                                                
          IF #SSI                                                          
            IGNORE                                                         
          ELSE                                                             
            COMPRESS 'AEIN1594-incorrect user"s bill-not recognized by '   
              'SSI' INTO WOCAADER.MSG                                      
            PERFORM TRAIN-ERROR                                            
            ESCAPE BOTTOM 
          END-IF                                                           
          IF #RELEASE-ERROR                                                
            IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                      
              WRITE '=' #PROGRAM 'escaping out of aein1594'                
            END-IF                                                         
            ESCAPE ROUTINE IMMEDIATE                                       
          END-IF                                                           
        END-IF                                                             
        ASSIGN SRIACQP2.RELS_CD = 'RD'                                     
        ASSIGN SRIACQP2.SPL_COND_CD1 = 'AP'                                
        ASSIGN SRIACQP2.CUST_633 = SRIACQP2.CUST_633_CNSG                  
        IF NOT (SRIACQP2.CONTENTS = MASK ('48') OR = MASK ('49'))          
          RESET SRIACQP2.CONTENTS                                          
        END-IF                                                             
      ELSE                                                                 
        ASSIGN SRIACQP2.RELS_CD = 'RL'                                     
      END-IF                                                               
    WHEN OW-TWBM.LOAD_EMPTY = 'E'                                          
      IF SRIACQP2.LOAD_EMPTY = 'E'                                         
        RESET #CUST_SWTCH_CD                                               
        PL.                                                                
        FIND NUMBER OY-TCAR_INVENTORY WITH CO_ABBR = SRIACQP2.CO_ABBR      
          AND CAR_INIT = SRIACQP2.CAR_INIT                                 
          AND CAR_NUMB = SRIACQP2.CAR_NUMB                                 
          AND CUST_SWTCH_CD = 'PL'                                         
        IF *NUMBER (PL.) > 0                                               
          #CUST_SWTCH_CD := 'PL'                                           
        END-IF                                                             
        CALLNAT 'SRINCRRC' SRIACQP2.CO_ABBR SRIACQP2.CAR_INIT              
          SRIACQP2.CAR_NUMB SRIACQP2.EVT_STN_333 SRIACQP2.EVT_ST           
          #INPUT.DEST_ZT #CUST_SWTCH_CD SRIACQP2.LOAD_EMPTY                
          OW-TWBM.LOAD_EMPTY SRIACQP2.RELS_CD                              
        IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                          
          WRITE #PROGRAM 'came back from SRINCRRC #2'                      
        END-IF                                                             
        IF SRIACQP2.RELS_CD ^= 'RC'                          
        AND SRIACQP2.RELS_CD ^= 'CC'                         
          IF (OW-TWBM.ORIG_333  = OY-TCAR_INVENTORY.OP_CITY_333 AND        
              OW-TWBM.ORIG_ST   = OY-TCAR_INVENTORY.OP_ST)                 
            
            IGNORE                                                         
          ELSE                                                             
            PERFORM CHECK-SSI                                              
            IF #SSI                                                        
              IGNORE                                                       
            ELSE                                                           
              COMPRESS 'AEIN1594-incorrect user"s bill '                   
                INTO WOCAADER.MSG                                          
              PERFORM TRAIN-ERROR                                          
              ESCAPE BOTTOM 
            END-IF          
            IF #RELEASE-ERROR                                              
              ESCAPE ROUTINE IMMEDIATE                                     
            END-IF                                                         
          END-IF                                                           
          ASSIGN SRIACQP2.RELS_CD = 'NU'                                   
        END-IF                                                             
      ELSE                                                                 
        ASSIGN SRIACQP2.RELS_CD = 'RE'                                     
      END-IF                                                               
    WHEN NONE IGNORE                                                       
  END-DECIDE                                                               


  IF (OW-TWBM.EVT_DT < #PL-DT                                              
      OR (OW-TWBM.EVT_DT = #PL-DT AND OW-TWBM.EVT_TIME < #PL-TM)) OR       
      (OW-TWBM.EVT_DT > #PU-DT                                             
      OR (OW-TWBM.EVT_DT = #PU-DT AND OW-TWBM.EVT_TIME > #PU-TM))          
    PERFORM REL-EVT-DTTM                                                   
    IF SRIACQP2.EVENT_DATE = ' '                                           
      IGNORE                                                               
    ELSE                                                                   
      MOVE EDITED SRIACQP2.EVENT_DATE TO #EVT-DT(EM=MM/DD/YYYY)            
      MOVE EDITED SRIACQP2.EVENT_TIME TO #EVT-TM (EM=HH:II:SS)             
    END-IF                                                                 
  ELSE                                                                     
    MOVE EDITED OW-TWBM.EVT_DT TO #EVT-DT(EM=YYYY-MM-DD)                   
    MOVE EDITED #EVT-DT (EM=MM/DD/YYYY) TO SRIACQP2.EVENT_DATE             
    MOVE EDITED OW-TWBM.EVT_TIME TO #EVT-TM(EM=HH.II.SS)                   
    MOVE EDITED #EVT-TM (EM=HH:II:SS) TO SRIACQP2.EVENT_TIME               
  END-IF                                                                   
END-FIND                                                                   
IF SRIACQP2.EVENT_DATE = ' ' AND SRIACQP2.EVENT_TIME = ' '                 
  ASSIGN #RELEASE-ERROR = TRUE                                             
ELSE                                                                       
  PERFORM CALL-SRIN1594                                                    
  IF SRIACQP2.RELS_CD = 'RD'                                               
      AND NOT #RELEASE-ERROR                                               
    PERFORM INITIALIZE-SRIACQP2                                            
    SRIACQP2.RELS_CD := 'RL'                                               
    SRIACQP2.LOAD_EMPTY := 'E'                                             
    MOVE EDITED #EVT-DT(EM=YYYY-MM-DD) TO #RL-DT                           
    MOVE EDITED #EVT-TM(EM=HH.II.SS) TO #RL-TM                             
    MOVE EDITED #RL-AFTER-RD TO #EVT-TM(EM=YYYY-MM-DDHH.II.SS)             
    ADD 1800 TO #EVT-TM                                                    
    MOVE EDITED #EVT-TM (EM=YYYY-MM-DDHH.II.SS) TO #RL-AFTER-RD            
    MOVE EDITED #RL-DT TO #EVT-DT (EM=YYYY-MM-DD)                          
    MOVE EDITED #EVT-DT (EM=MM/DD/YYYY) TO SRIACQP2.EVENT_DATE             
    MOVE EDITED #EVT-TM (EM=HH:II:SS) TO SRIACQP2.EVENT_TIME               
    PERFORM CALL-SRIN1594                                                  
  END-IF                                                                   
END-IF                                                                     
DEFINE SUBROUTINE INITIALIZE-SRIACQP2                                      
IF #WRITE-LVL > '2' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'inside of INITIALIZE-SRIACQP2'                           
END-IF                                                                     
ASSIGN SRIACQP2.LTERM         = #INPUT.GEN_DEST                            
ASSIGN SRIACQP2.CUST_CNTC_NME = 'AEI'                                      
ASSIGN SRIACQP2.CO_ABBR       = #INPUT.CO_ABBR                             
ASSIGN SRIACQP2.TYPE          = 'RELEASE'                                  
ASSIGN SRIACQP2.CUST_633      = #INPUT.CUST_633                            
ASSIGN SRIACQP2.CAR_INIT      = #INPUT.CAR_INIT                            
ASSIGN SRIACQP2.CAR_NUMB      = #INPUT.CAR_NUMB                            
ASSIGN SRIACQP2.LOAD_EMPTY    = #INPUT.LOAD_EMPTY                          
ASSIGN SRIACQP2.EVT_STN_333   = #INPUT.EVT_STN_333                         
ASSIGN SRIACQP2.EVT_ST        = #INPUT.EVT_ST                              
ASSIGN SRIACQP2.WB_ID         = #INPUT.WB_ID                               
ASSIGN SRIACQP2.WB_VERSION    = #INPUT.WB_VERSION                          
ASSIGN SRIACQP2.CONTENTS      = #INPUT.CONTENTS                            
ASSIGN SRIACQP2.DEST_STN_333  = #INPUT.DEST_STN_333                        
ASSIGN SRIACQP2.DEST_STN_ST   = #INPUT.DEST_STN_ST                         
ASSIGN SRIACQP2.RAJP          = #INPUT.RAJP                                
ASSIGN SRIACQP2.CUST_633_CNSG = #INPUT.CUST_633_CNSG                       
ASSIGN SRIACQP2.DEST_ZTS      = #INPUT.DEST_ZTS                            
ASSIGN SRIACQP2.SPL_COND_CD1  = #INPUT.SPL_COND_CD1                        
ASSIGN SRIACQP2.SPL_COND_CD2  = #INPUT.SPL_COND_CD2                        
ASSIGN SRIACQP2.SPL_COND_CD3  = #INPUT.SPL_COND_CD3                        
ASSIGN SRIACQP2.SPL_COND_CD4  = #INPUT.SPL_COND_CD4                        
ASSIGN SRIACQP2.RWC_NBR       = 0                                          
ASSIGN SRIACQP2.WB_FLG        = 'N'                                        
ASSIGN SRIACQP2.SPL_COND_CD5  = ' '                                        
ASSIGN SRIACQP2.SPL_COND_CD6  = ' '                                        
ASSIGN SRIACQP2.SWTCH_CD      = ' '                                        
ASSIGN SRIACQP2.WB_VRSN       = 0                                          
ASSIGN #RELEASE-ERROR         = FALSE                                      
END-SUBROUTINE                                                             
DEFINE SUBROUTINE REL-EVT-DTTM                                             
IF #WRITE-LVL > '2' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'inside of REL-EVT-DTTM'                                  
END-IF                                                                     
COMPRESS #PU-DT #PU-TM INTO #REL-DTTM LEAVING NO                           
MOVE EDITED #REL-DTTM TO #REL-T (EM=YYYY-MM-DDHH.II.SS)                    
IF #CALLING-PROGRAM = 'AEINCARS'                                           
  SUBTRACT 600 FROM #REL-T                                                 
ELSE                                                                       
  SUBTRACT 36000 FROM #REL-T                                               
END-IF                                                                     
MOVE EDITED #REL-T (EM=YYYY-MM-DD) TO #HLD-REL-DT                          
MOVE EDITED #REL-T (EM=HH.II.SS) TO #HLD-REL-TM                            
IF (#HLD-REL-DT < #PL-DT                                                   
    OR (#HLD-REL-DT = #PL-DT AND #HLD-REL-TM <= #PL-TM))                   
  IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                                
    WRITE #PROGRAM 'inside of REL-EVT-DTTM'                                
      '=' #HLD-REL-DT '=' #PL-DT / '=' #HLD-REL-TM '=' #PL-TM              
  END-IF                                                                   
  IF WOCAERRS.PROC_DTTM = ' '                                              
    CALL 'GENATMSP' WOCAERRS.PROC_DTTM                                     
  END-IF                                                                   
  ADD 1 TO WOCAERRS.SEQ_NUMB                                               
  ASSIGN WOCAERRS.CO_ABBR  = #INPUT.CO_ABBR                                
  ASSIGN WOCAERRS.TRN_SYM  = #TRN_SYM                                      
  ASSIGN WOCAERRS.TRN_DAY  = #TRN_DAY                                      
  ASSIGN WOCAERRS.TRN_TYPE = #TRN_TYPE                                     
  ASSIGN WOCAERRS.TRN_SECT = #TRN_SECT                                     
  ASSIGN WOCAERRS.TRN_PRTY = #TRN_PRTY                                     
  ASSIGN WOCAERRS.STN_333  = #INPUT.EVT_STN_333                            
  ASSIGN WOCAERRS.STN_ST   = #INPUT.EVT_ST                                 
  ASSIGN WOCAERRS.STN_SEQ_NBR = #STN_SEQ_NBR                               
  ASSIGN CDAOBJ.#FUNCTION  =  'GET'                                        
  CALLNAT 'WOCNERRS' WOCAERRS WOCAERRS-ID                                  
    #EVENT_DATE #EVENT_TIME WOCAERRR CDAOBJ MSG-INFO                       
  IF NOT CDAOBJ.#EXISTS                                                    
    ASSIGN CDAOBJ.#FUNCTION = 'STORE'                                      
    ASSIGN WOCAERRS.STN_SEQ_NBR  = #STN_SEQ_NBR                            
    ASSIGN #EVENT_DATE = SRIACQP2.EVENT_DATE                               
    ASSIGN #EVENT_TIME = SRIACQP2.EVENT_TIME                               
    ASSIGN WOCAERRS.PGM_NME   = *PROGRAM                                   
    ASSIGN WOCAERRS.EVT_CD    = 'RL'                                       
    ASSIGN WOCAERRS.EVST_CD   = 'ER'                                       
    ASSIGN WOCAERRS.EQP_INIT  = #INPUT.CAR_INIT                            
    ASSIGN WOCAERRS.EQP_NUMB  = #INPUT.CAR_NUMB                            
    ASSIGN WOCAERRS.ERR_CLSF_TYP = '1730'                                  
    ASSIGN WOCAERRS.ERR_MSG_DATA =                                         
      'Release date/time prior to placement'                               
    CALLNAT 'WOCNERRS' WOCAERRS WOCAERRS-ID                                
      #EVENT_DATE #EVENT_TIME WOCAERRR CDAOBJ MSG-INFO                     
  END-IF                                                                   
ELSE                                                                       
  MOVE EDITED #REL-T (EM=MM/DD/YYYY) TO SRIACQP2.EVENT_DATE                
  MOVE EDITED #REL-T (EM=HH:II:SS) TO SRIACQP2.EVENT_TIME                  
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CALL-SRIN1594                                            
IF #WRITE-LVL > '2' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'inside of CALL-SRIN1594'                                 
END-IF                                                                     
SRIACQP2.CO_ABBR := #INPUT.CO_ABBR                                         
CALLNAT 'SRIN1594' SRIACQP2                                                
  #TRN_TYPE #TRN_SECT #TRN_SYM #TRN_DAY #TRN_PRTY                          
  #STN_SEQ_NBR #RELEASE-ERROR                                              
  #ERR-CD                                                                  
RESET +WRITE-DIAG                                                          
IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'after call to srin1594' '=' #ERR-CD                      
END-IF                                                                     
IF #ERR-CD = '69'                                                          
  IGNORE                                                                   
ELSE                                                                       
  IF #ERR-CD > ' '                                                         
    MOVE TRUE TO #RELEASE-ERROR                                            
    PERFORM GET-INDUSTRY-ERROR-MESSAGE                                     
    COMPRESS SRIACQP2.CAR_INIT SRIACQP2.CAR_NUMB                           
      'AEIN1594-1731' INPT_ERR_DESC INTO WOCAADER.MSG                      
    PERFORM TRAIN-ERROR                                                    
    IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                              
      WRITE '=' #PROGRAM 'inside of CALL-SRIN1594 and there is a woedit'   
        '=' #ERR-CD '=' WOCAADER.MSG                                       
    END-IF                                                                 
  END-IF                                                                   
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-SSI                                                
IF #WRITE-LVL > '2' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'inside of CHECK-SSI'                                     
END-IF                                                                     



RESET STDASTN                                                              
STDASTN.CO_ABBR := OY-TCAR_INVENTORY.CO_ABBR                               
STDASTN.STN_333 := OY-TCAR_INVENTORY.STN_333                               
STDASTN.STN_ST  := OY-TCAR_INVENTORY.STN_ST                                
CALLNAT 'STDNSTN' STDASTN 
#STNUM-A5 := STDASTN.STNUM   
FSSI.   FIND NUMBER CM-TCUST_SSI                                           
  WITH CUST_633 = OW-TWBM.CUST_633_SHPR                                    
  AND DEST_333 = OW-TWBM.ORIG_333                                          
  AND DEST_ST = OW-TWBM.ORIG_ST                                            
  AND (OTD_BLK_STNUM = #STNUM                                              
OR (DEST_333_CHG = OY-TCAR_INVENTORY.STN_333                               
  AND DEST_ST_CHG = OY-TCAR_INVENTORY.STN_ST))                             
IF *NUMBER (FSSI.) EQ 0              
  IF (OW-TWBM.ORIG_333 NE OY-TCAR_INVENTORY.OP_CITY_333)                   
      OR (OW-TWBM.ORIG_333 = OY-TCAR_INVENTORY.OP_CITY_333 AND             
      OW-TWBM.ORIG_ST NE OY-TCAR_INVENTORY.OP_ST)                          
    IF SRIACQP2.LOAD_EMPTY = 'L'                                           
      ASSIGN SRIACQP2.RELS_CD = 'RE'                                       
    ELSE                                                                   
      ASSIGN SRIACQP2.RELS_CD = 'RL'                                       
    END-IF                                                                 
    PERFORM REL-EVT-DTTM                                                   
    RESET #SSI                                                             
    MOVE TRUE TO #RELEASE-ERROR                                            
    ESCAPE ROUTINE                                                         
  END-IF                                                                   
ELSE                                                                       
  #SSI := TRUE                                                             
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE TRAIN-ERROR                                              
IF #WRITE-LVL > '2' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'inside of TRAIN-ERROR'                                   
END-IF                                                                     
ASSIGN WOCAADER.CO_ABBR        = #INPUT.CO_ABBR                            
ASSIGN WOCAADER.TRN_TYPE       = #TRN_TYPE                                 
ASSIGN WOCAADER.TRN_SECT       = #TRN_SECT                                 
ASSIGN WOCAADER.TRN_SYM        = #TRN_SYM                                  
ASSIGN WOCAADER.TRN_DAY        = #TRN_DAY                                  
ASSIGN WOCAADER.TRN_PRTY       = #TRN_PRTY                                 
ASSIGN WOCAADER.STN_333        = #INPUT.EVT_STN_333                        
ASSIGN WOCAADER.STN_ST         = #INPUT.EVT_ST                             
ASSIGN WOCAADER.STN_SEQ_NBR    = #STN_SEQ_NBR                              
ASSIGN WOCAADER.EVT_CD         = 'ER' 
ASSIGN WOCAADER.EQP_INIT       = SRIACQP2.CAR_INIT                         
ASSIGN WOCAADER.EQP_NUMB       = SRIACQP2.CAR_NUMB                         
MOVE EDITED SRIACQP2.EVENT_DATE TO #EVT-DT(EM=MM/DD/YYYY)                  
MOVE EDITED SRIACQP2.EVENT_TIME TO #EVT-TM (EM=HH:II:SS)                   
ASSIGN WOCAADER.EVT_DT         = #EVT-DT                                   
ASSIGN WOCAADER.EVT_TM         = #EVT-TM                                   
CALLNAT 'WOCNADER' WOCAADER                                                
END-SUBROUTINE                                                             
DEFINE SUBROUTINE GET-INDUSTRY-ERROR-MESSAGE                               
IF #WRITE-LVL > '3' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM 'inside of GET-INDUSTRY-ERROR-MESSAGE'                    
END-IF                                                                     
SELECT * INTO VIEW CM-TINPT_ERR_DESC                                       
    FROM CM-TINPT_ERR_DESC                                                 
    WHERE INPT_ERR_NBR = #ERR-CD-2                                         
  ESCAPE BOTTOM                                                            
END-SELECT                                                                 
IF #WRITE-LVL > '1' AND *DEVICE = 'BATCH'                                  
  WRITE #PROGRAM '=' INPT_ERR_NBR '=' INPT_ERR_DESC                        
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE CHECK-COMPANY-MATERIAL                     
IF OY-TCAR_INVENTORY.CUST_SWTCH_CD <> 'PL'                                 
  ESCAPE ROUTINE                                                           
END-IF                                                                     
RESET #COMPANY-MATERIAL #AT-STOP-LOCATION #AT-DESTINATION #CM-RELEASE      
SELECT * INTO VIEW ACTIVE-BILL                                             
    FROM OW-TWBM                                                           
    WHERE EQP_INIT    = SRIACQP2.CAR_INIT                                  
    AND   EQP_NUMB    = SRIACQP2.CAR_NUMB                                  
    AND   WB_STAT_CD  = 'A'                                                
    AND   CO_ABBR     = #INPUT.CO_ABBR                                     
    <<FETCH FIRST 1 ROW ONLY>>                                             
  IF NO RECORDS                                                            
    ESCAPE BOTTOM                                                          
  END-NOREC                                                                
  IF ACTIVE-BILL.MVMT_REV_CODE = 'CM'                                      
    AND ACTIVE-BILL.LOAD_EMPTY = 'L'                                       
    #COMPANY-MATERIAL := TRUE                                              
  END-IF                                                                   
  IF OY-TCAR_INVENTORY.STN_333 = ACTIVE-BILL.DEST_333 AND                  
     OY-TCAR_INVENTORY.STN_ST  = ACTIVE-BILL.DEST_ST                       
    #AT-DESTINATION := TRUE                                                
  END-IF                                                                   
  SELECT 'X' INTO #AT-STOP-LOCATION-X                                      
      FROM OW-TWBMSTOP_INFO                                                
      WHERE WB_ID         = ACTIVE-BILL.WB_ID                              
      AND   WB_VRSN       = ACTIVE-BILL.WB_VRSN                            
      AND   STOP_333      = OY-TCAR_INVENTORY.STN_333                      
      AND   STOP_ST       = OY-TCAR_INVENTORY.STN_ST                       
      AND   STOP_CMPL_FLG = 'N'                                            
      ORDER BY SEQ_SORT                                                    
      <<FETCH FIRST 1 ROW ONLY>>                                           
    IF NO RECORDS                                                          
      ESCAPE BOTTOM                                                        
    END-NOREC                                                              
  END-SELECT                                                               
END-SELECT                                                                 
IF #COMPANY-MATERIAL                                                       
  SELECT * INTO VIEW WORCODES                                              
      FROM OM-TWOR_CODES                                                   
      WHERE APPL_SUBSYS_CD = 'CM-CARKIND'                                  
      AND   LTRIM(CD_NME)  = OY-TCAR_INVENTORY.CAR_KIND                    
      AND   QLF_CD_1       = 'Y'                                           
    IF NO RECORDS                                                          
      ESCAPE BOTTOM                                                        
    END-NOREC                                                              
    #CM-RELEASE := TRUE                                                    
    ESCAPE BOTTOM                                                          
  END-SELECT                                                               
END-IF                                                                     
IF *DEVICE = 'BATCH'                                                       
  WRITE '=' #COMPANY-MATERIAL '=' #AT-STOP-LOCATION '=' #CM-RELEASE        
END-IF                                                                     
END-SUBROUTINE                                                             
DEFINE SUBROUTINE VOID-PLACEMENT                             
SELECT EVT_CD,EVST_CD                                                      
    INTO #VOID-EVT-CD,#VOID-EVST-CD                                        
    FROM OY-TCAR_HISTORY                                                   
    WHERE CAR_INIT   = OY-TCAR_INVENTORY.CAR_INIT                          
    AND   CAR_NUMB   = OY-TCAR_INVENTORY.CAR_NUMB                          
    AND   STN_333    = OY-TCAR_INVENTORY.STN_333                           
    AND   STN_ST     = OY-TCAR_INVENTORY.STN_ST                            
    AND   CO_ABBR    = #INPUT.CO_ABBR                                      
    AND   EVT_CD     = 'AP'                                                
    ORDER BY PROC_DTTM DESC                                                
    <<FETCH FIRST 1 ROW ONLY>>                                             
  IF NO RECORDS                                                            
    ESCAPE BOTTOM                                                          
  END-NOREC                                                                
END-SELECT                                                                 
IF OY-TCAR_INVENTORY.CUST_SWTCH_CD = 'PL'                                  
  RESET STDASTN                                                            
  STDASTN.CO_ABBR := #INPUT.CO_ABBR                                        
  STDASTN.STN_333 := OY-TCAR_INVENTORY.STN_333                             
  STDASTN.STN_ST  := OY-TCAR_INVENTORY.STN_ST                              
  CALLNAT 'STDNSTN' STDASTN                                                
  CALLNAT 'VIANCREC' #INPUT.CO_ABBR STDASTN.TIME_ZONE                      
      #USER-ID STDASTN.STN_ABBR OY-TCAR_INVENTORY.CAR_INIT                 
      OY-TCAR_INVENTORY.CAR_NUMB6 #VOID-EVT-CD #VOID-EVST-CD               
      #CHG-TIME-FLAG #CHG-DT #CHG-TM #MOVE-FLAG #TRK_NUMBER                
      #STN_ABBR #DAT2 #TIME2 #CCNP #COPY-AP #BLANK-ABBR #BLANK-MSG         
      #ERR-MSG                                                             
 END-IF                                                                    
END-SUBROUTINE                                                             
END                                                                        
